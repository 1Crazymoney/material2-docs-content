{"version":3,"sources":["src/material-examples/material-examples-cdk-table.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","materialExamples","cdk","table","core","tslib","collections","rxjs","this","tslib_1","ELEMENT_DATA","position","name","weight","symbol","CdkTableBasicFlexExample","displayedColumns","dataSource","ExampleDataSource","decorators","type","Component","args","selector","template","styles","_super","_this","apply","arguments","data","BehaviorSubject","__extends","prototype","connect","disconnect","DataSource","ELEMENT_DATA$1","CdkTableBasicExample","ExampleDataSource$1","EXAMPLES","CdkTableExamplesModule","NgModule","imports","CdkTableModule","declarations","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/table'), require('@angular/core'), require('tslib'), require('@angular/cdk/collections'), require('rxjs')) :\n    typeof define === 'function' && define.amd ? define('@angular/material-examples/cdk/table', ['exports', '@angular/cdk/table', '@angular/core', 'tslib', '@angular/cdk/collections', 'rxjs'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.materialExamples = global.ng.materialExamples || {}, global.ng.materialExamples.cdk = global.ng.materialExamples.cdk || {}, global.ng.materialExamples.cdk.table = {}), global.ng.cdk.table, global.ng.core, global.tslib, global.ng.cdk.collections, global.rxjs));\n}(this, function (exports, table, core, tslib_1, collections, rxjs) { 'use strict';\n\n    var ELEMENT_DATA = [\n        { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n        { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n        { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n        { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n        { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n        { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n        { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n        { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n        { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n        { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n    ];\n    /**\n     * @title Basic use of `<cdk-table>` (uses display flex)\n     */\n    var CdkTableBasicFlexExample = /** @class */ (function () {\n        function CdkTableBasicFlexExample() {\n            this.displayedColumns = ['position', 'name', 'weight', 'symbol'];\n            this.dataSource = new ExampleDataSource();\n        }\n        CdkTableBasicFlexExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'cdk-table-basic-flex-example',\n                        template: \"<cdk-table [dataSource]=\\\"dataSource\\\">\\n  <!-- Position Column -->\\n  <ng-container cdkColumnDef=\\\"position\\\">\\n    <cdk-header-cell *cdkHeaderCellDef> No. </cdk-header-cell>\\n    <cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.position}} </cdk-cell>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container cdkColumnDef=\\\"name\\\">\\n    <cdk-header-cell *cdkHeaderCellDef> Name </cdk-header-cell>\\n    <cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.name}} </cdk-cell>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container cdkColumnDef=\\\"weight\\\">\\n    <cdk-header-cell *cdkHeaderCellDef> Weight </cdk-header-cell>\\n    <cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.weight}} </cdk-cell>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container cdkColumnDef=\\\"symbol\\\">\\n    <cdk-header-cell *cdkHeaderCellDef> Symbol </cdk-header-cell>\\n    <cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.symbol}} </cdk-cell>\\n  </ng-container>\\n\\n  <cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></cdk-header-row>\\n  <cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></cdk-row>\\n</cdk-table>\\n\",\n                        styles: [\"/**\\n * Add basic flex styling so that the cells evenly space themselves in the row.\\n */\\ncdk-row, cdk-header-row, cdk-footer-row {\\n  display: flex;\\n}\\n\\ncdk-cell, cdk-header-cell, cdk-footer-cell {\\n  flex: 1;\\n}\\n\"]\n                    }] }\n        ];\n        return CdkTableBasicFlexExample;\n    }());\n    /**\n     * Data source to provide what data should be rendered in the table. Note that the data source\n     * can retrieve its data in any way. In this case, the data source is provided a reference\n     * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n     * the underlying data. Instead, it only needs to take the data and send the table exactly what\n     * should be rendered.\n     */\n    var ExampleDataSource = /** @class */ (function (_super) {\n        tslib_1.__extends(ExampleDataSource, _super);\n        function ExampleDataSource() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /** Stream of data that is provided to the table. */\n            _this.data = new rxjs.BehaviorSubject(ELEMENT_DATA);\n            return _this;\n        }\n        /** Connect function called by the table to retrieve one stream containing the data to render. */\n        ExampleDataSource.prototype.connect = function () {\n            return this.data;\n        };\n        ExampleDataSource.prototype.disconnect = function () { };\n        return ExampleDataSource;\n    }(collections.DataSource));\n\n    var ELEMENT_DATA$1 = [\n        { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n        { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n        { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n        { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n        { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n        { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n        { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n        { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n        { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n        { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n    ];\n    /**\n     * @title Basic CDK data-table\n     */\n    var CdkTableBasicExample = /** @class */ (function () {\n        function CdkTableBasicExample() {\n            this.displayedColumns = ['position', 'name', 'weight', 'symbol'];\n            this.dataSource = new ExampleDataSource$1();\n        }\n        CdkTableBasicExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'cdk-table-basic-example',\n                        template: \"<table cdk-table [dataSource]=\\\"dataSource\\\">\\n  <!-- Position Column -->\\n  <ng-container cdkColumnDef=\\\"position\\\">\\n    <th cdk-header-cell *cdkHeaderCellDef> No. </th>\\n    <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.position}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container cdkColumnDef=\\\"name\\\">\\n    <th cdk-header-cell *cdkHeaderCellDef> Name </th>\\n    <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.name}} </td>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container cdkColumnDef=\\\"weight\\\">\\n    <th cdk-header-cell *cdkHeaderCellDef> Weight </th>\\n    <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.weight}} </td>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container cdkColumnDef=\\\"symbol\\\">\\n    <th cdk-header-cell *cdkHeaderCellDef> Symbol </th>\\n    <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\n  </ng-container>\\n\\n  <tr cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\",\n                        styles: [\"table {\\n  width: 100%;\\n}\\n\\nth {\\n  text-align: left;\\n}\\n\"]\n                    }] }\n        ];\n        return CdkTableBasicExample;\n    }());\n    /**\n     * Data source to provide what data should be rendered in the table. Note that the data source\n     * can retrieve its data in any way. In this case, the data source is provided a reference\n     * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n     * the underlying data. Instead, it only needs to take the data and send the table exactly what\n     * should be rendered.\n     */\n    var ExampleDataSource$1 = /** @class */ (function (_super) {\n        tslib_1.__extends(ExampleDataSource, _super);\n        function ExampleDataSource() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /** Stream of data that is provided to the table. */\n            _this.data = new rxjs.BehaviorSubject(ELEMENT_DATA$1);\n            return _this;\n        }\n        /** Connect function called by the table to retrieve one stream containing the data to render. */\n        ExampleDataSource.prototype.connect = function () {\n            return this.data;\n        };\n        ExampleDataSource.prototype.disconnect = function () { };\n        return ExampleDataSource;\n    }(collections.DataSource));\n\n    var EXAMPLES = [\n        CdkTableBasicExample,\n        CdkTableBasicFlexExample,\n    ];\n    var CdkTableExamplesModule = /** @class */ (function () {\n        function CdkTableExamplesModule() {\n        }\n        CdkTableExamplesModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            table.CdkTableModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                    },] }\n        ];\n        return CdkTableExamplesModule;\n    }());\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.CdkTableBasicExample = CdkTableBasicExample;\n    exports.CdkTableBasicFlexExample = CdkTableBasicFlexExample;\n    exports.CdkTableExamplesModule = CdkTableExamplesModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=material-examples-cdk-table.umd.js.map\n"]}
{"version":3,"file":"material-examples-material-datepicker.umd.js","sources":["../../../../../../../src/material-examples/material/datepicker/datepicker-api/datepicker-api-example.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-color/datepicker-color-example.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-custom-header/datepicker-custom-header-example.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-custom-icon/datepicker-custom-icon-example.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-date-class/datepicker-date-class-example.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-disabled/datepicker-disabled-example.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-events/datepicker-events-example.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-filter/datepicker-filter-example.ts","../../../../../src/material-moment-adapter/adapter/moment-date-adapter.ts","../../../../../src/material-moment-adapter/adapter/moment-date-formats.ts","../../../../../src/material-moment-adapter/adapter/index.ts","../../../../../src/material-moment-adapter/public-api.ts","../../../../../src/material-moment-adapter/index.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-formats/datepicker-formats-example.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-locale/datepicker-locale-example.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-min-max/datepicker-min-max-example.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-moment/datepicker-moment-example.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-overview/datepicker-overview-example.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-start-view/datepicker-start-view-example.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-touch/datepicker-touch-example.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-value/datepicker-value-example.ts","../../../../../../../src/material-examples/material/datepicker/datepicker-views-selection/datepicker-views-selection-example.ts","../../../../../../../src/material-examples/material/datepicker/module.ts","../../../../../../../src/material-examples/material/datepicker/index.ts"],"sourcesContent":["import {Component} from '@angular/core';\n\n/** @title Datepicker open method */\n@Component({\n  selector: 'datepicker-api-example',\n  templateUrl: 'datepicker-api-example.html',\n  styleUrls: ['datepicker-api-example.css'],\n})\nexport class DatepickerApiExample {}\n","import {Component} from '@angular/core';\n\n/** @title Datepicker palette colors */\n@Component({\n  selector: 'datepicker-color-example',\n  templateUrl: 'datepicker-color-example.html',\n  styleUrls: ['datepicker-color-example.css'],\n})\nexport class DatepickerColorExample {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Inject,\n  OnDestroy\n} from '@angular/core';\nimport {MatCalendar} from '@angular/material/datepicker';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\n/** @title Datepicker with custom calendar header */\n@Component({\n  selector: 'datepicker-custom-header-example',\n  templateUrl: 'datepicker-custom-header-example.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DatepickerCustomHeaderExample {\n  exampleHeader = ExampleHeader;\n}\n\n/** Custom header component for datepicker. */\n@Component({\n  selector: 'example-header',\n  styles: [`\n    .example-header {\n      display: flex;\n      align-items: center;\n      padding: 0.5em;\n    }\n\n    .example-header-label {\n      flex: 1;\n      height: 1em;\n      font-weight: 500;\n      text-align: center;\n    }\n\n    .example-double-arrow .mat-icon {\n      margin: -22%;\n    }\n  `],\n  template: `\n    <div class=\"example-header\">\n      <button mat-icon-button class=\"example-double-arrow\" (click)=\"previousClicked('year')\">\n        <mat-icon>keyboard_arrow_left</mat-icon>\n        <mat-icon>keyboard_arrow_left</mat-icon>\n      </button>\n      <button mat-icon-button (click)=\"previousClicked('month')\">\n        <mat-icon>keyboard_arrow_left</mat-icon>\n      </button>\n      <span class=\"example-header-label\">{{periodLabel}}</span>\n      <button mat-icon-button (click)=\"nextClicked('month')\">\n        <mat-icon>keyboard_arrow_right</mat-icon>\n      </button>\n      <button mat-icon-button class=\"example-double-arrow\" (click)=\"nextClicked('year')\">\n        <mat-icon>keyboard_arrow_right</mat-icon>\n        <mat-icon>keyboard_arrow_right</mat-icon>\n      </button>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ExampleHeader<D> implements OnDestroy {\n  private _destroyed = new Subject<void>();\n\n  constructor(\n      private _calendar: MatCalendar<D>, private _dateAdapter: DateAdapter<D>,\n      @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats, cdr: ChangeDetectorRef) {\n    _calendar.stateChanges\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(() => cdr.markForCheck());\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  get periodLabel() {\n    return this._dateAdapter\n        .format(this._calendar.activeDate, this._dateFormats.display.monthYearLabel)\n        .toLocaleUpperCase();\n  }\n\n  previousClicked(mode: 'month' | 'year') {\n    this._calendar.activeDate = mode === 'month' ?\n        this._dateAdapter.addCalendarMonths(this._calendar.activeDate, -1) :\n        this._dateAdapter.addCalendarYears(this._calendar.activeDate, -1);\n  }\n\n  nextClicked(mode: 'month' | 'year') {\n    this._calendar.activeDate = mode === 'month' ?\n        this._dateAdapter.addCalendarMonths(this._calendar.activeDate, 1) :\n        this._dateAdapter.addCalendarYears(this._calendar.activeDate, 1);\n  }\n}\n","import {Component} from '@angular/core';\n\n/** @title Datepicker with custom icon */\n@Component({\n  selector: 'datepicker-custom-icon-example',\n  templateUrl: 'datepicker-custom-icon-example.html',\n  styleUrls: ['datepicker-custom-icon-example.css'],\n})\nexport class DatepickerCustomIconExample {}\n","import {Component, ViewEncapsulation} from '@angular/core';\n\n/** @title Datepicker with custom date classes */\n@Component({\n  selector: 'datepicker-date-class-example',\n  templateUrl: 'datepicker-date-class-example.html',\n  styleUrls: ['datepicker-date-class-example.css'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DatepickerDateClassExample {\n  dateClass = (d: Date) => {\n    const date = d.getDate();\n\n    // Highlight the 1st and 20th day of each month.\n    return (date === 1 || date === 20) ? 'example-custom-date-class' : undefined;\n  }\n}\n","import {Component} from '@angular/core';\n\n/** @title Disabled datepicker */\n@Component({\n  selector: 'datepicker-disabled-example',\n  templateUrl: 'datepicker-disabled-example.html',\n  styleUrls: ['datepicker-disabled-example.css'],\n})\nexport class DatepickerDisabledExample {}\n","import {Component} from '@angular/core';\nimport {MatDatepickerInputEvent} from '@angular/material/datepicker';\n\n/** @title Datepicker input and change events */\n@Component({\n  selector: 'datepicker-events-example',\n  templateUrl: 'datepicker-events-example.html',\n  styleUrls: ['datepicker-events-example.css'],\n})\nexport class DatepickerEventsExample {\n  events: string[] = [];\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    this.events.push(`${type}: ${event.value}`);\n  }\n}\n","import {Component} from '@angular/core';\n\n/** @title Datepicker with filter validation */\n@Component({\n  selector: 'datepicker-filter-example',\n  templateUrl: 'datepicker-filter-example.html',\n  styleUrls: ['datepicker-filter-example.css'],\n})\nexport class DatepickerFilterExample {\n  myFilter = (d: Date): boolean => {\n    const day = d.getDay();\n    // Prevent Saturday and Sunday from being selected.\n    return day !== 0 && day !== 6;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Inject, Injectable, Optional, InjectionToken} from '@angular/core';\nimport {DateAdapter, MAT_DATE_LOCALE} from '@angular/material/core';\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\n// TODO(mmalerba): See if we can clean this up at some point.\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport {default as _rollupMoment, Moment, MomentFormatSpecification, MomentInput} from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\n/** Configurable options for {@see MomentDateAdapter}. */\nexport interface MatMomentDateAdapterOptions {\n\n  /**\n   * When enabled, the dates have to match the format exactly.\n   * See https://momentjs.com/guides/#/parsing/strict-mode/.\n   */\n  strict?: boolean;\n\n  /**\n   * Turns the use of utc dates on or off.\n   * Changing this will change how Angular Material components like DatePicker output dates.\n   * {@default false}\n   */\n  useUtc?: boolean;\n}\n\n/** InjectionToken for moment date adapter to configure options. */\nexport const MAT_MOMENT_DATE_ADAPTER_OPTIONS = new InjectionToken<MatMomentDateAdapterOptions>(\n  'MAT_MOMENT_DATE_ADAPTER_OPTIONS', {\n    providedIn: 'root',\n    factory: MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY\n});\n\n\n/** @docs-private */\nexport function MAT_MOMENT_DATE_ADAPTER_OPTIONS_FACTORY(): MatMomentDateAdapterOptions {\n  return {\n    useUtc: false\n  };\n}\n\n\n/** Creates an array and fills it with values. */\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n\n/** Adapts Moment.js Dates for use with Angular Material. */\n@Injectable()\nexport class MomentDateAdapter extends DateAdapter<Moment> {\n  // Note: all of the methods that accept a `Moment` input parameter immediately call `this.clone`\n  // on it. This is to ensure that we're working with a `Moment` that has the correct locale setting\n  // while avoiding mutating the original object passed to us. Just calling `.locale(...)` on the\n  // input would mutate the object.\n\n  private _localeData: {\n    firstDayOfWeek: number,\n    longMonths: string[],\n    shortMonths: string[],\n    dates: string[],\n    longDaysOfWeek: string[],\n    shortDaysOfWeek: string[],\n    narrowDaysOfWeek: string[]\n  };\n\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) dateLocale: string,\n    @Optional() @Inject(MAT_MOMENT_DATE_ADAPTER_OPTIONS)\n    private _options?: MatMomentDateAdapterOptions) {\n\n    super();\n    this.setLocale(dateLocale || moment.locale());\n  }\n\n  setLocale(locale: string) {\n    super.setLocale(locale);\n\n    let momentLocaleData = moment.localeData(locale);\n    this._localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      longMonths: momentLocaleData.months(),\n      shortMonths: momentLocaleData.monthsShort(),\n      dates: range(31, (i) => this.createDate(2017, 0, i + 1).format('D')),\n      longDaysOfWeek: momentLocaleData.weekdays(),\n      shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n      narrowDaysOfWeek: momentLocaleData.weekdaysMin(),\n    };\n  }\n\n  getYear(date: Moment): number {\n    return this.clone(date).year();\n  }\n\n  getMonth(date: Moment): number {\n    return this.clone(date).month();\n  }\n\n  getDate(date: Moment): number {\n    return this.clone(date).date();\n  }\n\n  getDayOfWeek(date: Moment): number {\n    return this.clone(date).day();\n  }\n\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\n    // Moment.js doesn't support narrow month names, so we just use short if narrow is requested.\n    return style == 'long' ? this._localeData.longMonths : this._localeData.shortMonths;\n  }\n\n  getDateNames(): string[] {\n    return this._localeData.dates;\n  }\n\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\n    if (style == 'long') {\n      return this._localeData.longDaysOfWeek;\n    }\n    if (style == 'short') {\n      return this._localeData.shortDaysOfWeek;\n    }\n    return this._localeData.narrowDaysOfWeek;\n  }\n\n  getYearName(date: Moment): string {\n    return this.clone(date).format('YYYY');\n  }\n\n  getFirstDayOfWeek(): number {\n    return this._localeData.firstDayOfWeek;\n  }\n\n  getNumDaysInMonth(date: Moment): number {\n    return this.clone(date).daysInMonth();\n  }\n\n  clone(date: Moment): Moment {\n    return date.clone().locale(this.locale);\n  }\n\n  createDate(year: number, month: number, date: number): Moment {\n    // Moment.js will create an invalid date if any of the components are out of bounds, but we\n    // explicitly check each case so we can throw more descriptive errors.\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    const result = this._createMoment({year, month, date}).locale(this.locale);\n\n    // If the result isn't valid, the date must have been out of bounds for this month.\n    if (!result.isValid()) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  today(): Moment {\n    return this._createMoment().locale(this.locale);\n  }\n\n  parse(value: any, parseFormat: string | string[]): Moment | null {\n    if (value && typeof value == 'string') {\n      return this._createMoment(value, parseFormat, this.locale);\n    }\n    return value ? this._createMoment(value).locale(this.locale) : null;\n  }\n\n  format(date: Moment, displayFormat: string): string {\n    date = this.clone(date);\n    if (!this.isValid(date)) {\n      throw Error('MomentDateAdapter: Cannot format invalid date.');\n    }\n    return date.format(displayFormat);\n  }\n\n  addCalendarYears(date: Moment, years: number): Moment {\n    return this.clone(date).add({years});\n  }\n\n  addCalendarMonths(date: Moment, months: number): Moment {\n    return this.clone(date).add({months});\n  }\n\n  addCalendarDays(date: Moment, days: number): Moment {\n    return this.clone(date).add({days});\n  }\n\n  toIso8601(date: Moment): string {\n    return this.clone(date).format();\n  }\n\n  /**\n   * Returns the given value if given a valid Moment or null. Deserializes valid ISO 8601 strings\n   * (https://www.ietf.org/rfc/rfc3339.txt) and valid Date objects into valid Moments and empty\n   * string into null. Returns an invalid date for all other values.\n   */\n  deserialize(value: any): Moment | null {\n    let date;\n    if (value instanceof Date) {\n      date = this._createMoment(value).locale(this.locale);\n    } else if (this.isDateInstance(value)) {\n      // Note: assumes that cloning also sets the correct locale.\n      return this.clone(value);\n    }\n    if (typeof value === 'string') {\n      if (!value) {\n        return null;\n      }\n      date = this._createMoment(value, moment.ISO_8601).locale(this.locale);\n    }\n    if (date && this.isValid(date)) {\n      return this._createMoment(date).locale(this.locale);\n    }\n    return super.deserialize(value);\n  }\n\n  isDateInstance(obj: any): boolean {\n    return moment.isMoment(obj);\n  }\n\n  isValid(date: Moment): boolean {\n    return this.clone(date).isValid();\n  }\n\n  invalid(): Moment {\n    return moment.invalid();\n  }\n\n  /** Creates a Moment instance while respecting the current UTC settings. */\n  private _createMoment(\n    date: MomentInput,\n    format?: MomentFormatSpecification,\n    locale?: string,\n  ): Moment {\n    const {strict, useUtc}: MatMomentDateAdapterOptions = this._options || {};\n\n    return useUtc\n      ? moment.utc(date, format, locale, strict)\n      : moment(date, format, locale, strict);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {MatDateFormats} from '@angular/material/core';\n\n\nexport const MAT_MOMENT_DATE_FORMATS: MatDateFormats = {\n  parse: {\n    dateInput: 'l',\n  },\n  display: {\n    dateInput: 'l',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\nimport {MAT_MOMENT_DATE_ADAPTER_OPTIONS, MomentDateAdapter} from './moment-date-adapter';\nimport {MAT_MOMENT_DATE_FORMATS} from './moment-date-formats';\n\nexport * from './moment-date-adapter';\nexport * from './moment-date-formats';\n\n@NgModule({\n  providers: [\n    {\n      provide: DateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n    }\n  ],\n})\nexport class MomentDateModule {}\n\n\n@NgModule({\n  imports: [MomentDateModule],\n  providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS}],\n})\nexport class MatMomentDateModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './adapter/index';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport {default as _rollupMoment} from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\n// See the Moment.js docs for the meaning of these formats:\n// https://momentjs.com/docs/#/displaying/format/\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'LL',\n  },\n  display: {\n    dateInput: 'LL',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n/** @title Datepicker with custom formats */\n@Component({\n  selector: 'datepicker-formats-example',\n  templateUrl: 'datepicker-formats-example.html',\n  styleUrls: ['datepicker-formats-example.css'],\n  providers: [\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\n    // application's root module. We provide it at the component level here, due to limitations of\n    // our example generation script.\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n  ],\n})\nexport class DatepickerFormatsExample {\n  date = new FormControl(moment());\n}\n","import {Component} from '@angular/core';\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n/** @title Datepicker with different locale */\n@Component({\n  selector: 'datepicker-locale-example',\n  templateUrl: 'datepicker-locale-example.html',\n  styleUrls: ['datepicker-locale-example.css'],\n  providers: [\n    // The locale would typically be provided on the root module of your application. We do it at\n    // the component level here, due to limitations of our example generation script.\n    {provide: MAT_DATE_LOCALE, useValue: 'ja-JP'},\n\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n    // here, due to limitations of our example generation script.\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class DatepickerLocaleExample {\n  constructor(private _adapter: DateAdapter<any>) {}\n\n  french() {\n    this._adapter.setLocale('fr');\n  }\n}\n","import {Component} from '@angular/core';\n\n/** @title Datepicker with min & max validation */\n@Component({\n  selector: 'datepicker-min-max-example',\n  templateUrl: 'datepicker-min-max-example.html',\n  styleUrls: ['datepicker-min-max-example.css'],\n})\nexport class DatepickerMinMaxExample {\n  minDate = new Date(2000, 0, 1);\n  maxDate = new Date(2020, 0, 1);\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MAT_MOMENT_DATE_FORMATS, MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport {default as _rollupMoment} from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\n/** @title Datepicker that uses Moment.js dates */\n@Component({\n  selector: 'datepicker-moment-example',\n  templateUrl: 'datepicker-moment-example.html',\n  styleUrls: ['datepicker-moment-example.css'],\n  providers: [\n    // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n    // `MatMomentDateModule` in your applications root module. We provide it at the component level\n    // here, due to limitations of our example generation script.\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n    {provide: MAT_DATE_FORMATS, useValue: MAT_MOMENT_DATE_FORMATS},\n  ],\n})\nexport class DatepickerMomentExample {\n  // Datepicker takes `Moment` objects instead of `Date` objects.\n  date = new FormControl(moment([2017, 0, 1]));\n}\n","import {Component} from '@angular/core';\n\n/** @title Basic datepicker */\n@Component({\n  selector: 'datepicker-overview-example',\n  templateUrl: 'datepicker-overview-example.html',\n  styleUrls: ['datepicker-overview-example.css'],\n})\nexport class DatepickerOverviewExample {}\n","import {Component} from '@angular/core';\n\n/** @title Datepicker start date */\n@Component({\n  selector: 'datepicker-start-view-example',\n  templateUrl: 'datepicker-start-view-example.html',\n  styleUrls: ['datepicker-start-view-example.css'],\n})\nexport class DatepickerStartViewExample {\n  startDate = new Date(1990, 0, 1);\n}\n","import {Component} from '@angular/core';\n\n/** @title Datepicker touch UI */\n@Component({\n  selector: 'datepicker-touch-example',\n  templateUrl: 'datepicker-touch-example.html',\n  styleUrls: ['datepicker-touch-example.css'],\n})\nexport class DatepickerTouchExample {}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/** @title Datepicker selected value */\n@Component({\n  selector: 'datepicker-value-example',\n  templateUrl: 'datepicker-value-example.html',\n  styleUrls: ['datepicker-value-example.css'],\n})\nexport class DatepickerValueExample {\n  date = new FormControl(new Date());\n  serializedDate = new FormControl((new Date()).toISOString());\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {MomentDateAdapter} from '@angular/material-moment-adapter';\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\nimport {MatDatepicker} from '@angular/material/datepicker';\n\n// Depending on whether rollup is used, moment needs to be imported differently.\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\n// the `default as` syntax.\nimport * as _moment from 'moment';\n// tslint:disable-next-line:no-duplicate-imports\nimport {default as _rollupMoment, Moment} from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\n// See the Moment.js docs for the meaning of these formats:\n// https://momentjs.com/docs/#/displaying/format/\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'MM/YYYY',\n  },\n  display: {\n    dateInput: 'MM/YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n/** @title Datepicker emulating a Year and month picker */\n@Component({\n  selector: 'datepicker-views-selection-example',\n  templateUrl: 'datepicker-views-selection-example.html',\n  styleUrls: ['datepicker-views-selection-example.css'],\n  providers: [\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\n    // application's root module. We provide it at the component level here, due to limitations of\n    // our example generation script.\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\n\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\n  ],\n})\nexport class DatepickerViewsSelectionExample {\n  date = new FormControl(moment());\n\n  chosenYearHandler(normalizedYear: Moment) {\n    const ctrlValue = this.date.value;\n    ctrlValue.year(normalizedYear.year());\n    this.date.setValue(ctrlValue);\n  }\n\n  chosenMonthHandler(normalizedMonth: Moment, datepicker: MatDatepicker<Moment>) {\n    const ctrlValue = this.date.value;\n    ctrlValue.month(normalizedMonth.month());\n    this.date.setValue(ctrlValue);\n    datepicker.close();\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatNativeDateModule} from '@angular/material/core';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\n\nimport {DatepickerApiExample} from './datepicker-api/datepicker-api-example';\nimport {DatepickerColorExample} from './datepicker-color/datepicker-color-example';\nimport {\n  DatepickerCustomHeaderExample,\n  ExampleHeader\n} from './datepicker-custom-header/datepicker-custom-header-example';\nimport {DatepickerCustomIconExample} from './datepicker-custom-icon/datepicker-custom-icon-example';\nimport {DatepickerDateClassExample} from './datepicker-date-class/datepicker-date-class-example';\nimport {DatepickerDisabledExample} from './datepicker-disabled/datepicker-disabled-example';\nimport {DatepickerEventsExample} from './datepicker-events/datepicker-events-example';\nimport {DatepickerFilterExample} from './datepicker-filter/datepicker-filter-example';\nimport {DatepickerFormatsExample} from './datepicker-formats/datepicker-formats-example';\nimport {DatepickerLocaleExample} from './datepicker-locale/datepicker-locale-example';\nimport {DatepickerMinMaxExample} from './datepicker-min-max/datepicker-min-max-example';\nimport {DatepickerMomentExample} from './datepicker-moment/datepicker-moment-example';\nimport {DatepickerOverviewExample} from './datepicker-overview/datepicker-overview-example';\nimport {DatepickerStartViewExample} from './datepicker-start-view/datepicker-start-view-example';\nimport {DatepickerTouchExample} from './datepicker-touch/datepicker-touch-example';\nimport {DatepickerValueExample} from './datepicker-value/datepicker-value-example';\nimport {\n  DatepickerViewsSelectionExample\n} from './datepicker-views-selection/datepicker-views-selection-example';\n\nexport {\n  DatepickerApiExample,\n  DatepickerColorExample,\n  DatepickerCustomHeaderExample,\n  DatepickerCustomIconExample,\n  DatepickerDateClassExample,\n  DatepickerDisabledExample,\n  DatepickerEventsExample,\n  DatepickerFilterExample,\n  DatepickerFormatsExample,\n  DatepickerLocaleExample,\n  DatepickerMinMaxExample,\n  DatepickerMomentExample,\n  DatepickerOverviewExample,\n  DatepickerStartViewExample,\n  DatepickerTouchExample,\n  DatepickerValueExample,\n  DatepickerViewsSelectionExample,\n  ExampleHeader,\n};\n\nconst EXAMPLES = [\n  DatepickerApiExample,\n  DatepickerColorExample,\n  DatepickerCustomHeaderExample,\n  DatepickerCustomIconExample,\n  DatepickerDateClassExample,\n  DatepickerDisabledExample,\n  DatepickerEventsExample,\n  DatepickerFilterExample,\n  DatepickerFormatsExample,\n  DatepickerLocaleExample,\n  DatepickerMinMaxExample,\n  DatepickerMomentExample,\n  DatepickerOverviewExample,\n  DatepickerStartViewExample,\n  DatepickerTouchExample,\n  DatepickerValueExample,\n  DatepickerViewsSelectionExample,\n  ExampleHeader,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatDatepickerModule,\n    MatInputModule,\n    MatIconModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n})\nexport class DatepickerExamplesModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './module';\n\nexport {MY_FORMATS as Éµangular_material_src_material_examples_material_datepicker_datepicker_a} from './datepicker-formats/datepicker-formats-example';\nexport {MY_FORMATS as Éµangular_material_src_material_examples_material_datepicker_datepicker_b} from './datepicker-views-selection/datepicker-views-selection-example';"],"names":["Component","ChangeDetectionStrategy","Subject","takeUntil","MatCalendar","DateAdapter","Inject","MAT_DATE_FORMATS","ChangeDetectorRef","ViewEncapsulation","_rollupMoment","_moment","InjectionToken","tslib_1.__extends","Injectable","tslib_1.__param","Optional","MAT_DATE_LOCALE","NgModule","moment","FormControl","MY_FORMATS","CommonModule","MatButtonModule","MatDatepickerModule","MatInputModule","MatIconModule","MatNativeDateModule","ReactiveFormsModule"],"mappings":"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"}
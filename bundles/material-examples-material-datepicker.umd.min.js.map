{"version":3,"sources":["src/material-examples/material-examples-material-datepicker.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","materialExamples","material","datepicker","common","core","forms","button","icon","input","rxjs","operators","materialMomentAdapter","moment","this","core$1","_rollupMoment","_rollupMoment__default","DatepickerApiExample","decorators","type","Component","args","selector","template","styles","DatepickerColorExample","DatepickerCustomHeaderExample","exampleHeader","ExampleHeader","changeDetection","ChangeDetectionStrategy","OnPush","_calendar","_dateAdapter","_dateFormats","cdr","_destroyed","Subject","stateChanges","pipe","takeUntil","subscribe","markForCheck","prototype","ngOnDestroy","next","complete","Object","defineProperty","get","format","activeDate","display","monthYearLabel","toLocaleUpperCase","enumerable","configurable","previousClicked","mode","addCalendarMonths","addCalendarYears","nextClicked","ctorParameters","MatCalendar","DateAdapter","undefined","Inject","MAT_DATE_FORMATS","ChangeDetectorRef","DatepickerCustomIconExample","DatepickerDateClassExample","dateClass","d","date","getDate","encapsulation","ViewEncapsulation","None","DatepickerDisabledExample","DatepickerEventsExample","events","addEvent","event","push","value","DatepickerFilterExample","myFilter","day","getDay","MY_FORMATS","parse","dateInput","dateA11yLabel","monthYearA11yLabel","DatepickerFormatsExample","FormControl","providers","provide","useClass","MomentDateAdapter","deps","MAT_DATE_LOCALE","MAT_MOMENT_DATE_ADAPTER_OPTIONS","useValue","ɵ0","MAT_MOMENT_DATE_FORMATS","DatepickerLocaleExample","_adapter","french","setLocale","DatepickerMinMaxExample","minDate","Date","maxDate","moment$1","ɵ0$1","DatepickerMomentExample","DatepickerOverviewExample","DatepickerStartViewExample","startDate","DatepickerTouchExample","DatepickerValueExample","serializedDate","toISOString","moment$2","MY_FORMATS$1","DatepickerViewsSelectionExample","chosenYearHandler","normalizedYear","ctrlValue","year","setValue","chosenMonthHandler","normalizedMonth","month","close","EXAMPLES","DatepickerExamplesModule","NgModule","imports","CommonModule","MatButtonModule","MatDatepickerModule","MatInputModule","MatIconModule","MatNativeDateModule","ReactiveFormsModule","declarations","ɵangular_material_src_material_examples_material_datepicker_datepicker_a","ɵangular_material_src_material_examples_material_datepicker_datepicker_b"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('@angular/material/button'), require('@angular/material/core'), require('@angular/material/datepicker'), require('@angular/material/icon'), require('@angular/material/input'), require('rxjs'), require('rxjs/operators'), require('@angular/material-moment-adapter'), require('moment')) :\n    typeof define === 'function' && define.amd ? define('@angular/material-examples/material/datepicker', ['exports', '@angular/common', '@angular/core', '@angular/forms', '@angular/material/button', '@angular/material/core', '@angular/material/datepicker', '@angular/material/icon', '@angular/material/input', 'rxjs', 'rxjs/operators', '@angular/material-moment-adapter', 'moment'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.materialExamples = global.ng.materialExamples || {}, global.ng.materialExamples.material = global.ng.materialExamples.material || {}, global.ng.materialExamples.material.datepicker = {}), global.ng.common, global.ng.core, global.ng.forms, global.ng.material.button, global.ng.material.core, global.ng.material.datepicker, global.ng.material.icon, global.ng.material.input, global.rxjs, global.rxjs.operators, global.ng.materialMomentAdapter, global.moment));\n}(this, function (exports, common, core, forms, button, core$1, datepicker, icon, input, rxjs, operators, materialMomentAdapter, _rollupMoment) { 'use strict';\n\n    var _rollupMoment__default = 'default' in _rollupMoment ? _rollupMoment['default'] : _rollupMoment;\n\n    /** @title Datepicker open method */\n    var DatepickerApiExample = /** @class */ (function () {\n        function DatepickerApiExample() {\n        }\n        DatepickerApiExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-api-example',\n                        template: \"<mat-form-field class=\\\"example-full-width\\\">\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n  <mat-datepicker #picker></mat-datepicker>\\n</mat-form-field>\\n<button mat-raised-button (click)=\\\"picker.open()\\\">Open</button>\\n\",\n                        styles: [\"mat-form-field {\\n  margin-right: 12px;\\n}\\n\"]\n                    }] }\n        ];\n        return DatepickerApiExample;\n    }());\n\n    /** @title Datepicker palette colors */\n    var DatepickerColorExample = /** @class */ (function () {\n        function DatepickerColorExample() {\n        }\n        DatepickerColorExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-color-example',\n                        template: \"<mat-form-field color=\\\"accent\\\">\\n  <mat-label>Inherited calendar color</mat-label>\\n  <input matInput [matDatepicker]=\\\"picker1\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker1></mat-datepicker>\\n</mat-form-field>\\n\\n<mat-form-field color=\\\"accent\\\">\\n  <mat-label>Custom calendar color</mat-label>\\n  <input matInput [matDatepicker]=\\\"picker2\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker2 color=\\\"primary\\\"></mat-datepicker>\\n</mat-form-field>\\n\",\n                        styles: [\"mat-form-field {\\n  margin-right: 12px;\\n}\\n\"]\n                    }] }\n        ];\n        return DatepickerColorExample;\n    }());\n\n    /** @title Datepicker with custom calendar header */\n    var DatepickerCustomHeaderExample = /** @class */ (function () {\n        function DatepickerCustomHeaderExample() {\n            this.exampleHeader = ExampleHeader;\n        }\n        DatepickerCustomHeaderExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-custom-header-example',\n                        template: \"<mat-form-field>\\n  <mat-label>Custom calendar header</mat-label>\\n  <input matInput [matDatepicker]=\\\"picker\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker [calendarHeaderComponent]=\\\"exampleHeader\\\"></mat-datepicker>\\n</mat-form-field>\\n\",\n                        changeDetection: core.ChangeDetectionStrategy.OnPush\n                    }] }\n        ];\n        return DatepickerCustomHeaderExample;\n    }());\n    /** Custom header component for datepicker. */\n    var ExampleHeader = /** @class */ (function () {\n        function ExampleHeader(_calendar, _dateAdapter, _dateFormats, cdr) {\n            this._calendar = _calendar;\n            this._dateAdapter = _dateAdapter;\n            this._dateFormats = _dateFormats;\n            this._destroyed = new rxjs.Subject();\n            _calendar.stateChanges\n                .pipe(operators.takeUntil(this._destroyed))\n                .subscribe(function () { return cdr.markForCheck(); });\n        }\n        ExampleHeader.prototype.ngOnDestroy = function () {\n            this._destroyed.next();\n            this._destroyed.complete();\n        };\n        Object.defineProperty(ExampleHeader.prototype, \"periodLabel\", {\n            get: function () {\n                return this._dateAdapter\n                    .format(this._calendar.activeDate, this._dateFormats.display.monthYearLabel)\n                    .toLocaleUpperCase();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        ExampleHeader.prototype.previousClicked = function (mode) {\n            this._calendar.activeDate = mode === 'month' ?\n                this._dateAdapter.addCalendarMonths(this._calendar.activeDate, -1) :\n                this._dateAdapter.addCalendarYears(this._calendar.activeDate, -1);\n        };\n        ExampleHeader.prototype.nextClicked = function (mode) {\n            this._calendar.activeDate = mode === 'month' ?\n                this._dateAdapter.addCalendarMonths(this._calendar.activeDate, 1) :\n                this._dateAdapter.addCalendarYears(this._calendar.activeDate, 1);\n        };\n        ExampleHeader.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'example-header',\n                        template: \"\\n    <div class=\\\"example-header\\\">\\n      <button mat-icon-button class=\\\"example-double-arrow\\\" (click)=\\\"previousClicked('year')\\\">\\n        <mat-icon>keyboard_arrow_left</mat-icon>\\n        <mat-icon>keyboard_arrow_left</mat-icon>\\n      </button>\\n      <button mat-icon-button (click)=\\\"previousClicked('month')\\\">\\n        <mat-icon>keyboard_arrow_left</mat-icon>\\n      </button>\\n      <span class=\\\"example-header-label\\\">{{periodLabel}}</span>\\n      <button mat-icon-button (click)=\\\"nextClicked('month')\\\">\\n        <mat-icon>keyboard_arrow_right</mat-icon>\\n      </button>\\n      <button mat-icon-button class=\\\"example-double-arrow\\\" (click)=\\\"nextClicked('year')\\\">\\n        <mat-icon>keyboard_arrow_right</mat-icon>\\n        <mat-icon>keyboard_arrow_right</mat-icon>\\n      </button>\\n    </div>\\n  \",\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\"\\n    .example-header {\\n      display: flex;\\n      align-items: center;\\n      padding: 0.5em;\\n    }\\n\\n    .example-header-label {\\n      flex: 1;\\n      height: 1em;\\n      font-weight: 500;\\n      text-align: center;\\n    }\\n\\n    .example-double-arrow .mat-icon {\\n      margin: -22%;\\n    }\\n  \"]\n                    }] }\n        ];\n        /** @nocollapse */\n        ExampleHeader.ctorParameters = function () { return [\n            { type: datepicker.MatCalendar },\n            { type: core$1.DateAdapter },\n            { type: undefined, decorators: [{ type: core.Inject, args: [core$1.MAT_DATE_FORMATS,] }] },\n            { type: core.ChangeDetectorRef }\n        ]; };\n        return ExampleHeader;\n    }());\n\n    /** @title Datepicker with custom icon */\n    var DatepickerCustomIconExample = /** @class */ (function () {\n        function DatepickerCustomIconExample() {\n        }\n        DatepickerCustomIconExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-custom-icon-example',\n                        template: \"<mat-form-field class=\\\"example-full-width\\\">\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\">\\n    <mat-icon matDatepickerToggleIcon>keyboard_arrow_down</mat-icon>\\n  </mat-datepicker-toggle>\\n  <mat-datepicker #picker></mat-datepicker>\\n</mat-form-field>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        return DatepickerCustomIconExample;\n    }());\n\n    /** @title Datepicker with custom date classes */\n    var DatepickerDateClassExample = /** @class */ (function () {\n        function DatepickerDateClassExample() {\n            this.dateClass = function (d) {\n                var date = d.getDate();\n                // Highlight the 1st and 20th day of each month.\n                return (date === 1 || date === 20) ? 'example-custom-date-class' : undefined;\n            };\n        }\n        DatepickerDateClassExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-date-class-example',\n                        template: \"<mat-form-field class=\\\"example-full-width\\\">\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n  <mat-datepicker [dateClass]=\\\"dateClass\\\" #picker></mat-datepicker>\\n</mat-form-field>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        styles: [\".example-custom-date-class {\\n  background: orange;\\n  border-radius: 100%;\\n}\\n\"]\n                    }] }\n        ];\n        return DatepickerDateClassExample;\n    }());\n\n    /** @title Disabled datepicker */\n    var DatepickerDisabledExample = /** @class */ (function () {\n        function DatepickerDisabledExample() {\n        }\n        DatepickerDisabledExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-disabled-example',\n                        template: \"<p>\\n  <mat-form-field>\\n    <input matInput [matDatepicker]=\\\"dp1\\\" placeholder=\\\"Completely disabled\\\" disabled>\\n    <mat-datepicker-toggle matSuffix [for]=\\\"dp1\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #dp1></mat-datepicker>\\n  </mat-form-field>\\n</p>\\n\\n<p>\\n  <mat-form-field>\\n    <input matInput [matDatepicker]=\\\"dp2\\\" placeholder=\\\"Popup disabled\\\">\\n    <mat-datepicker-toggle matSuffix [for]=\\\"dp2\\\" disabled></mat-datepicker-toggle>\\n    <mat-datepicker #dp2></mat-datepicker>\\n  </mat-form-field>\\n</p>\\n\\n<p>\\n  <mat-form-field>\\n    <input matInput [matDatepicker]=\\\"dp3\\\" placeholder=\\\"Input disabled\\\" disabled>\\n    <mat-datepicker-toggle matSuffix [for]=\\\"dp3\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #dp3 disabled=\\\"false\\\"></mat-datepicker>\\n  </mat-form-field>\\n</p>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        return DatepickerDisabledExample;\n    }());\n\n    /** @title Datepicker input and change events */\n    var DatepickerEventsExample = /** @class */ (function () {\n        function DatepickerEventsExample() {\n            this.events = [];\n        }\n        DatepickerEventsExample.prototype.addEvent = function (type, event) {\n            this.events.push(type + \": \" + event.value);\n        };\n        DatepickerEventsExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-events-example',\n                        template: \"<mat-form-field>\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Input & change events\\\"\\n         (dateInput)=\\\"addEvent('input', $event)\\\" (dateChange)=\\\"addEvent('change', $event)\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker></mat-datepicker>\\n</mat-form-field>\\n\\n<div class=\\\"example-events\\\">\\n  <div *ngFor=\\\"let e of events\\\">{{e}}</div>\\n</div>\\n\",\n                        styles: [\".example-events {\\n  width: 400px;\\n  height: 200px;\\n  border: 1px solid #555;\\n  overflow: auto;\\n}\\n\"]\n                    }] }\n        ];\n        return DatepickerEventsExample;\n    }());\n\n    /** @title Datepicker with filter validation */\n    var DatepickerFilterExample = /** @class */ (function () {\n        function DatepickerFilterExample() {\n            this.myFilter = function (d) {\n                var day = d.getDay();\n                // Prevent Saturday and Sunday from being selected.\n                return day !== 0 && day !== 6;\n            };\n        }\n        DatepickerFilterExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-filter-example',\n                        template: \"<mat-form-field class=\\\"example-full-width\\\">\\n  <input matInput [matDatepickerFilter]=\\\"myFilter\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker></mat-datepicker>\\n</mat-form-field>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        return DatepickerFilterExample;\n    }());\n\n    var moment = _rollupMoment__default || _rollupMoment;\n    // See the Moment.js docs for the meaning of these formats:\n    // https://momentjs.com/docs/#/displaying/format/\n    var MY_FORMATS = {\n        parse: {\n            dateInput: 'LL',\n        },\n        display: {\n            dateInput: 'LL',\n            monthYearLabel: 'MMM YYYY',\n            dateA11yLabel: 'LL',\n            monthYearA11yLabel: 'MMMM YYYY',\n        },\n    };\n    /** @title Datepicker with custom formats */\n    var DatepickerFormatsExample = /** @class */ (function () {\n        function DatepickerFormatsExample() {\n            this.date = new forms.FormControl(moment());\n        }\n        DatepickerFormatsExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-formats-example',\n                        template: \"<mat-form-field>\\n  <input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Verbose datepicker\\\" [formControl]=\\\"date\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #dp></mat-datepicker>\\n</mat-form-field>\\n\",\n                        providers: [\n                            // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\n                            // application's root module. We provide it at the component level here, due to limitations of\n                            // our example generation script.\n                            {\n                                provide: core$1.DateAdapter,\n                                useClass: materialMomentAdapter.MomentDateAdapter,\n                                deps: [core$1.MAT_DATE_LOCALE, materialMomentAdapter.MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n                            },\n                            { provide: core$1.MAT_DATE_FORMATS, useValue: MY_FORMATS },\n                        ],\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        return DatepickerFormatsExample;\n    }());\n\n    var ɵ0 = materialMomentAdapter.MAT_MOMENT_DATE_FORMATS;\n    /** @title Datepicker with different locale */\n    var DatepickerLocaleExample = /** @class */ (function () {\n        function DatepickerLocaleExample(_adapter) {\n            this._adapter = _adapter;\n        }\n        DatepickerLocaleExample.prototype.french = function () {\n            this._adapter.setLocale('fr');\n        };\n        DatepickerLocaleExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-locale-example',\n                        template: \"<mat-form-field>\\n  <input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Different locale\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #dp></mat-datepicker>\\n</mat-form-field>\\n\\n<button mat-button (click)=\\\"french()\\\">Dynamically switch to French</button>\\n\",\n                        providers: [\n                            // The locale would typically be provided on the root module of your application. We do it at\n                            // the component level here, due to limitations of our example generation script.\n                            { provide: core$1.MAT_DATE_LOCALE, useValue: 'ja-JP' },\n                            // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n                            // `MatMomentDateModule` in your applications root module. We provide it at the component level\n                            // here, due to limitations of our example generation script.\n                            {\n                                provide: core$1.DateAdapter,\n                                useClass: materialMomentAdapter.MomentDateAdapter,\n                                deps: [core$1.MAT_DATE_LOCALE, materialMomentAdapter.MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n                            },\n                            { provide: core$1.MAT_DATE_FORMATS, useValue: ɵ0 },\n                        ],\n                        styles: [\"mat-form-field {\\n  margin-right: 12px;\\n}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        DatepickerLocaleExample.ctorParameters = function () { return [\n            { type: core$1.DateAdapter }\n        ]; };\n        return DatepickerLocaleExample;\n    }());\n\n    /** @title Datepicker with min & max validation */\n    var DatepickerMinMaxExample = /** @class */ (function () {\n        function DatepickerMinMaxExample() {\n            this.minDate = new Date(2000, 0, 1);\n            this.maxDate = new Date(2020, 0, 1);\n        }\n        DatepickerMinMaxExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-min-max-example',\n                        template: \"<mat-form-field class=\\\"example-full-width\\\">\\n  <input matInput [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker></mat-datepicker>\\n</mat-form-field>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        return DatepickerMinMaxExample;\n    }());\n\n    var moment$1 = _rollupMoment__default || _rollupMoment;\n    var ɵ0$1 = materialMomentAdapter.MAT_MOMENT_DATE_FORMATS;\n    /** @title Datepicker that uses Moment.js dates */\n    var DatepickerMomentExample = /** @class */ (function () {\n        function DatepickerMomentExample() {\n            // Datepicker takes `Moment` objects instead of `Date` objects.\n            this.date = new forms.FormControl(moment$1([2017, 0, 1]));\n        }\n        DatepickerMomentExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-moment-example',\n                        template: \"<mat-form-field>\\n  <input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Moment.js datepicker\\\" [formControl]=\\\"date\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #dp></mat-datepicker>\\n</mat-form-field>\\n\",\n                        providers: [\n                            // `MomentDateAdapter` and `MAT_MOMENT_DATE_FORMATS` can be automatically provided by importing\n                            // `MatMomentDateModule` in your applications root module. We provide it at the component level\n                            // here, due to limitations of our example generation script.\n                            { provide: core$1.DateAdapter, useClass: materialMomentAdapter.MomentDateAdapter, deps: [core$1.MAT_DATE_LOCALE] },\n                            { provide: core$1.MAT_DATE_FORMATS, useValue: ɵ0$1 },\n                        ],\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        return DatepickerMomentExample;\n    }());\n\n    /** @title Basic datepicker */\n    var DatepickerOverviewExample = /** @class */ (function () {\n        function DatepickerOverviewExample() {\n        }\n        DatepickerOverviewExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-overview-example',\n                        template: \"<mat-form-field>\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker></mat-datepicker>\\n</mat-form-field>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        return DatepickerOverviewExample;\n    }());\n\n    /** @title Datepicker start date */\n    var DatepickerStartViewExample = /** @class */ (function () {\n        function DatepickerStartViewExample() {\n            this.startDate = new Date(1990, 0, 1);\n        }\n        DatepickerStartViewExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-start-view-example',\n                        template: \"<mat-form-field>\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker startView=\\\"year\\\" [startAt]=\\\"startDate\\\"></mat-datepicker>\\n</mat-form-field>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        return DatepickerStartViewExample;\n    }());\n\n    /** @title Datepicker touch UI */\n    var DatepickerTouchExample = /** @class */ (function () {\n        function DatepickerTouchExample() {\n        }\n        DatepickerTouchExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-touch-example',\n                        template: \"<mat-form-field class=\\\"example-full-width\\\">\\n  <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n  <mat-datepicker touchUi #picker></mat-datepicker>\\n</mat-form-field>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        return DatepickerTouchExample;\n    }());\n\n    /** @title Datepicker selected value */\n    var DatepickerValueExample = /** @class */ (function () {\n        function DatepickerValueExample() {\n            this.date = new forms.FormControl(new Date());\n            this.serializedDate = new forms.FormControl((new Date()).toISOString());\n        }\n        DatepickerValueExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-value-example',\n                        template: \"<mat-form-field>\\n  <input matInput [matDatepicker]=\\\"picker1\\\" placeholder=\\\"Angular forms\\\" [formControl]=\\\"date\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker1></mat-datepicker>\\n</mat-form-field>\\n\\n<mat-form-field>\\n  <input matInput [matDatepicker]=\\\"picker2\\\" placeholder=\\\"Angular forms (w/ deserialization)\\\"\\n         [formControl]=\\\"serializedDate\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker2></mat-datepicker>\\n</mat-form-field>\\n\\n<mat-form-field>\\n  <input matInput [matDatepicker]=\\\"picker3\\\" placeholder=\\\"Value binding\\\" [value]=\\\"date.value\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #picker3></mat-datepicker>\\n</mat-form-field>\\n\",\n                        styles: [\"mat-form-field {\\n  margin-right: 12px;\\n}\\n\"]\n                    }] }\n        ];\n        return DatepickerValueExample;\n    }());\n\n    var moment$2 = _rollupMoment__default || _rollupMoment;\n    // See the Moment.js docs for the meaning of these formats:\n    // https://momentjs.com/docs/#/displaying/format/\n    var MY_FORMATS$1 = {\n        parse: {\n            dateInput: 'MM/YYYY',\n        },\n        display: {\n            dateInput: 'MM/YYYY',\n            monthYearLabel: 'MMM YYYY',\n            dateA11yLabel: 'LL',\n            monthYearA11yLabel: 'MMMM YYYY',\n        },\n    };\n    /** @title Datepicker emulating a Year and month picker */\n    var DatepickerViewsSelectionExample = /** @class */ (function () {\n        function DatepickerViewsSelectionExample() {\n            this.date = new forms.FormControl(moment$2());\n        }\n        DatepickerViewsSelectionExample.prototype.chosenYearHandler = function (normalizedYear) {\n            var ctrlValue = this.date.value;\n            ctrlValue.year(normalizedYear.year());\n            this.date.setValue(ctrlValue);\n        };\n        DatepickerViewsSelectionExample.prototype.chosenMonthHandler = function (normalizedMonth, datepicker) {\n            var ctrlValue = this.date.value;\n            ctrlValue.month(normalizedMonth.month());\n            this.date.setValue(ctrlValue);\n            datepicker.close();\n        };\n        DatepickerViewsSelectionExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'datepicker-views-selection-example',\n                        template: \"<mat-form-field>\\n  <input matInput [matDatepicker]=\\\"dp\\\" placeholder=\\\"Month and Year\\\" [formControl]=\\\"date\\\">\\n  <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\n  <mat-datepicker #dp\\n                  startView=\\\"multi-year\\\"\\n                  (yearSelected)=\\\"chosenYearHandler($event)\\\"\\n                  (monthSelected)=\\\"chosenMonthHandler($event, dp)\\\"\\n                  panelClass=\\\"example-month-picker\\\">\\n  </mat-datepicker>\\n</mat-form-field>\\n\",\n                        providers: [\n                            // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\n                            // application's root module. We provide it at the component level here, due to limitations of\n                            // our example generation script.\n                            {\n                                provide: core$1.DateAdapter,\n                                useClass: materialMomentAdapter.MomentDateAdapter,\n                                deps: [core$1.MAT_DATE_LOCALE, materialMomentAdapter.MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n                            },\n                            { provide: core$1.MAT_DATE_FORMATS, useValue: MY_FORMATS$1 },\n                        ],\n                        styles: [\".example-month-picker .mat-calendar-period-button {\\n  pointer-events: none;\\n}\\n\\n.example-month-picker .mat-calendar-arrow {\\n  display: none;\\n}\\n\"]\n                    }] }\n        ];\n        return DatepickerViewsSelectionExample;\n    }());\n\n    var EXAMPLES = [\n        DatepickerApiExample,\n        DatepickerColorExample,\n        DatepickerCustomHeaderExample,\n        DatepickerCustomIconExample,\n        DatepickerDateClassExample,\n        DatepickerDisabledExample,\n        DatepickerEventsExample,\n        DatepickerFilterExample,\n        DatepickerFormatsExample,\n        DatepickerLocaleExample,\n        DatepickerMinMaxExample,\n        DatepickerMomentExample,\n        DatepickerOverviewExample,\n        DatepickerStartViewExample,\n        DatepickerTouchExample,\n        DatepickerValueExample,\n        DatepickerViewsSelectionExample,\n        ExampleHeader,\n    ];\n    var DatepickerExamplesModule = /** @class */ (function () {\n        function DatepickerExamplesModule() {\n        }\n        DatepickerExamplesModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            button.MatButtonModule,\n                            datepicker.MatDatepickerModule,\n                            input.MatInputModule,\n                            icon.MatIconModule,\n                            core$1.MatNativeDateModule,\n                            forms.ReactiveFormsModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                    },] }\n        ];\n        return DatepickerExamplesModule;\n    }());\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_material_src_material_examples_material_datepicker_datepicker_a = MY_FORMATS;\n    exports.ɵangular_material_src_material_examples_material_datepicker_datepicker_b = MY_FORMATS$1;\n    exports.DatepickerApiExample = DatepickerApiExample;\n    exports.DatepickerColorExample = DatepickerColorExample;\n    exports.DatepickerCustomHeaderExample = DatepickerCustomHeaderExample;\n    exports.DatepickerCustomIconExample = DatepickerCustomIconExample;\n    exports.DatepickerDateClassExample = DatepickerDateClassExample;\n    exports.DatepickerDisabledExample = DatepickerDisabledExample;\n    exports.DatepickerEventsExample = DatepickerEventsExample;\n    exports.DatepickerFilterExample = DatepickerFilterExample;\n    exports.DatepickerFormatsExample = DatepickerFormatsExample;\n    exports.DatepickerLocaleExample = DatepickerLocaleExample;\n    exports.DatepickerMinMaxExample = DatepickerMinMaxExample;\n    exports.DatepickerMomentExample = DatepickerMomentExample;\n    exports.DatepickerOverviewExample = DatepickerOverviewExample;\n    exports.DatepickerStartViewExample = DatepickerStartViewExample;\n    exports.DatepickerTouchExample = DatepickerTouchExample;\n    exports.DatepickerValueExample = DatepickerValueExample;\n    exports.DatepickerViewsSelectionExample = DatepickerViewsSelectionExample;\n    exports.ExampleHeader = ExampleHeader;\n    exports.DatepickerExamplesModule = DatepickerExamplesModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=material-examples-material-datepicker.umd.js.map\n"]}
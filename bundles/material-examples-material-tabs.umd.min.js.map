{"version":3,"sources":["src/material-examples/material-examples-material-tabs.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","materialExamples","material","tabs","common","core","forms","button","checkbox","icon","input","rxjs","this","buttonToggle","TabGroupAlignExample","decorators","type","Component","args","selector","template","styles","TabGroupAnimationsExample","TabGroupAsyncExample","asyncTabs","Observable","observer","setTimeout","next","label","content","ctorParameters","TabGroupBasicExample","TabGroupCustomLabelExample","TabGroupDynamicHeightExample","TabGroupDynamicExample","selected","FormControl","prototype","addTab","selectAfterAdding","push","setValue","length","removeTab","index","splice","TabGroupHeaderBelowExample","TabGroupLazyLoadedExample","tabLoadTimes","getTimeLoaded","Date","TabGroupStretchedExample","TabGroupThemeExample","TabNavBarBasicExample","links","activeLink","background","toggleBackground","addLink","EXAMPLES","TabGroupExamplesModule","NgModule","imports","CommonModule","MatButtonModule","MatButtonToggleModule","MatCheckboxModule","MatIconModule","MatInputModule","MatTabsModule","ReactiveFormsModule","declarations","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('@angular/material/button'), require('@angular/material/button-toggle'), require('@angular/material/checkbox'), require('@angular/material/icon'), require('@angular/material/input'), require('@angular/material/tabs'), require('rxjs')) :\n    typeof define === 'function' && define.amd ? define('@angular/material-examples/material/tabs', ['exports', '@angular/common', '@angular/core', '@angular/forms', '@angular/material/button', '@angular/material/button-toggle', '@angular/material/checkbox', '@angular/material/icon', '@angular/material/input', '@angular/material/tabs', 'rxjs'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.materialExamples = global.ng.materialExamples || {}, global.ng.materialExamples.material = global.ng.materialExamples.material || {}, global.ng.materialExamples.material.tabs = {}), global.ng.common, global.ng.core, global.ng.forms, global.ng.material.button, global.ng.material['button-toggle'], global.ng.material.checkbox, global.ng.material.icon, global.ng.material.input, global.ng.material.tabs, global.rxjs));\n}(this, function (exports, common, core, forms, button, buttonToggle, checkbox, icon, input, tabs, rxjs) { 'use strict';\n\n    /**\n     * @title Tab group with aligned labels\n     */\n    var TabGroupAlignExample = /** @class */ (function () {\n        function TabGroupAlignExample() {\n        }\n        TabGroupAlignExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tab-group-align-example',\n                        template: \"<mat-tab-group mat-align-tabs=\\\"start\\\">\\n  <mat-tab label=\\\"First\\\">Content 1</mat-tab>\\n  <mat-tab label=\\\"Second\\\">Content 2</mat-tab>\\n  <mat-tab label=\\\"Third\\\">Content 3</mat-tab>\\n</mat-tab-group>\\n\\n<mat-tab-group mat-align-tabs=\\\"center\\\">\\n  <mat-tab label=\\\"First\\\">Content 1</mat-tab>\\n  <mat-tab label=\\\"Second\\\">Content 2</mat-tab>\\n  <mat-tab label=\\\"Third\\\">Content 3</mat-tab>\\n</mat-tab-group>\\n\\n<mat-tab-group mat-align-tabs=\\\"end\\\">\\n  <mat-tab label=\\\"First\\\">Content 1</mat-tab>\\n  <mat-tab label=\\\"Second\\\">Content 2</mat-tab>\\n  <mat-tab label=\\\"Third\\\">Content 3</mat-tab>\\n</mat-tab-group>\\n\",\n                        styles: [\".mat-tab-group {\\n  margin-bottom: 48px;\\n}\\n\"]\n                    }] }\n        ];\n        return TabGroupAlignExample;\n    }());\n\n    /**\n     * @title Tab group animations\n     */\n    var TabGroupAnimationsExample = /** @class */ (function () {\n        function TabGroupAnimationsExample() {\n        }\n        TabGroupAnimationsExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tab-group-animations-example',\n                        template: \"<h3>No animation</h3>\\n\\n<mat-tab-group animationDuration=\\\"0ms\\\">\\n  <mat-tab label=\\\"First\\\">Content 1</mat-tab>\\n  <mat-tab label=\\\"Second\\\">Content 2</mat-tab>\\n  <mat-tab label=\\\"Third\\\">Content 3</mat-tab>\\n</mat-tab-group>\\n\\n<h3>Very slow animation</h3>\\n<mat-tab-group animationDuration=\\\"2000ms\\\">\\n  <mat-tab label=\\\"First\\\">Content 1</mat-tab>\\n  <mat-tab label=\\\"Second\\\">Content 2</mat-tab>\\n  <mat-tab label=\\\"Third\\\">Content 3</mat-tab>\\n</mat-tab-group>\\n\",\n                        styles: [\".mat-tab-group {\\n  margin-bottom: 48px;\\n}\\n\"]\n                    }] }\n        ];\n        return TabGroupAnimationsExample;\n    }());\n\n    /**\n     * @title Tab group with asynchronously loading tab contents\n     */\n    var TabGroupAsyncExample = /** @class */ (function () {\n        function TabGroupAsyncExample() {\n            this.asyncTabs = new rxjs.Observable(function (observer) {\n                setTimeout(function () {\n                    observer.next([\n                        { label: 'First', content: 'Content 1' },\n                        { label: 'Second', content: 'Content 2' },\n                        { label: 'Third', content: 'Content 3' },\n                    ]);\n                }, 1000);\n            });\n        }\n        TabGroupAsyncExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tab-group-async-example',\n                        template: \"<ng-container *ngIf=\\\"(asyncTabs | async) === null\\\">\\n  Loading tabs...\\n</ng-container>\\n\\n<mat-tab-group>\\n  <mat-tab *ngFor=\\\"let tab of asyncTabs | async\\\">\\n    <ng-template mat-tab-label>{{tab.label}}</ng-template>\\n    {{tab.content}}\\n  </mat-tab>\\n</mat-tab-group>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        TabGroupAsyncExample.ctorParameters = function () { return []; };\n        return TabGroupAsyncExample;\n    }());\n\n    /**\n     * @title Basic use of the tab group\n     */\n    var TabGroupBasicExample = /** @class */ (function () {\n        function TabGroupBasicExample() {\n        }\n        TabGroupBasicExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tab-group-basic-example',\n                        template: \"<mat-tab-group>\\n  <mat-tab label=\\\"First\\\"> Content 1 </mat-tab>\\n  <mat-tab label=\\\"Second\\\"> Content 2 </mat-tab>\\n  <mat-tab label=\\\"Third\\\"> Content 3 </mat-tab>\\n</mat-tab-group>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        return TabGroupBasicExample;\n    }());\n\n    /**\n     * @title Using tabs with a custom label template\n     */\n    var TabGroupCustomLabelExample = /** @class */ (function () {\n        function TabGroupCustomLabelExample() {\n        }\n        TabGroupCustomLabelExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tab-group-custom-label-example',\n                        template: \"<mat-tab-group>\\n  <mat-tab>\\n    <ng-template mat-tab-label>\\n      <mat-icon class=\\\"example-tab-icon\\\">thumb_up</mat-icon>\\n      First\\n    </ng-template>\\n    Content 1\\n  </mat-tab>\\n\\n  <mat-tab>\\n    <ng-template mat-tab-label>\\n      <mat-icon class=\\\"example-tab-icon\\\">thumb_up</mat-icon>\\n      Second\\n    </ng-template>\\n    Content 2\\n  </mat-tab>\\n\\n  <mat-tab>\\n    <ng-template mat-tab-label>\\n      <mat-icon class=\\\"example-tab-icon\\\">thumb_up</mat-icon>\\n      Third\\n    </ng-template>\\n\\n    Content 3\\n  </mat-tab>\\n</mat-tab-group>\\n\",\n                        styles: [\".example-tab-icon {\\n  margin-right: 8px;\\n}\\n\"]\n                    }] }\n        ];\n        return TabGroupCustomLabelExample;\n    }());\n\n    /**\n     * @title Tab group with dynamic height based on tab contents\n     */\n    var TabGroupDynamicHeightExample = /** @class */ (function () {\n        function TabGroupDynamicHeightExample() {\n        }\n        TabGroupDynamicHeightExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tab-group-dynamic-height-example',\n                        template: \"<mat-tab-group dynamicHeight>\\n  <mat-tab label=\\\"Short tab\\\">\\n    <div class=\\\"example-small-box mat-elevation-z4\\\">\\n      Small content\\n    </div>\\n  </mat-tab>\\n  <mat-tab label=\\\"Long tab\\\">\\n    <div class=\\\"example-large-box mat-elevation-z4\\\">\\n      Large content\\n    </div>\\n  </mat-tab>\\n</mat-tab-group>\\n\",\n                        styles: [\".example-small-box, .example-large-box {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  margin: 16px;\\n  padding: 16px;\\n  border-radius: 8px;\\n}\\n\\n.example-small-box {\\n  height: 100px;\\n  width: 100px;\\n}\\n\\n.example-large-box {\\n  height: 300px;\\n  width: 300px;\\n}\\n\"]\n                    }] }\n        ];\n        return TabGroupDynamicHeightExample;\n    }());\n\n    /**\n     * @title Tab group with dynamically changing tabs\n     */\n    var TabGroupDynamicExample = /** @class */ (function () {\n        function TabGroupDynamicExample() {\n            this.tabs = ['First', 'Second', 'Third'];\n            this.selected = new forms.FormControl(0);\n        }\n        TabGroupDynamicExample.prototype.addTab = function (selectAfterAdding) {\n            this.tabs.push('New');\n            if (selectAfterAdding) {\n                this.selected.setValue(this.tabs.length - 1);\n            }\n        };\n        TabGroupDynamicExample.prototype.removeTab = function (index) {\n            this.tabs.splice(index, 1);\n        };\n        TabGroupDynamicExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tab-group-dynamic-example',\n                        template: \"<div>\\n  <span class=\\\"example-input-label\\\"> Selected tab index: </span>\\n  <mat-form-field>\\n    <input matInput type=\\\"number\\\" [formControl]=\\\"selected\\\">\\n  </mat-form-field>\\n</div>\\n\\n<div>\\n  <button mat-raised-button\\n          class=\\\"example-add-tab-button\\\"\\n          (click)=\\\"addTab(selectAfterAdding.checked)\\\">\\n    Add new tab\\n  </button>\\n  <mat-checkbox #selectAfterAdding> Select tab after adding </mat-checkbox>\\n</div>\\n\\n<mat-tab-group [selectedIndex]=\\\"selected.value\\\"\\n               (selectedIndexChange)=\\\"selected.setValue($event)\\\">\\n  <mat-tab *ngFor=\\\"let tab of tabs; let index = index\\\" [label]=\\\"tab\\\">\\n    Contents for {{tab}} tab\\n\\n    <button mat-raised-button\\n            class=\\\"example-delete-tab-button\\\"\\n            [disabled]=\\\"tabs.length === 1\\\"\\n            (click)=\\\"removeTab(index)\\\">\\n      Delete Tab\\n    </button>\\n  </mat-tab>\\n</mat-tab-group>\\n\",\n                        styles: [\".example-input-label,\\n.example-add-tab-button,\\n.example-delete-tab-button {\\n  margin: 8px;\\n}\\n\"]\n                    }] }\n        ];\n        return TabGroupDynamicExample;\n    }());\n\n    /**\n     * @title Tab group with the headers on the bottom\n     */\n    var TabGroupHeaderBelowExample = /** @class */ (function () {\n        function TabGroupHeaderBelowExample() {\n        }\n        TabGroupHeaderBelowExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tab-group-header-below-example',\n                        template: \"<mat-tab-group headerPosition=\\\"below\\\">\\n  <mat-tab label=\\\"First\\\"> Content 1 </mat-tab>\\n  <mat-tab label=\\\"Second\\\"> Content 2 </mat-tab>\\n  <mat-tab label=\\\"Third\\\"> Content 3 </mat-tab>\\n</mat-tab-group>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        return TabGroupHeaderBelowExample;\n    }());\n\n    /**\n     * @title Tab group where the tab content is loaded lazily (when activated)\n     */\n    var TabGroupLazyLoadedExample = /** @class */ (function () {\n        function TabGroupLazyLoadedExample() {\n            this.tabLoadTimes = [];\n        }\n        TabGroupLazyLoadedExample.prototype.getTimeLoaded = function (index) {\n            if (!this.tabLoadTimes[index]) {\n                this.tabLoadTimes[index] = new Date();\n            }\n            return this.tabLoadTimes[index];\n        };\n        TabGroupLazyLoadedExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tab-group-lazy-loaded-example',\n                        template: \"<mat-tab-group>\\n  <mat-tab label=\\\"First\\\">\\n    <ng-template matTabContent>\\n      Content 1 - Loaded: {{getTimeLoaded(1) | date:'medium'}}\\n    </ng-template>\\n  </mat-tab>\\n  <mat-tab label=\\\"Second\\\">\\n    <ng-template matTabContent>\\n      Content 2 - Loaded: {{getTimeLoaded(2) | date:'medium'}}\\n    </ng-template>\\n  </mat-tab>\\n  <mat-tab label=\\\"Third\\\">\\n    <ng-template matTabContent>\\n      Content 3 - Loaded: {{getTimeLoaded(3) | date:'medium'}}\\n    </ng-template>\\n  </mat-tab>\\n</mat-tab-group>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        return TabGroupLazyLoadedExample;\n    }());\n\n    /**\n     * @title Tab group with stretched labels\n     */\n    var TabGroupStretchedExample = /** @class */ (function () {\n        function TabGroupStretchedExample() {\n        }\n        TabGroupStretchedExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tab-group-stretched-example',\n                        template: \"<mat-tab-group mat-stretch-tabs class=\\\"example-stretched-tabs mat-elevation-z4\\\">\\n  <mat-tab label=\\\"First\\\"> Content 1 </mat-tab>\\n  <mat-tab label=\\\"Second\\\"> Content 2 </mat-tab>\\n  <mat-tab label=\\\"Third\\\"> Content 3 </mat-tab>\\n</mat-tab-group>\\n\",\n                        styles: [\".example-stretched-tabs {\\n  max-width: 800px;\\n}\\n\"]\n                    }] }\n        ];\n        return TabGroupStretchedExample;\n    }());\n\n    /**\n     * @title Customizing the theme options on the tab group\n     */\n    var TabGroupThemeExample = /** @class */ (function () {\n        function TabGroupThemeExample() {\n        }\n        TabGroupThemeExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tab-group-theme-example',\n                        template: \"<div>\\n  <mat-button-toggle-group #colorToggle=\\\"matButtonToggleGroup\\\"\\n                           value=\\\"primary\\\"\\n                           aria-label=\\\"Change color\\\">\\n    <mat-button-toggle value=\\\"primary\\\"> Primary </mat-button-toggle>\\n    <mat-button-toggle value=\\\"accent\\\"> Accent </mat-button-toggle>\\n  </mat-button-toggle-group>\\n  <span class=\\\"example-button-toggle-label\\\"> Color </span>\\n</div>\\n\\n<div>\\n  <mat-button-toggle-group #backgroundColorToggle=\\\"matButtonToggleGroup\\\"\\n                           value=\\\"primary\\\"\\n                           aria-label=\\\"Change color\\\">\\n    <mat-button-toggle value=\\\"primary\\\"> Primary </mat-button-toggle>\\n    <mat-button-toggle value=\\\"accent\\\"> Accent </mat-button-toggle>\\n  </mat-button-toggle-group>\\n  <span class=\\\"example-button-toggle-label\\\"> Background Color </span>\\n</div>\\n\\n<mat-tab-group [color]=\\\"colorToggle.value\\\" [backgroundColor]=\\\"backgroundColorToggle.value\\\">\\n  <mat-tab label=\\\"First\\\"> Content 1 </mat-tab>\\n  <mat-tab label=\\\"Second\\\"> Content 2 </mat-tab>\\n  <mat-tab label=\\\"Third\\\"> Content 3 </mat-tab>\\n</mat-tab-group>\\n\",\n                        styles: [\".example-button-toggle-label {\\n  display: inline-block;\\n  margin: 16px;\\n}\\n\"]\n                    }] }\n        ];\n        return TabGroupThemeExample;\n    }());\n\n    /**\n     * @title Basic use of the tab nav bar\n     */\n    var TabNavBarBasicExample = /** @class */ (function () {\n        function TabNavBarBasicExample() {\n            this.links = ['First', 'Second', 'Third'];\n            this.activeLink = this.links[0];\n            this.background = '';\n        }\n        TabNavBarBasicExample.prototype.toggleBackground = function () {\n            this.background = this.background ? '' : 'primary';\n        };\n        TabNavBarBasicExample.prototype.addLink = function () {\n            this.links.push(\"Link \" + (this.links.length + 1));\n        };\n        TabNavBarBasicExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tab-nav-bar-basic-example',\n                        template: \"<nav mat-tab-nav-bar [backgroundColor]=\\\"background\\\">\\n  <a mat-tab-link *ngFor=\\\"let link of links\\\"\\n     (click)=\\\"activeLink = link\\\"\\n     [active]=\\\"activeLink == link\\\"> {{link}} </a>\\n  <a mat-tab-link disabled>Disabled Link</a>\\n</nav>\\n\\n<button mat-raised-button class=\\\"example-action-button\\\" (click)=\\\"toggleBackground()\\\">\\n  Toggle background\\n</button>\\n<button mat-raised-button class=\\\"example-action-button\\\" (click)=\\\"addLink()\\\">\\n  Add link\\n</button>\\n\",\n                        styles: [\".example-action-button {\\n  margin-top: 8px;\\n  margin-right: 8px;\\n}\\n\"]\n                    }] }\n        ];\n        return TabNavBarBasicExample;\n    }());\n\n    var EXAMPLES = [\n        TabGroupAlignExample,\n        TabGroupAnimationsExample,\n        TabGroupAsyncExample,\n        TabGroupBasicExample,\n        TabGroupCustomLabelExample,\n        TabGroupDynamicExample,\n        TabGroupDynamicHeightExample,\n        TabGroupHeaderBelowExample,\n        TabGroupLazyLoadedExample,\n        TabGroupStretchedExample,\n        TabGroupThemeExample,\n        TabNavBarBasicExample,\n    ];\n    var TabGroupExamplesModule = /** @class */ (function () {\n        function TabGroupExamplesModule() {\n        }\n        TabGroupExamplesModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            button.MatButtonModule,\n                            buttonToggle.MatButtonToggleModule,\n                            checkbox.MatCheckboxModule,\n                            icon.MatIconModule,\n                            input.MatInputModule,\n                            tabs.MatTabsModule,\n                            forms.ReactiveFormsModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                    },] }\n        ];\n        return TabGroupExamplesModule;\n    }());\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.TabGroupAlignExample = TabGroupAlignExample;\n    exports.TabGroupAnimationsExample = TabGroupAnimationsExample;\n    exports.TabGroupAsyncExample = TabGroupAsyncExample;\n    exports.TabGroupBasicExample = TabGroupBasicExample;\n    exports.TabGroupCustomLabelExample = TabGroupCustomLabelExample;\n    exports.TabGroupDynamicExample = TabGroupDynamicExample;\n    exports.TabGroupDynamicHeightExample = TabGroupDynamicHeightExample;\n    exports.TabGroupHeaderBelowExample = TabGroupHeaderBelowExample;\n    exports.TabGroupLazyLoadedExample = TabGroupLazyLoadedExample;\n    exports.TabGroupStretchedExample = TabGroupStretchedExample;\n    exports.TabGroupThemeExample = TabGroupThemeExample;\n    exports.TabNavBarBasicExample = TabNavBarBasicExample;\n    exports.TabGroupExamplesModule = TabGroupExamplesModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=material-examples-material-tabs.umd.js.map\n"]}
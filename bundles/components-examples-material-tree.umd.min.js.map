{"version":3,"sources":["src/components-examples/components-examples-material-tree.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","componentsExamples","material","tree","common","core","button","checkbox","icon","input","progressBar","cdk","collections","rxjs","formField","operators","this","i4","i0","i2","i3","i3$1","i5","i5$1","i1","i4$1","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","TreeChecklistExample_mat_tree_node_1_Template","rf","ctx","_r5","ɵɵgetCurrentView","ɵɵelementStart","ɵɵelement","ɵɵlistener","TreeChecklistExample_mat_tree_node_1_Template_mat_checkbox_change_2_listener","ɵɵrestoreView","node_r3","$implicit","ɵɵnextContext","todoLeafItemSelectionToggle","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵadvance","ɵɵproperty","checklistSelection","isSelected","ɵɵtextInterpolate","item","TreeChecklistExample_mat_tree_node_2_Template","_r9","TreeChecklistExample_mat_tree_node_2_Template_button_click_7_listener","node_r6","_r7","ɵɵreference","saveNode","TreeChecklistExample_mat_tree_node_3_Template","_r12","TreeChecklistExample_mat_tree_node_3_Template_mat_checkbox_change_4_listener","node_r10","todoItemSelectionToggle","TreeChecklistExample_mat_tree_node_3_Template_button_click_6_listener","addNewItem","ctx_r2","ɵɵattribute","filename","ɵɵtextInterpolate1","treeControl","isExpanded","descendantsAllSelected","descendantsPartiallySelected","TodoItemNode","TodoItemFlatNode","TREE_DATA","Groceries","Almond Meal flour","Organic eggs","Protein Powder","Fruits","Apple","Berries","Orange","Reminders","ChecklistDatabase","dataChange","BehaviorSubject","initialize","Object","defineProperty","prototype","get","enumerable","configurable","data","buildFileTree","obj","level","_this","keys","reduce","accumulator","key","node","children","insertItem","parent","name","updateItem","decorators","type","Injectable","ctorParameters","ɵprov","ɵɵdefineInjectable","token","ɵfac","ChecklistDatabase_Factory","t","TreeChecklistExample","_database","flatNodeMap","Map","nestedNodeMap","selectedParent","newItemName","SelectionModel","getLevel","isExpandable","expandable","getChildren","hasChild","_","_nodeData","hasNoContent","transformer","existingNode","flatNode","set","treeFlattener","MatTreeFlattener","FlatTreeControl","dataSource","MatTreeFlatDataSource","subscribe","getDescendants","every","child","some","_a","_b","toggle","descendants","select","apply","deselect","checkAllParentsSelection","getParentNode","checkRootNodeSelection","nodeSelected","descAllSelected","currentLevel","dataNodes","indexOf","currentNode","parentNode","expand","itemValue","nestedNode","Component","args","selector","templateUrl","styleUrls","providers","TreeChecklistExample_Factory","ɵɵdirectiveInject","ɵcmp","ɵɵdefineComponent","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","TreeChecklistExample_Template","ɵɵtemplate","directives","MatTree","MatTreeNodeDef","MatTreeNode","MatTreeNodeToggle","MatTreeNodePadding","MatButton","MatCheckbox","MatFormField","MatLabel","MatInput","MatIcon","styles","TreeDynamicExample_mat_tree_node_1_Template","node_r16","TreeDynamicExample_mat_tree_node_2_mat_progress_bar_5_Template","TreeDynamicExample_mat_tree_node_2_Template","node_r17","ctx_r15","isLoading","DynamicFlatNode","DynamicDatabase","dataMap","rootLevelNodes","initialData","map","has","providedIn","DynamicDatabase_Factory","DynamicDataSource","_treeControl","connect","collectionViewer","expansionModel","changed","change","added","removed","handleTreeControl","merge","viewChange","pipe","disconnect","forEach","toggleNode","slice","reverse","index","setTimeout","nodes","splice","count","TreeDynamicExample","database","TreeDynamicExample_Factory","TreeDynamicExample_Template","NgIf","MatProgressBar","TreeFlatOverviewExample_mat_tree_node_1_Template","node_r21","TreeFlatOverviewExample_mat_tree_node_2_Template","node_r22","ctx_r20","TREE_DATA$1","TreeFlatOverviewExample","_transformer","TreeFlatOverviewExample_Factory","TreeFlatOverviewExample_Template","TreeLoadmoreExample_mat_tree_node_1_Template","node_r26","TreeLoadmoreExample_mat_tree_node_2_Template","_r29","TreeLoadmoreExample_mat_tree_node_2_Template_button_click_1_listener","node_r27","loadChildren","ctx_r24","TreeLoadmoreExample_mat_tree_node_3_Template","_r32","TreeLoadmoreExample_mat_tree_node_3_Template_button_click_1_listener","node_r30","loadMore","loadMoreParentItem","LOAD_MORE","LoadmoreNode","hasChildren","childrenChange","LoadmoreFlatNode","LoadmoreDatabase","batchNumber","nodeMap","_generateNode","onlyFirstTime","newChildrenNumber","result","LoadmoreDatabase_Factory","TreeLoadmoreExample","newNode","isLoadMore","TreeLoadmoreExample_Factory","TreeLoadmoreExample_Template","TreeNestedOverviewExample_mat_tree_node_1_Template","node_r35","TreeNestedOverviewExample_mat_nested_tree_node_2_Template","ɵɵelementContainer","node_r36","ctx_r34","ɵɵclassProp","TREE_DATA$2","TreeNestedOverviewExample","NestedTreeControl","MatTreeNestedDataSource","TreeNestedOverviewExample_Factory","TreeNestedOverviewExample_Template","MatNestedTreeNode","MatTreeNodeOutlet","EXAMPLES","TreeExamplesModule","NgModule","imports","CommonModule","MatButtonModule","MatCheckboxModule","MatIconModule","MatInputModule","MatProgressBarModule","MatTreeModule","declarations","entryComponents","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","TreeExamplesModule_Factory","ngJitMode","ɵɵsetNgModuleScope"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/material/button'), require('@angular/material/checkbox'), require('@angular/material/icon'), require('@angular/material/input'), require('@angular/material/progress-bar'), require('@angular/material/tree'), require('@angular/cdk/collections'), require('@angular/cdk/tree'), require('rxjs'), require('@angular/material/form-field'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/components-examples/material/tree', ['exports', '@angular/common', '@angular/core', '@angular/material/button', '@angular/material/checkbox', '@angular/material/icon', '@angular/material/input', '@angular/material/progress-bar', '@angular/material/tree', '@angular/cdk/collections', '@angular/cdk/tree', 'rxjs', '@angular/material/form-field', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.componentsExamples = global.ng.componentsExamples || {}, global.ng.componentsExamples.material = global.ng.componentsExamples.material || {}, global.ng.componentsExamples.material.tree = {}), global.ng.common, global.ng.core, global.ng.material.button, global.ng.material.checkbox, global.ng.material.icon, global.ng.material.input, global.ng.material.progressBar, global.ng.material.tree, global.ng.cdk.collections, global.ng.cdk.tree, global.rxjs, global.ng.material.formField, global.rxjs.operators));\n}(this, (function (exports, i4, i0, i2, i3, i3$1, i5, i5$1, i1, collections, tree, rxjs, i4$1, operators) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\r\n\r\n    function __rest(s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    }\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\r\n\r\n    function __param(paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    }\r\n\r\n    function __metadata(metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    }\r\n\r\n    function __awaiter(thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    }\r\n\r\n    function __generator(thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    }\r\n\r\n    function __exportStar(m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n\r\n    function __values(o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    }\r\n\r\n    function __read(o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    }\r\n\r\n    function __spread() {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    }\r\n\r\n    function __spreadArrays() {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    function __await(v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    }\r\n\r\n    function __asyncGenerator(thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    }\r\n\r\n    function __asyncDelegator(o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    }\r\n\r\n    function __asyncValues(o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    }\r\n\r\n    function __makeTemplateObject(cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    function __importStar(mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result.default = mod;\r\n        return result;\r\n    }\r\n\r\n    function __importDefault(mod) {\r\n        return (mod && mod.__esModule) ? mod : { default: mod };\r\n    }\n\n    function TreeChecklistExample_mat_tree_node_1_Template(rf, ctx) { if (rf & 1) {\n        var _r5 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"mat-tree-node\", 3);\n        i0.ɵɵelement(1, \"button\", 4);\n        i0.ɵɵelementStart(2, \"mat-checkbox\", 5);\n        i0.ɵɵlistener(\"change\", function TreeChecklistExample_mat_tree_node_1_Template_mat_checkbox_change_2_listener() { i0.ɵɵrestoreView(_r5); var node_r3 = ctx.$implicit; var ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.todoLeafItemSelectionToggle(node_r3); });\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var node_r3 = ctx.$implicit;\n        var ctx_r0 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"checked\", ctx_r0.checklistSelection.isSelected(node_r3));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(node_r3.item);\n    } }\n    function TreeChecklistExample_mat_tree_node_2_Template(rf, ctx) { if (rf & 1) {\n        var _r9 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"mat-tree-node\", 6);\n        i0.ɵɵelement(1, \"button\", 4);\n        i0.ɵɵelementStart(2, \"mat-form-field\");\n        i0.ɵɵelementStart(3, \"mat-label\");\n        i0.ɵɵtext(4, \"New item...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 7, 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function TreeChecklistExample_mat_tree_node_2_Template_button_click_7_listener() { i0.ɵɵrestoreView(_r9); var node_r6 = ctx.$implicit; var _r7 = i0.ɵɵreference(6); var ctx_r8 = i0.ɵɵnextContext(); return ctx_r8.saveNode(node_r6, _r7.value); });\n        i0.ɵɵtext(8, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } }\n    function TreeChecklistExample_mat_tree_node_3_Template(rf, ctx) { if (rf & 1) {\n        var _r12 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"mat-tree-node\", 6);\n        i0.ɵɵelementStart(1, \"button\", 10);\n        i0.ɵɵelementStart(2, \"mat-icon\", 11);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-checkbox\", 12);\n        i0.ɵɵlistener(\"change\", function TreeChecklistExample_mat_tree_node_3_Template_mat_checkbox_change_4_listener() { i0.ɵɵrestoreView(_r12); var node_r10 = ctx.$implicit; var ctx_r11 = i0.ɵɵnextContext(); return ctx_r11.todoItemSelectionToggle(node_r10); });\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function TreeChecklistExample_mat_tree_node_3_Template_button_click_6_listener() { i0.ɵɵrestoreView(_r12); var node_r10 = ctx.$implicit; var ctx_r13 = i0.ɵɵnextContext(); return ctx_r13.addNewItem(node_r10); });\n        i0.ɵɵelementStart(7, \"mat-icon\");\n        i0.ɵɵtext(8, \"add\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var node_r10 = ctx.$implicit;\n        var ctx_r2 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"toggle \" + node_r10.filename);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r2.treeControl.isExpanded(node_r10) ? \"expand_more\" : \"chevron_right\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"checked\", ctx_r2.descendantsAllSelected(node_r10))(\"indeterminate\", ctx_r2.descendantsPartiallySelected(node_r10));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(node_r10.item);\n    } }\n    /**\n     * Node for to-do item\n     */\n    var TodoItemNode = /** @class */ (function () {\n        function TodoItemNode() {\n        }\n        return TodoItemNode;\n    }());\n    /** Flat to-do item node with expandable and level information */\n    var TodoItemFlatNode = /** @class */ (function () {\n        function TodoItemFlatNode() {\n        }\n        return TodoItemFlatNode;\n    }());\n    /**\n     * The Json object for to-do list data.\n     */\n    var TREE_DATA = {\n        Groceries: {\n            'Almond Meal flour': null,\n            'Organic eggs': null,\n            'Protein Powder': null,\n            Fruits: {\n                Apple: null,\n                Berries: ['Blueberry', 'Raspberry'],\n                Orange: null\n            }\n        },\n        Reminders: [\n            'Cook dinner',\n            'Read the Material Design spec',\n            'Upgrade Application to Angular'\n        ]\n    };\n    /**\n     * Checklist database, it can build a tree structured Json object.\n     * Each node in Json object represents a to-do item or a category.\n     * If a node is a category, it has children items and new items can be added under the category.\n     */\n    var ChecklistDatabase = /** @class */ (function () {\n        function ChecklistDatabase() {\n            this.dataChange = new rxjs.BehaviorSubject([]);\n            this.initialize();\n        }\n        Object.defineProperty(ChecklistDatabase.prototype, \"data\", {\n            get: function () { return this.dataChange.value; },\n            enumerable: true,\n            configurable: true\n        });\n        ChecklistDatabase.prototype.initialize = function () {\n            // Build the tree nodes from Json object. The result is a list of `TodoItemNode` with nested\n            //     file node as children.\n            var data = this.buildFileTree(TREE_DATA, 0);\n            // Notify the change.\n            this.dataChange.next(data);\n        };\n        /**\n         * Build the file structure tree. The `value` is the Json object, or a sub-tree of a Json object.\n         * The return value is the list of `TodoItemNode`.\n         */\n        ChecklistDatabase.prototype.buildFileTree = function (obj, level) {\n            var _this = this;\n            return Object.keys(obj).reduce(function (accumulator, key) {\n                var value = obj[key];\n                var node = new TodoItemNode();\n                node.item = key;\n                if (value != null) {\n                    if (typeof value === 'object') {\n                        node.children = _this.buildFileTree(value, level + 1);\n                    }\n                    else {\n                        node.item = value;\n                    }\n                }\n                return accumulator.concat(node);\n            }, []);\n        };\n        /** Add an item to to-do list */\n        ChecklistDatabase.prototype.insertItem = function (parent, name) {\n            if (parent.children) {\n                parent.children.push({ item: name });\n                this.dataChange.next(this.data);\n            }\n        };\n        ChecklistDatabase.prototype.updateItem = function (node, name) {\n            node.item = name;\n            this.dataChange.next(this.data);\n        };\n        ChecklistDatabase.decorators = [\n            { type: i0.Injectable },\n        ];\n        /** @nocollapse */\n        ChecklistDatabase.ctorParameters = function () { return []; };\n        ChecklistDatabase.ɵfac = function ChecklistDatabase_Factory(t) { return new (t || ChecklistDatabase)(); };\n        ChecklistDatabase.ɵprov = i0.ɵɵdefineInjectable({ token: ChecklistDatabase, factory: ChecklistDatabase.ɵfac });\n        return ChecklistDatabase;\n    }());\n    /*@__PURE__*/ (function () { i0.ɵsetClassMetadata(ChecklistDatabase, [{\n            type: i0.Injectable\n        }], function () { return []; }, null); })();\n    /**\n     * @title Tree with checkboxes\n     */\n    var TreeChecklistExample = /** @class */ (function () {\n        function TreeChecklistExample(_database) {\n            var _this = this;\n            this._database = _database;\n            /** Map from flat node to nested node. This helps us finding the nested node to be modified */\n            this.flatNodeMap = new Map();\n            /** Map from nested node to flattened node. This helps us to keep the same object for selection */\n            this.nestedNodeMap = new Map();\n            /** A selected parent node to be inserted */\n            this.selectedParent = null;\n            /** The new item's name */\n            this.newItemName = '';\n            /** The selection for checklist */\n            this.checklistSelection = new collections.SelectionModel(true /* multiple */);\n            this.getLevel = function (node) { return node.level; };\n            this.isExpandable = function (node) { return node.expandable; };\n            this.getChildren = function (node) { return node.children; };\n            this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };\n            this.hasNoContent = function (_, _nodeData) { return _nodeData.item === ''; };\n            /**\n             * Transformer to convert nested node to flat node. Record the nodes in maps for later use.\n             */\n            this.transformer = function (node, level) {\n                var existingNode = _this.nestedNodeMap.get(node);\n                var flatNode = existingNode && existingNode.item === node.item\n                    ? existingNode\n                    : new TodoItemFlatNode();\n                flatNode.item = node.item;\n                flatNode.level = level;\n                flatNode.expandable = !!node.children;\n                _this.flatNodeMap.set(flatNode, node);\n                _this.nestedNodeMap.set(node, flatNode);\n                return flatNode;\n            };\n            this.treeFlattener = new i1.MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n            this.treeControl = new tree.FlatTreeControl(this.getLevel, this.isExpandable);\n            this.dataSource = new i1.MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n            _database.dataChange.subscribe(function (data) {\n                _this.dataSource.data = data;\n            });\n        }\n        /** Whether all the descendants of the node are selected. */\n        TreeChecklistExample.prototype.descendantsAllSelected = function (node) {\n            var _this = this;\n            var descendants = this.treeControl.getDescendants(node);\n            var descAllSelected = descendants.every(function (child) {\n                return _this.checklistSelection.isSelected(child);\n            });\n            return descAllSelected;\n        };\n        /** Whether part of the descendants are selected */\n        TreeChecklistExample.prototype.descendantsPartiallySelected = function (node) {\n            var _this = this;\n            var descendants = this.treeControl.getDescendants(node);\n            var result = descendants.some(function (child) { return _this.checklistSelection.isSelected(child); });\n            return result && !this.descendantsAllSelected(node);\n        };\n        /** Toggle the to-do item selection. Select/deselect all the descendants node */\n        TreeChecklistExample.prototype.todoItemSelectionToggle = function (node) {\n            var _a, _b;\n            var _this = this;\n            this.checklistSelection.toggle(node);\n            var descendants = this.treeControl.getDescendants(node);\n            this.checklistSelection.isSelected(node)\n                ? (_a = this.checklistSelection).select.apply(_a, __spread(descendants)) : (_b = this.checklistSelection).deselect.apply(_b, __spread(descendants));\n            // Force update for the parent\n            descendants.every(function (child) {\n                return _this.checklistSelection.isSelected(child);\n            });\n            this.checkAllParentsSelection(node);\n        };\n        /** Toggle a leaf to-do item selection. Check all the parents to see if they changed */\n        TreeChecklistExample.prototype.todoLeafItemSelectionToggle = function (node) {\n            this.checklistSelection.toggle(node);\n            this.checkAllParentsSelection(node);\n        };\n        /* Checks all the parents when a leaf node is selected/unselected */\n        TreeChecklistExample.prototype.checkAllParentsSelection = function (node) {\n            var parent = this.getParentNode(node);\n            while (parent) {\n                this.checkRootNodeSelection(parent);\n                parent = this.getParentNode(parent);\n            }\n        };\n        /** Check root node checked state and change it accordingly */\n        TreeChecklistExample.prototype.checkRootNodeSelection = function (node) {\n            var _this = this;\n            var nodeSelected = this.checklistSelection.isSelected(node);\n            var descendants = this.treeControl.getDescendants(node);\n            var descAllSelected = descendants.every(function (child) {\n                return _this.checklistSelection.isSelected(child);\n            });\n            if (nodeSelected && !descAllSelected) {\n                this.checklistSelection.deselect(node);\n            }\n            else if (!nodeSelected && descAllSelected) {\n                this.checklistSelection.select(node);\n            }\n        };\n        /* Get the parent node of a node */\n        TreeChecklistExample.prototype.getParentNode = function (node) {\n            var currentLevel = this.getLevel(node);\n            if (currentLevel < 1) {\n                return null;\n            }\n            var startIndex = this.treeControl.dataNodes.indexOf(node) - 1;\n            for (var i = startIndex; i >= 0; i--) {\n                var currentNode = this.treeControl.dataNodes[i];\n                if (this.getLevel(currentNode) < currentLevel) {\n                    return currentNode;\n                }\n            }\n            return null;\n        };\n        /** Select the category so we can insert the new item. */\n        TreeChecklistExample.prototype.addNewItem = function (node) {\n            var parentNode = this.flatNodeMap.get(node);\n            this._database.insertItem(parentNode, '');\n            this.treeControl.expand(node);\n        };\n        /** Save the node to database */\n        TreeChecklistExample.prototype.saveNode = function (node, itemValue) {\n            var nestedNode = this.flatNodeMap.get(node);\n            this._database.updateItem(nestedNode, itemValue);\n        };\n        TreeChecklistExample.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'tree-checklist-example',\n                        templateUrl: 'tree-checklist-example.html',\n                        styleUrls: ['tree-checklist-example.css'],\n                        providers: [ChecklistDatabase]\n                    },] },\n        ];\n        /** @nocollapse */\n        TreeChecklistExample.ctorParameters = function () { return [\n            { type: ChecklistDatabase }\n        ]; };\n        TreeChecklistExample.ɵfac = function TreeChecklistExample_Factory(t) { return new (t || TreeChecklistExample)(i0.ɵɵdirectiveInject(ChecklistDatabase)); };\n        TreeChecklistExample.ɵcmp = i0.ɵɵdefineComponent({ type: TreeChecklistExample, selectors: [[\"tree-checklist-example\"]], features: [i0.ɵɵProvidersFeature([ChecklistDatabase])], decls: 4, vars: 4, consts: [[3, \"dataSource\", \"treeControl\"], [\"matTreeNodeToggle\", \"\", \"matTreeNodePadding\", \"\", 4, \"matTreeNodeDef\"], [\"matTreeNodePadding\", \"\", 4, \"matTreeNodeDef\", \"matTreeNodeDefWhen\"], [\"matTreeNodeToggle\", \"\", \"matTreeNodePadding\", \"\"], [\"mat-icon-button\", \"\", \"disabled\", \"\"], [1, \"checklist-leaf-node\", 3, \"checked\", \"change\"], [\"matTreeNodePadding\", \"\"], [\"matInput\", \"\", \"placeholder\", \"Ex. Lettuce\"], [\"itemValue\", \"\"], [\"mat-button\", \"\", 3, \"click\"], [\"mat-icon-button\", \"\", \"matTreeNodeToggle\", \"\"], [1, \"mat-icon-rtl-mirror\"], [3, \"checked\", \"indeterminate\", \"change\"], [\"mat-icon-button\", \"\", 3, \"click\"]], template: function TreeChecklistExample_Template(rf, ctx) { if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-tree\", 0);\n                i0.ɵɵtemplate(1, TreeChecklistExample_mat_tree_node_1_Template, 4, 2, \"mat-tree-node\", 1);\n                i0.ɵɵtemplate(2, TreeChecklistExample_mat_tree_node_2_Template, 9, 0, \"mat-tree-node\", 2);\n                i0.ɵɵtemplate(3, TreeChecklistExample_mat_tree_node_3_Template, 9, 5, \"mat-tree-node\", 2);\n                i0.ɵɵelementEnd();\n            } if (rf & 2) {\n                i0.ɵɵproperty(\"dataSource\", ctx.dataSource)(\"treeControl\", ctx.treeControl);\n                i0.ɵɵadvance(2);\n                i0.ɵɵproperty(\"matTreeNodeDefWhen\", ctx.hasNoContent);\n                i0.ɵɵadvance(1);\n                i0.ɵɵproperty(\"matTreeNodeDefWhen\", ctx.hasChild);\n            } }, directives: [i1.MatTree, i1.MatTreeNodeDef, i1.MatTreeNode, i1.MatTreeNodeToggle, i1.MatTreeNodePadding, i2.MatButton, i3.MatCheckbox, i4$1.MatFormField, i4$1.MatLabel, i5.MatInput, i3$1.MatIcon], styles: [\".mat-form-field[_ngcontent-%COMP%] {\\n  margin-right: 4px;\\n}\"] });\n        return TreeChecklistExample;\n    }());\n    /*@__PURE__*/ (function () { i0.ɵsetClassMetadata(TreeChecklistExample, [{\n            type: i0.Component,\n            args: [{\n                    selector: 'tree-checklist-example',\n                    templateUrl: 'tree-checklist-example.html',\n                    styleUrls: ['tree-checklist-example.css'],\n                    providers: [ChecklistDatabase]\n                }]\n        }], function () { return [{ type: ChecklistDatabase }]; }, null); })();\n\n    function TreeDynamicExample_mat_tree_node_1_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-tree-node\", 3);\n        i0.ɵɵelement(1, \"button\", 4);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var node_r16 = ctx.$implicit;\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", node_r16.item, \" \");\n    } }\n    function TreeDynamicExample_mat_tree_node_2_mat_progress_bar_5_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelement(0, \"mat-progress-bar\", 8);\n    } }\n    function TreeDynamicExample_mat_tree_node_2_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-tree-node\", 3);\n        i0.ɵɵelementStart(1, \"button\", 5);\n        i0.ɵɵelementStart(2, \"mat-icon\", 6);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(4);\n        i0.ɵɵtemplate(5, TreeDynamicExample_mat_tree_node_2_mat_progress_bar_5_Template, 1, 0, \"mat-progress-bar\", 7);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var node_r17 = ctx.$implicit;\n        var ctx_r15 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"toggle \" + node_r17.filename);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r15.treeControl.isExpanded(node_r17) ? \"expand_more\" : \"chevron_right\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", node_r17.item, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", node_r17.isLoading);\n    } }\n    /** Flat node with expandable and level information */\n    var DynamicFlatNode = /** @class */ (function () {\n        function DynamicFlatNode(item, level, expandable, isLoading) {\n            if (level === void 0) { level = 1; }\n            if (expandable === void 0) { expandable = false; }\n            if (isLoading === void 0) { isLoading = false; }\n            this.item = item;\n            this.level = level;\n            this.expandable = expandable;\n            this.isLoading = isLoading;\n        }\n        return DynamicFlatNode;\n    }());\n    /**\n     * Database for dynamic data. When expanding a node in the tree, the data source will need to fetch\n     * the descendants data from the database.\n     */\n    var DynamicDatabase = /** @class */ (function () {\n        function DynamicDatabase() {\n            this.dataMap = new Map([\n                ['Fruits', ['Apple', 'Orange', 'Banana']],\n                ['Vegetables', ['Tomato', 'Potato', 'Onion']],\n                ['Apple', ['Fuji', 'Macintosh']],\n                ['Onion', ['Yellow', 'White', 'Purple']]\n            ]);\n            this.rootLevelNodes = ['Fruits', 'Vegetables'];\n        }\n        /** Initial data from database */\n        DynamicDatabase.prototype.initialData = function () {\n            return this.rootLevelNodes.map(function (name) { return new DynamicFlatNode(name, 0, true); });\n        };\n        DynamicDatabase.prototype.getChildren = function (node) {\n            return this.dataMap.get(node);\n        };\n        DynamicDatabase.prototype.isExpandable = function (node) {\n            return this.dataMap.has(node);\n        };\n        DynamicDatabase.decorators = [\n            { type: i0.Injectable, args: [{ providedIn: 'root' },] },\n        ];\n        DynamicDatabase.ɵfac = function DynamicDatabase_Factory(t) { return new (t || DynamicDatabase)(); };\n        DynamicDatabase.ɵprov = i0.ɵɵdefineInjectable({ token: DynamicDatabase, factory: DynamicDatabase.ɵfac, providedIn: 'root' });\n        return DynamicDatabase;\n    }());\n    /*@__PURE__*/ (function () { i0.ɵsetClassMetadata(DynamicDatabase, [{\n            type: i0.Injectable,\n            args: [{ providedIn: 'root' }]\n        }], null, null); })();\n    /**\n     * File database, it can build a tree structured Json object from string.\n     * Each node in Json object represents a file or a directory. For a file, it has filename and type.\n     * For a directory, it has filename and children (a list of files or directories).\n     * The input will be a json object string, and the output is a list of `FileNode` with nested\n     * structure.\n     */\n    var DynamicDataSource = /** @class */ (function () {\n        function DynamicDataSource(_treeControl, _database) {\n            this._treeControl = _treeControl;\n            this._database = _database;\n            this.dataChange = new rxjs.BehaviorSubject([]);\n        }\n        Object.defineProperty(DynamicDataSource.prototype, \"data\", {\n            get: function () { return this.dataChange.value; },\n            set: function (value) {\n                this._treeControl.dataNodes = value;\n                this.dataChange.next(value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        DynamicDataSource.prototype.connect = function (collectionViewer) {\n            var _this = this;\n            this._treeControl.expansionModel.changed.subscribe(function (change) {\n                if (change.added ||\n                    change.removed) {\n                    _this.handleTreeControl(change);\n                }\n            });\n            return rxjs.merge(collectionViewer.viewChange, this.dataChange).pipe(operators.map(function () { return _this.data; }));\n        };\n        DynamicDataSource.prototype.disconnect = function (collectionViewer) { };\n        /** Handle expand/collapse behaviors */\n        DynamicDataSource.prototype.handleTreeControl = function (change) {\n            var _this = this;\n            if (change.added) {\n                change.added.forEach(function (node) { return _this.toggleNode(node, true); });\n            }\n            if (change.removed) {\n                change.removed.slice().reverse().forEach(function (node) { return _this.toggleNode(node, false); });\n            }\n        };\n        /**\n         * Toggle the node, remove from display list\n         */\n        DynamicDataSource.prototype.toggleNode = function (node, expand) {\n            var _this = this;\n            var children = this._database.getChildren(node.item);\n            var index = this.data.indexOf(node);\n            if (!children || index < 0) { // If no children, or cannot find the node, no op\n                return;\n            }\n            node.isLoading = true;\n            setTimeout(function () {\n                var _a;\n                if (expand) {\n                    var nodes = children.map(function (name) {\n                        return new DynamicFlatNode(name, node.level + 1, _this._database.isExpandable(name));\n                    });\n                    (_a = _this.data).splice.apply(_a, __spread([index + 1, 0], nodes));\n                }\n                else {\n                    var count = 0;\n                    for (var i = index + 1; i < _this.data.length\n                        && _this.data[i].level > node.level; i++, count++) { }\n                    _this.data.splice(index + 1, count);\n                }\n                // notify the change\n                _this.dataChange.next(_this.data);\n                node.isLoading = false;\n            }, 1000);\n        };\n        return DynamicDataSource;\n    }());\n    /**\n     * @title Tree with dynamic data\n     */\n    var TreeDynamicExample = /** @class */ (function () {\n        function TreeDynamicExample(database) {\n            this.getLevel = function (node) { return node.level; };\n            this.isExpandable = function (node) { return node.expandable; };\n            this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };\n            this.treeControl = new tree.FlatTreeControl(this.getLevel, this.isExpandable);\n            this.dataSource = new DynamicDataSource(this.treeControl, database);\n            this.dataSource.data = database.initialData();\n        }\n        TreeDynamicExample.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'tree-dynamic-example',\n                        templateUrl: 'tree-dynamic-example.html',\n                        styleUrls: ['tree-dynamic-example.css']\n                    },] },\n        ];\n        /** @nocollapse */\n        TreeDynamicExample.ctorParameters = function () { return [\n            { type: DynamicDatabase }\n        ]; };\n        TreeDynamicExample.ɵfac = function TreeDynamicExample_Factory(t) { return new (t || TreeDynamicExample)(i0.ɵɵdirectiveInject(DynamicDatabase)); };\n        TreeDynamicExample.ɵcmp = i0.ɵɵdefineComponent({ type: TreeDynamicExample, selectors: [[\"tree-dynamic-example\"]], decls: 3, vars: 3, consts: [[3, \"dataSource\", \"treeControl\"], [\"matTreeNodePadding\", \"\", 4, \"matTreeNodeDef\"], [\"matTreeNodePadding\", \"\", 4, \"matTreeNodeDef\", \"matTreeNodeDefWhen\"], [\"matTreeNodePadding\", \"\"], [\"mat-icon-button\", \"\", \"disabled\", \"\"], [\"mat-icon-button\", \"\", \"matTreeNodeToggle\", \"\"], [1, \"mat-icon-rtl-mirror\"], [\"mode\", \"indeterminate\", \"class\", \"example-tree-progress-bar\", 4, \"ngIf\"], [\"mode\", \"indeterminate\", 1, \"example-tree-progress-bar\"]], template: function TreeDynamicExample_Template(rf, ctx) { if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-tree\", 0);\n                i0.ɵɵtemplate(1, TreeDynamicExample_mat_tree_node_1_Template, 3, 1, \"mat-tree-node\", 1);\n                i0.ɵɵtemplate(2, TreeDynamicExample_mat_tree_node_2_Template, 6, 4, \"mat-tree-node\", 2);\n                i0.ɵɵelementEnd();\n            } if (rf & 2) {\n                i0.ɵɵproperty(\"dataSource\", ctx.dataSource)(\"treeControl\", ctx.treeControl);\n                i0.ɵɵadvance(2);\n                i0.ɵɵproperty(\"matTreeNodeDefWhen\", ctx.hasChild);\n            } }, directives: [i1.MatTree, i1.MatTreeNodeDef, i1.MatTreeNode, i1.MatTreeNodePadding, i2.MatButton, i1.MatTreeNodeToggle, i3$1.MatIcon, i4.NgIf, i5$1.MatProgressBar], styles: [\".example-tree-progress-bar[_ngcontent-%COMP%] {\\n  margin-left: 30px;\\n}\"] });\n        return TreeDynamicExample;\n    }());\n    /*@__PURE__*/ (function () { i0.ɵsetClassMetadata(TreeDynamicExample, [{\n            type: i0.Component,\n            args: [{\n                    selector: 'tree-dynamic-example',\n                    templateUrl: 'tree-dynamic-example.html',\n                    styleUrls: ['tree-dynamic-example.css']\n                }]\n        }], function () { return [{ type: DynamicDatabase }]; }, null); })();\n\n    function TreeFlatOverviewExample_mat_tree_node_1_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-tree-node\", 3);\n        i0.ɵɵelement(1, \"button\", 4);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var node_r21 = ctx.$implicit;\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", node_r21.name, \" \");\n    } }\n    function TreeFlatOverviewExample_mat_tree_node_2_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-tree-node\", 3);\n        i0.ɵɵelementStart(1, \"button\", 5);\n        i0.ɵɵelementStart(2, \"mat-icon\", 6);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var node_r22 = ctx.$implicit;\n        var ctx_r20 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"toggle \" + node_r22.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r20.treeControl.isExpanded(node_r22) ? \"expand_more\" : \"chevron_right\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", node_r22.name, \" \");\n    } }\n    var TREE_DATA$1 = [\n        {\n            name: 'Fruit',\n            children: [\n                { name: 'Apple' },\n                { name: 'Banana' },\n                { name: 'Fruit loops' },\n            ]\n        }, {\n            name: 'Vegetables',\n            children: [\n                {\n                    name: 'Green',\n                    children: [\n                        { name: 'Broccoli' },\n                        { name: 'Brussels sprouts' },\n                    ]\n                }, {\n                    name: 'Orange',\n                    children: [\n                        { name: 'Pumpkins' },\n                        { name: 'Carrots' },\n                    ]\n                },\n            ]\n        },\n    ];\n    /**\n     * @title Tree with flat nodes\n     */\n    var TreeFlatOverviewExample = /** @class */ (function () {\n        function TreeFlatOverviewExample() {\n            this._transformer = function (node, level) {\n                return {\n                    expandable: !!node.children && node.children.length > 0,\n                    name: node.name,\n                    level: level,\n                };\n            };\n            this.treeControl = new tree.FlatTreeControl(function (node) { return node.level; }, function (node) { return node.expandable; });\n            this.treeFlattener = new i1.MatTreeFlattener(this._transformer, function (node) { return node.level; }, function (node) { return node.expandable; }, function (node) { return node.children; });\n            this.dataSource = new i1.MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n            this.hasChild = function (_, node) { return node.expandable; };\n            this.dataSource.data = TREE_DATA$1;\n        }\n        TreeFlatOverviewExample.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'tree-flat-overview-example',\n                        templateUrl: 'tree-flat-overview-example.html',\n                        styleUrls: ['tree-flat-overview-example.css'],\n                    },] },\n        ];\n        /** @nocollapse */\n        TreeFlatOverviewExample.ctorParameters = function () { return []; };\n        TreeFlatOverviewExample.ɵfac = function TreeFlatOverviewExample_Factory(t) { return new (t || TreeFlatOverviewExample)(); };\n        TreeFlatOverviewExample.ɵcmp = i0.ɵɵdefineComponent({ type: TreeFlatOverviewExample, selectors: [[\"tree-flat-overview-example\"]], decls: 3, vars: 3, consts: [[3, \"dataSource\", \"treeControl\"], [\"matTreeNodePadding\", \"\", 4, \"matTreeNodeDef\"], [\"matTreeNodePadding\", \"\", 4, \"matTreeNodeDef\", \"matTreeNodeDefWhen\"], [\"matTreeNodePadding\", \"\"], [\"mat-icon-button\", \"\", \"disabled\", \"\"], [\"mat-icon-button\", \"\", \"matTreeNodeToggle\", \"\"], [1, \"mat-icon-rtl-mirror\"]], template: function TreeFlatOverviewExample_Template(rf, ctx) { if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-tree\", 0);\n                i0.ɵɵtemplate(1, TreeFlatOverviewExample_mat_tree_node_1_Template, 3, 1, \"mat-tree-node\", 1);\n                i0.ɵɵtemplate(2, TreeFlatOverviewExample_mat_tree_node_2_Template, 5, 3, \"mat-tree-node\", 2);\n                i0.ɵɵelementEnd();\n            } if (rf & 2) {\n                i0.ɵɵproperty(\"dataSource\", ctx.dataSource)(\"treeControl\", ctx.treeControl);\n                i0.ɵɵadvance(2);\n                i0.ɵɵproperty(\"matTreeNodeDefWhen\", ctx.hasChild);\n            } }, directives: [i1.MatTree, i1.MatTreeNodeDef, i1.MatTreeNode, i1.MatTreeNodePadding, i2.MatButton, i1.MatTreeNodeToggle, i3$1.MatIcon], styles: [\"\"] });\n        return TreeFlatOverviewExample;\n    }());\n    /*@__PURE__*/ (function () { i0.ɵsetClassMetadata(TreeFlatOverviewExample, [{\n            type: i0.Component,\n            args: [{\n                    selector: 'tree-flat-overview-example',\n                    templateUrl: 'tree-flat-overview-example.html',\n                    styleUrls: ['tree-flat-overview-example.css'],\n                }]\n        }], function () { return []; }, null); })();\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    function TreeLoadmoreExample_mat_tree_node_1_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-tree-node\", 4);\n        i0.ɵɵelement(1, \"button\", 5);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var node_r26 = ctx.$implicit;\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", node_r26.item, \" \");\n    } }\n    function TreeLoadmoreExample_mat_tree_node_2_Template(rf, ctx) { if (rf & 1) {\n        var _r29 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"mat-tree-node\", 4);\n        i0.ɵɵelementStart(1, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function TreeLoadmoreExample_mat_tree_node_2_Template_button_click_1_listener() { i0.ɵɵrestoreView(_r29); var node_r27 = ctx.$implicit; var ctx_r28 = i0.ɵɵnextContext(); return ctx_r28.loadChildren(node_r27); });\n        i0.ɵɵelementStart(2, \"mat-icon\", 7);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var node_r27 = ctx.$implicit;\n        var ctx_r24 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(1);\n        i0.ɵɵattribute(\"aria-label\", \"toggle \" + node_r27.filename);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r24.treeControl.isExpanded(node_r27) ? \"expand_more\" : \"chevron_right\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", node_r27.item, \" \");\n    } }\n    function TreeLoadmoreExample_mat_tree_node_3_Template(rf, ctx) { if (rf & 1) {\n        var _r32 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"mat-tree-node\");\n        i0.ɵɵelementStart(1, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function TreeLoadmoreExample_mat_tree_node_3_Template_button_click_1_listener() { i0.ɵɵrestoreView(_r32); var node_r30 = ctx.$implicit; var ctx_r31 = i0.ɵɵnextContext(); return ctx_r31.loadMore(node_r30.loadMoreParentItem); });\n        i0.ɵɵtext(2, \" Load more... \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } }\n    var LOAD_MORE = 'LOAD_MORE';\n    /** Nested node */\n    var LoadmoreNode = /** @class */ (function () {\n        function LoadmoreNode(item, hasChildren, loadMoreParentItem) {\n            if (hasChildren === void 0) { hasChildren = false; }\n            if (loadMoreParentItem === void 0) { loadMoreParentItem = null; }\n            this.item = item;\n            this.hasChildren = hasChildren;\n            this.loadMoreParentItem = loadMoreParentItem;\n            this.childrenChange = new rxjs.BehaviorSubject([]);\n        }\n        Object.defineProperty(LoadmoreNode.prototype, \"children\", {\n            get: function () {\n                return this.childrenChange.value;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LoadmoreNode;\n    }());\n    /** Flat node with expandable and level information */\n    var LoadmoreFlatNode = /** @class */ (function () {\n        function LoadmoreFlatNode(item, level, expandable, loadMoreParentItem) {\n            if (level === void 0) { level = 1; }\n            if (expandable === void 0) { expandable = false; }\n            if (loadMoreParentItem === void 0) { loadMoreParentItem = null; }\n            this.item = item;\n            this.level = level;\n            this.expandable = expandable;\n            this.loadMoreParentItem = loadMoreParentItem;\n        }\n        return LoadmoreFlatNode;\n    }());\n    /**\n     * A database that only load part of the data initially. After user clicks on the `Load more`\n     * button, more data will be loaded.\n     */\n    var LoadmoreDatabase = /** @class */ (function () {\n        function LoadmoreDatabase() {\n            this.batchNumber = 5;\n            this.dataChange = new rxjs.BehaviorSubject([]);\n            this.nodeMap = new Map();\n            /** The data */\n            this.rootLevelNodes = ['Vegetables', 'Fruits'];\n            this.dataMap = new Map([\n                ['Fruits', ['Apple', 'Orange', 'Banana']],\n                ['Vegetables', ['Tomato', 'Potato', 'Onion']],\n                ['Apple', ['Fuji', 'Macintosh']],\n                ['Onion', ['Yellow', 'White', 'Purple', 'Green', 'Shallot', 'Sweet', 'Red', 'Leek']],\n            ]);\n        }\n        LoadmoreDatabase.prototype.initialize = function () {\n            var _this = this;\n            var data = this.rootLevelNodes.map(function (name) { return _this._generateNode(name); });\n            this.dataChange.next(data);\n        };\n        /** Expand a node whose children are not loaded */\n        LoadmoreDatabase.prototype.loadMore = function (item, onlyFirstTime) {\n            var _this = this;\n            if (onlyFirstTime === void 0) { onlyFirstTime = false; }\n            if (!this.nodeMap.has(item) || !this.dataMap.has(item)) {\n                return;\n            }\n            var parent = this.nodeMap.get(item);\n            var children = this.dataMap.get(item);\n            if (onlyFirstTime && parent.children.length > 0) {\n                return;\n            }\n            var newChildrenNumber = parent.children.length + this.batchNumber;\n            var nodes = children.slice(0, newChildrenNumber)\n                .map(function (name) { return _this._generateNode(name); });\n            if (newChildrenNumber < children.length) {\n                // Need a new load more node\n                nodes.push(new LoadmoreNode(LOAD_MORE, false, item));\n            }\n            parent.childrenChange.next(nodes);\n            this.dataChange.next(this.dataChange.value);\n        };\n        LoadmoreDatabase.prototype._generateNode = function (item) {\n            if (this.nodeMap.has(item)) {\n                return this.nodeMap.get(item);\n            }\n            var result = new LoadmoreNode(item, this.dataMap.has(item));\n            this.nodeMap.set(item, result);\n            return result;\n        };\n        LoadmoreDatabase.decorators = [\n            { type: i0.Injectable },\n        ];\n        LoadmoreDatabase.ɵfac = function LoadmoreDatabase_Factory(t) { return new (t || LoadmoreDatabase)(); };\n        LoadmoreDatabase.ɵprov = i0.ɵɵdefineInjectable({ token: LoadmoreDatabase, factory: LoadmoreDatabase.ɵfac });\n        return LoadmoreDatabase;\n    }());\n    /*@__PURE__*/ (function () { i0.ɵsetClassMetadata(LoadmoreDatabase, [{\n            type: i0.Injectable\n        }], null, null); })();\n    /**\n     * @title Tree with partially loaded data\n     */\n    var TreeLoadmoreExample = /** @class */ (function () {\n        function TreeLoadmoreExample(_database) {\n            var _this = this;\n            this._database = _database;\n            this.nodeMap = new Map();\n            this.getChildren = function (node) { return node.childrenChange; };\n            this.transformer = function (node, level) {\n                var existingNode = _this.nodeMap.get(node.item);\n                if (existingNode) {\n                    return existingNode;\n                }\n                var newNode = new LoadmoreFlatNode(node.item, level, node.hasChildren, node.loadMoreParentItem);\n                _this.nodeMap.set(node.item, newNode);\n                return newNode;\n            };\n            this.getLevel = function (node) { return node.level; };\n            this.isExpandable = function (node) { return node.expandable; };\n            this.hasChild = function (_, _nodeData) { return _nodeData.expandable; };\n            this.isLoadMore = function (_, _nodeData) { return _nodeData.item === LOAD_MORE; };\n            this.treeFlattener = new i1.MatTreeFlattener(this.transformer, this.getLevel, this.isExpandable, this.getChildren);\n            this.treeControl = new tree.FlatTreeControl(this.getLevel, this.isExpandable);\n            this.dataSource = new i1.MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n            _database.dataChange.subscribe(function (data) {\n                _this.dataSource.data = data;\n            });\n            _database.initialize();\n        }\n        /** Load more nodes from data source */\n        TreeLoadmoreExample.prototype.loadMore = function (item) {\n            this._database.loadMore(item);\n        };\n        TreeLoadmoreExample.prototype.loadChildren = function (node) {\n            this._database.loadMore(node.item, true);\n        };\n        TreeLoadmoreExample.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'tree-loadmore-example',\n                        templateUrl: 'tree-loadmore-example.html',\n                        styleUrls: ['tree-loadmore-example.css'],\n                        providers: [LoadmoreDatabase]\n                    },] },\n        ];\n        /** @nocollapse */\n        TreeLoadmoreExample.ctorParameters = function () { return [\n            { type: LoadmoreDatabase }\n        ]; };\n        TreeLoadmoreExample.ɵfac = function TreeLoadmoreExample_Factory(t) { return new (t || TreeLoadmoreExample)(i0.ɵɵdirectiveInject(LoadmoreDatabase)); };\n        TreeLoadmoreExample.ɵcmp = i0.ɵɵdefineComponent({ type: TreeLoadmoreExample, selectors: [[\"tree-loadmore-example\"]], features: [i0.ɵɵProvidersFeature([LoadmoreDatabase])], decls: 4, vars: 4, consts: [[3, \"dataSource\", \"treeControl\"], [\"matTreeNodePadding\", \"\", 4, \"matTreeNodeDef\"], [\"matTreeNodePadding\", \"\", 4, \"matTreeNodeDef\", \"matTreeNodeDefWhen\"], [4, \"matTreeNodeDef\", \"matTreeNodeDefWhen\"], [\"matTreeNodePadding\", \"\"], [\"mat-icon-button\", \"\", \"disabled\", \"\"], [\"mat-icon-button\", \"\", \"matTreeNodeToggle\", \"\", 3, \"click\"], [1, \"mat-icon-rtl-mirror\"], [\"mat-button\", \"\", 3, \"click\"]], template: function TreeLoadmoreExample_Template(rf, ctx) { if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-tree\", 0);\n                i0.ɵɵtemplate(1, TreeLoadmoreExample_mat_tree_node_1_Template, 3, 1, \"mat-tree-node\", 1);\n                i0.ɵɵtemplate(2, TreeLoadmoreExample_mat_tree_node_2_Template, 5, 3, \"mat-tree-node\", 2);\n                i0.ɵɵtemplate(3, TreeLoadmoreExample_mat_tree_node_3_Template, 3, 0, \"mat-tree-node\", 3);\n                i0.ɵɵelementEnd();\n            } if (rf & 2) {\n                i0.ɵɵproperty(\"dataSource\", ctx.dataSource)(\"treeControl\", ctx.treeControl);\n                i0.ɵɵadvance(2);\n                i0.ɵɵproperty(\"matTreeNodeDefWhen\", ctx.hasChild);\n                i0.ɵɵadvance(1);\n                i0.ɵɵproperty(\"matTreeNodeDefWhen\", ctx.isLoadMore);\n            } }, directives: [i1.MatTree, i1.MatTreeNodeDef, i1.MatTreeNode, i1.MatTreeNodePadding, i2.MatButton, i1.MatTreeNodeToggle, i3$1.MatIcon], styles: [\"\"] });\n        return TreeLoadmoreExample;\n    }());\n    /*@__PURE__*/ (function () { i0.ɵsetClassMetadata(TreeLoadmoreExample, [{\n            type: i0.Component,\n            args: [{\n                    selector: 'tree-loadmore-example',\n                    templateUrl: 'tree-loadmore-example.html',\n                    styleUrls: ['tree-loadmore-example.css'],\n                    providers: [LoadmoreDatabase]\n                }]\n        }], function () { return [{ type: LoadmoreDatabase }]; }, null); })();\n\n    function TreeNestedOverviewExample_mat_tree_node_1_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-tree-node\", 3);\n        i0.ɵɵelementStart(1, \"li\", 4);\n        i0.ɵɵelement(2, \"button\", 5);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var node_r35 = ctx.$implicit;\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", node_r35.name, \" \");\n    } }\n    function TreeNestedOverviewExample_mat_nested_tree_node_2_Template(rf, ctx) { if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-nested-tree-node\");\n        i0.ɵɵelementStart(1, \"li\");\n        i0.ɵɵelementStart(2, \"div\", 4);\n        i0.ɵɵelementStart(3, \"button\", 6);\n        i0.ɵɵelementStart(4, \"mat-icon\", 7);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ul\");\n        i0.ɵɵelementContainer(8, 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n    } if (rf & 2) {\n        var node_r36 = ctx.$implicit;\n        var ctx_r34 = i0.ɵɵnextContext();\n        i0.ɵɵadvance(3);\n        i0.ɵɵattribute(\"aria-label\", \"toggle \" + node_r36.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx_r34.treeControl.isExpanded(node_r36) ? \"expand_more\" : \"chevron_right\", \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", node_r36.name, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"example-tree-invisible\", !ctx_r34.treeControl.isExpanded(node_r36));\n    } }\n    var TREE_DATA$2 = [\n        {\n            name: 'Fruit',\n            children: [\n                { name: 'Apple' },\n                { name: 'Banana' },\n                { name: 'Fruit loops' },\n            ]\n        }, {\n            name: 'Vegetables',\n            children: [\n                {\n                    name: 'Green',\n                    children: [\n                        { name: 'Broccoli' },\n                        { name: 'Brussels sprouts' },\n                    ]\n                }, {\n                    name: 'Orange',\n                    children: [\n                        { name: 'Pumpkins' },\n                        { name: 'Carrots' },\n                    ]\n                },\n            ]\n        },\n    ];\n    /**\n     * @title Tree with nested nodes\n     */\n    var TreeNestedOverviewExample = /** @class */ (function () {\n        function TreeNestedOverviewExample() {\n            this.treeControl = new tree.NestedTreeControl(function (node) { return node.children; });\n            this.dataSource = new i1.MatTreeNestedDataSource();\n            this.hasChild = function (_, node) { return !!node.children && node.children.length > 0; };\n            this.dataSource.data = TREE_DATA$2;\n        }\n        TreeNestedOverviewExample.decorators = [\n            { type: i0.Component, args: [{\n                        selector: 'tree-nested-overview-example',\n                        templateUrl: 'tree-nested-overview-example.html',\n                        styleUrls: ['tree-nested-overview-example.css'],\n                    },] },\n        ];\n        /** @nocollapse */\n        TreeNestedOverviewExample.ctorParameters = function () { return []; };\n        TreeNestedOverviewExample.ɵfac = function TreeNestedOverviewExample_Factory(t) { return new (t || TreeNestedOverviewExample)(); };\n        TreeNestedOverviewExample.ɵcmp = i0.ɵɵdefineComponent({ type: TreeNestedOverviewExample, selectors: [[\"tree-nested-overview-example\"]], decls: 3, vars: 3, consts: [[1, \"example-tree\", 3, \"dataSource\", \"treeControl\"], [\"matTreeNodeToggle\", \"\", 4, \"matTreeNodeDef\"], [4, \"matTreeNodeDef\", \"matTreeNodeDefWhen\"], [\"matTreeNodeToggle\", \"\"], [1, \"mat-tree-node\"], [\"mat-icon-button\", \"\", \"disabled\", \"\"], [\"mat-icon-button\", \"\", \"matTreeNodeToggle\", \"\"], [1, \"mat-icon-rtl-mirror\"], [\"matTreeNodeOutlet\", \"\"]], template: function TreeNestedOverviewExample_Template(rf, ctx) { if (rf & 1) {\n                i0.ɵɵelementStart(0, \"mat-tree\", 0);\n                i0.ɵɵtemplate(1, TreeNestedOverviewExample_mat_tree_node_1_Template, 4, 1, \"mat-tree-node\", 1);\n                i0.ɵɵtemplate(2, TreeNestedOverviewExample_mat_nested_tree_node_2_Template, 9, 5, \"mat-nested-tree-node\", 2);\n                i0.ɵɵelementEnd();\n            } if (rf & 2) {\n                i0.ɵɵproperty(\"dataSource\", ctx.dataSource)(\"treeControl\", ctx.treeControl);\n                i0.ɵɵadvance(2);\n                i0.ɵɵproperty(\"matTreeNodeDefWhen\", ctx.hasChild);\n            } }, directives: [i1.MatTree, i1.MatTreeNodeDef, i1.MatTreeNode, i1.MatTreeNodeToggle, i2.MatButton, i1.MatNestedTreeNode, i3$1.MatIcon, i1.MatTreeNodeOutlet], styles: [\".example-tree-invisible[_ngcontent-%COMP%] {\\n  display: none;\\n}\\n\\n.example-tree[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%], .example-tree[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  margin-top: 0;\\n  margin-bottom: 0;\\n  list-style-type: none;\\n}\"] });\n        return TreeNestedOverviewExample;\n    }());\n    /*@__PURE__*/ (function () { i0.ɵsetClassMetadata(TreeNestedOverviewExample, [{\n            type: i0.Component,\n            args: [{\n                    selector: 'tree-nested-overview-example',\n                    templateUrl: 'tree-nested-overview-example.html',\n                    styleUrls: ['tree-nested-overview-example.css'],\n                }]\n        }], function () { return []; }, null); })();\n\n    var EXAMPLES = [\n        TreeChecklistExample,\n        TreeDynamicExample,\n        TreeFlatOverviewExample,\n        TreeLoadmoreExample,\n        TreeNestedOverviewExample,\n    ];\n    var TreeExamplesModule = /** @class */ (function () {\n        function TreeExamplesModule() {\n        }\n        TreeExamplesModule.decorators = [\n            { type: i0.NgModule, args: [{\n                        imports: [\n                            i4.CommonModule,\n                            i2.MatButtonModule,\n                            i3.MatCheckboxModule,\n                            i3$1.MatIconModule,\n                            i5.MatInputModule,\n                            i5$1.MatProgressBarModule,\n                            i1.MatTreeModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                        entryComponents: EXAMPLES,\n                    },] },\n        ];\n        TreeExamplesModule.ɵmod = i0.ɵɵdefineNgModule({ type: TreeExamplesModule });\n        TreeExamplesModule.ɵinj = i0.ɵɵdefineInjector({ factory: function TreeExamplesModule_Factory(t) { return new (t || TreeExamplesModule)(); }, imports: [[\n                    i4.CommonModule,\n                    i2.MatButtonModule,\n                    i3.MatCheckboxModule,\n                    i3$1.MatIconModule,\n                    i5.MatInputModule,\n                    i5$1.MatProgressBarModule,\n                    i1.MatTreeModule,\n                ]] });\n        return TreeExamplesModule;\n    }());\n    (function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(TreeExamplesModule, { declarations: [TreeChecklistExample,\n            TreeDynamicExample,\n            TreeFlatOverviewExample,\n            TreeLoadmoreExample,\n            TreeNestedOverviewExample], imports: [i4.CommonModule,\n            i2.MatButtonModule,\n            i3.MatCheckboxModule,\n            i3$1.MatIconModule,\n            i5.MatInputModule,\n            i5$1.MatProgressBarModule,\n            i1.MatTreeModule], exports: [TreeChecklistExample,\n            TreeDynamicExample,\n            TreeFlatOverviewExample,\n            TreeLoadmoreExample,\n            TreeNestedOverviewExample] }); })();\n    /*@__PURE__*/ (function () { i0.ɵsetClassMetadata(TreeExamplesModule, [{\n            type: i0.NgModule,\n            args: [{\n                    imports: [\n                        i4.CommonModule,\n                        i2.MatButtonModule,\n                        i3.MatCheckboxModule,\n                        i3$1.MatIconModule,\n                        i5.MatInputModule,\n                        i5$1.MatProgressBarModule,\n                        i1.MatTreeModule,\n                    ],\n                    declarations: EXAMPLES,\n                    exports: EXAMPLES,\n                    entryComponents: EXAMPLES,\n                }]\n        }], null, null); })();\n\n    exports.TreeChecklistExample = TreeChecklistExample;\n    exports.TreeDynamicExample = TreeDynamicExample;\n    exports.TreeExamplesModule = TreeExamplesModule;\n    exports.TreeFlatOverviewExample = TreeFlatOverviewExample;\n    exports.TreeLoadmoreExample = TreeLoadmoreExample;\n    exports.TreeNestedOverviewExample = TreeNestedOverviewExample;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=components-examples-material-tree.umd.js.map\n"]}
{"version":3,"sources":["src/material-examples/material-examples-cdk-text-field.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","materialExamples","cdk","textField","common","core","material","input","select","rxjs","operators","this","TextFieldAutofillDirectiveExample","decorators","type","Component","args","selector","template","styles","TextFieldAutofillMonitorExample","_autofill","prototype","ngAfterViewInit","_this","monitor","firstName","subscribe","e","firstNameAutofilled","isAutofilled","lastName","lastNameAutofilled","ngOnDestroy","stopMonitoring","ctorParameters","AutofillMonitor","propDecorators","ViewChild","read","ElementRef","static","TextFieldAutosizeTextareaExample","_ngZone","triggerResize","onStable","pipe","take","autosize","resizeToFitContent","NgZone","EXAMPLES","CdkTextFieldExamplesModule","NgModule","imports","CommonModule","TextFieldModule","MatInputModule","MatSelectModule","declarations","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk/text-field'), require('@angular/common'), require('@angular/core'), require('@angular/material/input'), require('@angular/material/select'), require('rxjs/operators')) :\n    typeof define === 'function' && define.amd ? define('@angular/material-examples/cdk/text-field', ['exports', '@angular/cdk/text-field', '@angular/common', '@angular/core', '@angular/material/input', '@angular/material/select', 'rxjs/operators'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.materialExamples = global.ng.materialExamples || {}, global.ng.materialExamples.cdk = global.ng.materialExamples.cdk || {}, global.ng.materialExamples.cdk.textField = {}), global.ng.cdk.textField, global.ng.common, global.ng.core, global.ng.material.input, global.ng.material.select, global.rxjs.operators));\n}(this, function (exports, textField, common, core, input, select, operators) { 'use strict';\n\n    /** @title Monitoring autofill state with cdkAutofill */\n    var TextFieldAutofillDirectiveExample = /** @class */ (function () {\n        function TextFieldAutofillDirectiveExample() {\n        }\n        TextFieldAutofillDirectiveExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'text-field-autofill-directive-example',\n                        template: \"<form>\\n  <mat-form-field>\\n    <mat-label>First name</mat-label>\\n    <input matInput (cdkAutofill)=\\\"firstNameAutofilled = $event.isAutofilled\\\">\\n    <mat-hint *ngIf=\\\"firstNameAutofilled\\\">Autofilled!</mat-hint>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-label>Last name</mat-label>\\n    <input matInput (cdkAutofill)=\\\"lastNameAutofilled = $event.isAutofilled\\\">\\n    <mat-hint *ngIf=\\\"lastNameAutofilled\\\">Autofilled!</mat-hint>\\n  </mat-form-field>\\n  <button mat-raised-button>Submit</button>\\n</form>\\n\",\n                        styles: [\"mat-form-field {\\n  margin-right: 12px;\\n}\\n\"]\n                    }] }\n        ];\n        return TextFieldAutofillDirectiveExample;\n    }());\n\n    /** @title Monitoring autofill state with AutofillMonitor */\n    var TextFieldAutofillMonitorExample = /** @class */ (function () {\n        function TextFieldAutofillMonitorExample(_autofill) {\n            this._autofill = _autofill;\n        }\n        TextFieldAutofillMonitorExample.prototype.ngAfterViewInit = function () {\n            var _this = this;\n            this._autofill.monitor(this.firstName)\n                .subscribe(function (e) { return _this.firstNameAutofilled = e.isAutofilled; });\n            this._autofill.monitor(this.lastName)\n                .subscribe(function (e) { return _this.lastNameAutofilled = e.isAutofilled; });\n        };\n        TextFieldAutofillMonitorExample.prototype.ngOnDestroy = function () {\n            this._autofill.stopMonitoring(this.firstName);\n            this._autofill.stopMonitoring(this.lastName);\n        };\n        TextFieldAutofillMonitorExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'text-field-autofill-monitor-example',\n                        template: \"<form>\\n  <mat-form-field>\\n    <mat-label>First name</mat-label>\\n    <input matInput #first>\\n    <mat-hint *ngIf=\\\"firstNameAutofilled\\\">Autofilled!</mat-hint>\\n  </mat-form-field>\\n  <mat-form-field>\\n    <mat-label>Last name</mat-label>\\n    <input matInput #last>\\n    <mat-hint *ngIf=\\\"lastNameAutofilled\\\">Autofilled!</mat-hint>\\n  </mat-form-field>\\n  <button mat-raised-button>Submit</button>\\n</form>\\n\",\n                        styles: [\"mat-form-field {\\n  margin-right: 12px;\\n}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        TextFieldAutofillMonitorExample.ctorParameters = function () { return [\n            { type: textField.AutofillMonitor }\n        ]; };\n        TextFieldAutofillMonitorExample.propDecorators = {\n            firstName: [{ type: core.ViewChild, args: ['first', { read: core.ElementRef, static: false },] }],\n            lastName: [{ type: core.ViewChild, args: ['last', { read: core.ElementRef, static: false },] }]\n        };\n        return TextFieldAutofillMonitorExample;\n    }());\n\n    /** @title Auto-resizing textarea */\n    var TextFieldAutosizeTextareaExample = /** @class */ (function () {\n        function TextFieldAutosizeTextareaExample(_ngZone) {\n            this._ngZone = _ngZone;\n        }\n        TextFieldAutosizeTextareaExample.prototype.triggerResize = function () {\n            var _this = this;\n            // Wait for changes to be applied, then trigger textarea resize.\n            this._ngZone.onStable.pipe(operators.take(1))\n                .subscribe(function () { return _this.autosize.resizeToFitContent(true); });\n        };\n        TextFieldAutosizeTextareaExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'text-field-autosize-textarea-example',\n                        template: \"<mat-form-field>\\n  <mat-label>Font size</mat-label>\\n  <mat-select #fontSize value=\\\"16px\\\" (selectionChange)=\\\"triggerResize()\\\">\\n    <mat-option value=\\\"10px\\\">10px</mat-option>\\n    <mat-option value=\\\"12px\\\">12px</mat-option>\\n    <mat-option value=\\\"14px\\\">14px</mat-option>\\n    <mat-option value=\\\"16px\\\">16px</mat-option>\\n    <mat-option value=\\\"18px\\\">18px</mat-option>\\n    <mat-option value=\\\"20px\\\">20px</mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\\n<mat-form-field [style.fontSize]=\\\"fontSize.value\\\">\\n  <mat-label>Autosize textarea</mat-label>\\n  <textarea matInput\\n            cdkTextareaAutosize\\n            #autosize=\\\"cdkTextareaAutosize\\\"\\n            cdkAutosizeMinRows=\\\"1\\\"\\n            cdkAutosizeMaxRows=\\\"5\\\"></textarea>\\n</mat-form-field>\\n\",\n                        styles: [\"mat-form-field {\\n  margin-right: 12px;\\n}\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        TextFieldAutosizeTextareaExample.ctorParameters = function () { return [\n            { type: core.NgZone }\n        ]; };\n        TextFieldAutosizeTextareaExample.propDecorators = {\n            autosize: [{ type: core.ViewChild, args: ['autosize', { static: false },] }]\n        };\n        return TextFieldAutosizeTextareaExample;\n    }());\n\n    var EXAMPLES = [\n        TextFieldAutofillDirectiveExample,\n        TextFieldAutofillMonitorExample,\n        TextFieldAutosizeTextareaExample,\n    ];\n    var CdkTextFieldExamplesModule = /** @class */ (function () {\n        function CdkTextFieldExamplesModule() {\n        }\n        CdkTextFieldExamplesModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            textField.TextFieldModule,\n                            input.MatInputModule,\n                            select.MatSelectModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                    },] }\n        ];\n        return CdkTextFieldExamplesModule;\n    }());\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.TextFieldAutofillDirectiveExample = TextFieldAutofillDirectiveExample;\n    exports.TextFieldAutofillMonitorExample = TextFieldAutofillMonitorExample;\n    exports.TextFieldAutosizeTextareaExample = TextFieldAutosizeTextareaExample;\n    exports.CdkTextFieldExamplesModule = CdkTextFieldExamplesModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=material-examples-cdk-text-field.umd.js.map\n"]}
{"version":3,"sources":["src/material-examples/material-examples-material-tooltip.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","materialExamples","material","tooltip","common","core","forms","button","checkbox","input","select","this","TooltipAutoHideExample","positionOptions","position","FormControl","decorators","type","Component","args","selector","template","styles","TooltipCustomClassExample","encapsulation","ViewEncapsulation","None","TooltipDelayExample","showDelay","hideDelay","TooltipDisabledExample","disabled","TooltipManualExample","TooltipMessageExample","message","myCustomTooltipDefaults","touchendHideDelay","TooltipModifiedDefaultsExample","providers","provide","MAT_TOOLTIP_DEFAULT_OPTIONS","useValue","TooltipOverviewExample","TooltipPositionExample","EXAMPLES","TooltipExamplesModule","NgModule","imports","CommonModule","MatButtonModule","MatCheckboxModule","MatInputModule","MatSelectModule","MatTooltipModule","ReactiveFormsModule","declarations","Éµangular_material_src_material_examples_material_tooltip_tooltip_a","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('@angular/material/button'), require('@angular/material/checkbox'), require('@angular/material/input'), require('@angular/material/select'), require('@angular/material/tooltip')) :\n    typeof define === 'function' && define.amd ? define('@angular/material-examples/material/tooltip', ['exports', '@angular/common', '@angular/core', '@angular/forms', '@angular/material/button', '@angular/material/checkbox', '@angular/material/input', '@angular/material/select', '@angular/material/tooltip'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.materialExamples = global.ng.materialExamples || {}, global.ng.materialExamples.material = global.ng.materialExamples.material || {}, global.ng.materialExamples.material.tooltip = {}), global.ng.common, global.ng.core, global.ng.forms, global.ng.material.button, global.ng.material.checkbox, global.ng.material.input, global.ng.material.select, global.ng.material.tooltip));\n}(this, function (exports, common, core, forms, button, checkbox, input, select, tooltip) { 'use strict';\n\n    /**\n     * @title Tooltip that demonstrates auto-hiding when it clips out of its scrolling container.\n     */\n    var TooltipAutoHideExample = /** @class */ (function () {\n        function TooltipAutoHideExample() {\n            this.positionOptions = ['below', 'above', 'left', 'right'];\n            this.position = new forms.FormControl(this.positionOptions[0]);\n        }\n        TooltipAutoHideExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tooltip-auto-hide-example',\n                        template: \"<mat-form-field>\\n  <mat-select placeholder=\\\"Tooltip position\\\" [formControl]=\\\"position\\\">\\n    <mat-option *ngFor=\\\"let positionOption of positionOptions\\\" [value]=\\\"positionOption\\\">\\n      {{positionOption}}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\\n<div class=\\\"example-container\\\" cdk-scrollable>\\n  <button mat-raised-button #tooltip=\\\"matTooltip\\\"\\n          matTooltip=\\\"Info about the action\\\"\\n          [matTooltipPosition]=\\\"position.value\\\"\\n          matTooltipHideDelay=\\\"100000\\\"\\n          aria-label=\\\"Button that displays a tooltip that hides when scrolled out of the container\\\"\\n          class=\\\"example-button\\\">\\n    Action\\n  </button>\\n</div>\\n\",\n                        styles: [\".example-button {\\n  display: block;\\n  margin: 80px auto 400px;\\n}\\n\\n.example-container {\\n  height: 200px;\\n  overflow: auto;\\n  border: 1px solid #ccc;\\n}\\n\"]\n                    }] }\n        ];\n        return TooltipAutoHideExample;\n    }());\n\n    /**\n     * @title Tooltip that can have a custom class applied.\n     */\n    var TooltipCustomClassExample = /** @class */ (function () {\n        function TooltipCustomClassExample() {\n        }\n        TooltipCustomClassExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tooltip-custom-class-example',\n                        template: \"<button mat-raised-button\\n        matTooltip=\\\"Info about the action\\\"\\n        matTooltipClass=\\\"example-tooltip-red\\\"\\n        aria-label=\\\"Button that shows a red tooltip\\\"\\n        class=\\\"example-button\\\">\\n  Red-tooltip Action\\n</button>\\n\",\n                        // Need to remove view encapsulation so that the custom tooltip style defined in\n                        // `tooltip-custom-class-example.css` will not be scoped to this component's view.\n                        encapsulation: core.ViewEncapsulation.None,\n                        styles: [\".example-button {\\n  margin-top: 16px;\\n}\\n\\n.example-tooltip-red {\\n  background: #b71c1c;\\n}\\n\"]\n                    }] }\n        ];\n        return TooltipCustomClassExample;\n    }());\n\n    /**\n     * @title Tooltip with a show and hide delay\n     */\n    var TooltipDelayExample = /** @class */ (function () {\n        function TooltipDelayExample() {\n            this.showDelay = new forms.FormControl(1000);\n            this.hideDelay = new forms.FormControl(2000);\n        }\n        TooltipDelayExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tooltip-delay-example',\n                        template: \"<mat-form-field class=\\\"example-user-input\\\">\\n  <input matInput placeholder=\\\"Show delay (milliseconds)\\\"\\n         type=\\\"number\\\"\\n         aria-label=\\\"Adds a delay between hovering over the button and displaying the tooltip\\\"\\n         [formControl]=\\\"showDelay\\\">\\n</mat-form-field>\\n\\n<mat-form-field class=\\\"example-user-input\\\">\\n  <input matInput placeholder=\\\"Hide delay (milliseconds)\\\"\\n         type=\\\"number\\\"\\n         aria-label=\\\"Adds a delay between hovering away from the button and hiding the tooltip\\\"\\n         [formControl]=\\\"hideDelay\\\">\\n</mat-form-field>\\n\\n<button mat-raised-button\\n        matTooltip=\\\"Info about the action\\\"\\n        [matTooltipShowDelay]=\\\"showDelay.value\\\"\\n        [matTooltipHideDelay]=\\\"hideDelay.value\\\"\\n        aria-label=\\\"Button that displays a tooltip with a customized delay in showing and hiding\\\">\\n  Action\\n</button>\\n\",\n                        styles: [\".example-user-input {\\n  display: block;\\n  width: 150px;\\n}\\n\"]\n                    }] }\n        ];\n        return TooltipDelayExample;\n    }());\n\n    /**\n     * @title Tooltip that can be disabled\n     */\n    var TooltipDisabledExample = /** @class */ (function () {\n        function TooltipDisabledExample() {\n            this.disabled = new forms.FormControl(false);\n        }\n        TooltipDisabledExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tooltip-disabled-example',\n                        template: \"<button mat-raised-button\\n        matTooltip=\\\"Info about the action\\\"\\n        [matTooltipDisabled]=\\\"disabled.value\\\"\\n        aria-label=\\\"Button that displays a tooltip that can be programatically disabled\\\">\\n  Action\\n</button>\\n\\n<mat-checkbox [formControl]=\\\"disabled\\\" class=\\\"example-disabled-checkbox\\\">\\n  Tooltip disabled\\n</mat-checkbox>\\n\",\n                        styles: [\".example-disabled-checkbox {\\n  margin-left: 8px;\\n}\\n\"]\n                    }] }\n        ];\n        return TooltipDisabledExample;\n    }());\n\n    /**\n     * @title Tooltip that can be manually shown/hidden.\n     */\n    var TooltipManualExample = /** @class */ (function () {\n        function TooltipManualExample() {\n        }\n        TooltipManualExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tooltip-manual-example',\n                        template: \"<div>\\n  <span> Click the following buttons to... </span>\\n  <button mat-button\\n          (click)=\\\"tooltip.show()\\\"\\n          aria-label=\\\"Show tooltip on the button at the end of this section\\\"\\n          class=\\\"example-action-button\\\">\\n    show\\n  </button>\\n  <button mat-button\\n          (click)=\\\"tooltip.hide()\\\"\\n          aria-label=\\\"Hide tooltip on the button at the end of this section\\\"\\n          class=\\\"example-action-button\\\">\\n    hide\\n  </button>\\n  <button mat-button\\n          (click)=\\\"tooltip.toggle()\\\"\\n          aria-label=\\\"Show/Hide tooltip on the button at the end of this section\\\"\\n          class=\\\"example-action-button\\\">\\n    toggle show/hide\\n  </button>\\n</div>\\n\\n<button mat-raised-button #tooltip=\\\"matTooltip\\\"\\n        matTooltip=\\\"Info about the action\\\"\\n        matTooltipPosition=\\\"right\\\"\\n        aria-tooltip=\\\"Button that displays and hides a tooltip triggered by other buttons\\\">\\n  Action\\n</button>\",\n                        styles: [\".example-action-button {\\n  margin-top: 16px;\\n}\\n\"]\n                    }] }\n        ];\n        return TooltipManualExample;\n    }());\n\n    /**\n     * @title Tooltip with a changing message\n     */\n    var TooltipMessageExample = /** @class */ (function () {\n        function TooltipMessageExample() {\n            this.message = new forms.FormControl('Info about the action');\n        }\n        TooltipMessageExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tooltip-message-example',\n                        template: \"<mat-form-field class=\\\"example-user-input\\\">\\n  <input matInput placeholder=\\\"Tooltip message\\\" [formControl]=\\\"message\\\">\\n</mat-form-field>\\n\\n<button mat-raised-button\\n        [matTooltip]=\\\"message.value\\\"\\n        aria-label=\\\"Button that displays a tooltip with a custom message\\\">\\n  Action\\n</button>\\n\",\n                        styles: [\".example-user-input {\\n  margin-right: 8px;\\n}\\n\"]\n                    }] }\n        ];\n        return TooltipMessageExample;\n    }());\n\n    /** Custom options the configure the tooltip's default show/hide delays. */\n    var myCustomTooltipDefaults = {\n        showDelay: 1000,\n        hideDelay: 1000,\n        touchendHideDelay: 1000,\n    };\n    /**\n     * @title Tooltip with a show and hide delay\n     */\n    var TooltipModifiedDefaultsExample = /** @class */ (function () {\n        function TooltipModifiedDefaultsExample() {\n        }\n        TooltipModifiedDefaultsExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tooltip-modified-defaults-example',\n                        template: \"<button mat-raised-button\\n        matTooltip=\\\"By default, I delay\\\"\\n        aria-label=\\\"Button that displays a tooltip that has custom delays through a default config\\\">\\n  Button with delay-default tooltip\\n</button>\\n\",\n                        providers: [\n                            { provide: tooltip.MAT_TOOLTIP_DEFAULT_OPTIONS, useValue: myCustomTooltipDefaults }\n                        ],\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        return TooltipModifiedDefaultsExample;\n    }());\n\n    /**\n     * @title Basic tooltip\n     */\n    var TooltipOverviewExample = /** @class */ (function () {\n        function TooltipOverviewExample() {\n        }\n        TooltipOverviewExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tooltip-overview-example',\n                        template: \"<button mat-raised-button\\n        matTooltip=\\\"Info about the action\\\"\\n        aria-label=\\\"Button that displays a tooltip when focused or hovered over\\\">\\n  Action\\n</button>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        return TooltipOverviewExample;\n    }());\n\n    /**\n     * @title Tooltip with a custom position\n     */\n    var TooltipPositionExample = /** @class */ (function () {\n        function TooltipPositionExample() {\n            this.positionOptions = ['after', 'before', 'above', 'below', 'left', 'right'];\n            this.position = new forms.FormControl(this.positionOptions[0]);\n        }\n        TooltipPositionExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'tooltip-position-example',\n                        template: \"<mat-form-field class=\\\"example-user-input\\\">\\n  <mat-select placeholder=\\\"Tooltip position\\\" [formControl]=\\\"position\\\">\\n    <mat-option *ngFor=\\\"let positionOption of positionOptions\\\" [value]=\\\"positionOption\\\">\\n      {{positionOption}}\\n    </mat-option>\\n  </mat-select>\\n</mat-form-field>\\n\\n<button mat-raised-button\\n        matTooltip=\\\"Info about the action\\\"\\n        [matTooltipPosition]=\\\"position.value\\\"\\n        aria-label=\\\"Button that displays a tooltip in various positions\\\">\\n  Action\\n</button>\\n\",\n                        styles: [\".example-user-input {\\n  margin-right: 8px;\\n}\\n\"]\n                    }] }\n        ];\n        return TooltipPositionExample;\n    }());\n\n    var EXAMPLES = [\n        TooltipAutoHideExample,\n        TooltipCustomClassExample,\n        TooltipDelayExample,\n        TooltipDisabledExample,\n        TooltipManualExample,\n        TooltipMessageExample,\n        TooltipModifiedDefaultsExample,\n        TooltipOverviewExample,\n        TooltipPositionExample,\n    ];\n    var TooltipExamplesModule = /** @class */ (function () {\n        function TooltipExamplesModule() {\n        }\n        TooltipExamplesModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            button.MatButtonModule,\n                            checkbox.MatCheckboxModule,\n                            input.MatInputModule,\n                            select.MatSelectModule,\n                            tooltip.MatTooltipModule,\n                            forms.ReactiveFormsModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                    },] }\n        ];\n        return TooltipExamplesModule;\n    }());\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.Éµangular_material_src_material_examples_material_tooltip_tooltip_a = myCustomTooltipDefaults;\n    exports.TooltipAutoHideExample = TooltipAutoHideExample;\n    exports.TooltipCustomClassExample = TooltipCustomClassExample;\n    exports.TooltipDelayExample = TooltipDelayExample;\n    exports.TooltipDisabledExample = TooltipDisabledExample;\n    exports.TooltipManualExample = TooltipManualExample;\n    exports.TooltipMessageExample = TooltipMessageExample;\n    exports.TooltipModifiedDefaultsExample = TooltipModifiedDefaultsExample;\n    exports.TooltipOverviewExample = TooltipOverviewExample;\n    exports.TooltipPositionExample = TooltipPositionExample;\n    exports.TooltipExamplesModule = TooltipExamplesModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=material-examples-material-tooltip.umd.js.map\n"]}
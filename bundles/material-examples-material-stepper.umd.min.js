!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@angular/forms"),require("@angular/material/button"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/stepper"),require("@angular/cdk/stepper")):"function"==typeof define&&define.amd?define("@angular/material-examples/material/stepper",["exports","@angular/core","@angular/forms","@angular/material/button","@angular/material/icon","@angular/material/input","@angular/material/stepper","@angular/cdk/stepper"],e):e(((t=t||self).ng=t.ng||{},t.ng.materialExamples=t.ng.materialExamples||{},t.ng.materialExamples.material=t.ng.materialExamples.material||{},t.ng.materialExamples.material.stepper={}),t.ng.core,t.ng.forms,t.ng.material.button,t.ng.material.icon,t.ng.material.input,t.ng.material.stepper,t.ng.cdk.stepper)}(this,function(t,e,r,n,o,a,m,p){"use strict";var i=function(){function t(t){this._formBuilder=t,this.isEditable=!1}return t.prototype.ngOnInit=function(){this.firstFormGroup=this._formBuilder.group({firstCtrl:["",r.Validators.required]}),this.secondFormGroup=this._formBuilder.group({secondCtrl:["",r.Validators.required]})},t.decorators=[{type:e.Component,args:[{selector:"stepper-editable-example",template:'<button mat-raised-button (click)="isEditable = !isEditable">\n  {{!isEditable ? \'Enable edit mode\' : \'Disable edit mode\'}}\n</button>\n\n<mat-horizontal-stepper linear #stepper>\n  <mat-step [stepControl]="firstFormGroup" [editable]="isEditable">\n    <form [formGroup]="firstFormGroup">\n      <ng-template matStepLabel>Fill out your name</ng-template>\n      <mat-form-field>\n        <input matInput placeholder="Last name, First name" formControlName="firstCtrl" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]="secondFormGroup" [editable]="isEditable">\n    <form [formGroup]="secondFormGroup">\n      <ng-template matStepLabel>Fill out your address</ng-template>\n      <mat-form-field>\n        <input matInput placeholder="Address" formControlName="secondCtrl" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    You are now done.\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)="stepper.reset()">Reset</button>\n    </div>\n  </mat-step>\n</mat-horizontal-stepper>\n',styles:["/** No CSS for this example */\n"]}]}],t.ctorParameters=function(){return[{type:r.FormBuilder}]},t}(),l={showError:!0},s=function(){function t(t){this._formBuilder=t}return t.prototype.ngOnInit=function(){this.firstFormGroup=this._formBuilder.group({firstCtrl:["",r.Validators.required]}),this.secondFormGroup=this._formBuilder.group({secondCtrl:["",r.Validators.required]})},t.decorators=[{type:e.Component,args:[{selector:"stepper-errors-example",template:'<mat-horizontal-stepper linear #stepper>\n  <mat-step [stepControl]="firstFormGroup" errorMessage="Name is required.">\n    <form [formGroup]="firstFormGroup">\n      <ng-template matStepLabel>Fill out your name</ng-template>\n      <mat-form-field>\n        <input matInput placeholder="Last name, First name" formControlName="firstCtrl" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]="secondFormGroup" errorMessage="Address is required.">\n    <form [formGroup]="secondFormGroup">\n      <ng-template matStepLabel>Fill out your address</ng-template>\n      <mat-form-field>\n        <input matInput placeholder="Address" formControlName="secondCtrl" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    You are now done.\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)="stepper.reset()">Reset</button>\n    </div>\n  </mat-step>\n</mat-horizontal-stepper>\n',providers:[{provide:p.STEPPER_GLOBAL_OPTIONS,useValue:l}],styles:[""]}]}],t.ctorParameters=function(){return[{type:r.FormBuilder}]},t}(),u=function(){function t(t){this._formBuilder=t}return t.prototype.ngOnInit=function(){this.firstFormGroup=this._formBuilder.group({firstCtrl:["",r.Validators.required]}),this.secondFormGroup=this._formBuilder.group({secondCtrl:["",r.Validators.required]})},t.decorators=[{type:e.Component,args:[{selector:"stepper-label-position-bottom-example",template:'<mat-horizontal-stepper labelPosition="bottom" #stepper>\n    <mat-step [stepControl]="firstFormGroup">\n        <form [formGroup]="firstFormGroup">\n            <ng-template matStepLabel>Fill out your name</ng-template>\n            <mat-form-field>\n                <input matInput placeholder="Last name, First name" formControlName="firstCtrl" required>\n            </mat-form-field>\n            <div>\n                <button mat-button matStepperNext>Next</button>\n            </div>\n        </form>\n    </mat-step>\n    <mat-step [stepControl]="secondFormGroup" optional>\n        <form [formGroup]="secondFormGroup">\n            <ng-template matStepLabel>Fill out your address</ng-template>\n            <mat-form-field>\n                <input matInput placeholder="Address" formControlName="secondCtrl" required>\n            </mat-form-field>\n            <div>\n                <button mat-button matStepperPrevious>Back</button>\n                <button mat-button matStepperNext>Next</button>\n            </div>\n        </form>\n    </mat-step>\n    <mat-step>\n        <ng-template matStepLabel>Done</ng-template>\n        You are now done.\n        <div>\n            <button mat-button matStepperPrevious>Back</button>\n            <button mat-button (click)="stepper.reset()">Reset</button>\n        </div>\n    </mat-step>\n</mat-horizontal-stepper>\n',styles:["/** No CSS for this example */\n"]}]}],t.ctorParameters=function(){return[{type:r.FormBuilder}]},t}(),d=function(){function t(t){this._formBuilder=t,this.isOptional=!1}return t.prototype.ngOnInit=function(){this.firstFormGroup=this._formBuilder.group({firstCtrl:["",r.Validators.required]}),this.secondFormGroup=this._formBuilder.group({secondCtrl:""})},t.decorators=[{type:e.Component,args:[{selector:"stepper-optional-example",template:'<button mat-raised-button (click)="isOptional = !isOptional">\n  {{!isOptional ? \'Enable optional steps\' : \'Disable optional steps\'}}\n</button>\n\n<mat-horizontal-stepper linear #stepper>\n  <mat-step [stepControl]="firstFormGroup">\n    <form [formGroup]="firstFormGroup">\n      <ng-template matStepLabel>Fill out your name</ng-template>\n      <mat-form-field>\n        <input matInput placeholder="Last name, First name" formControlName="firstCtrl" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]="secondFormGroup" [optional]="isOptional">\n    <form [formGroup]="secondFormGroup">\n      <ng-template matStepLabel>Fill out your address</ng-template>\n      <mat-form-field>\n        <input matInput placeholder="Address" formControlName="secondCtrl" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    You are now done.\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)="stepper.reset()">Reset</button>\n    </div>\n  </mat-step>\n</mat-horizontal-stepper>\n',styles:["/** No CSS for this example */\n"]}]}],t.ctorParameters=function(){return[{type:r.FormBuilder}]},t}(),f=function(){function t(t){this._formBuilder=t,this.isLinear=!1}return t.prototype.ngOnInit=function(){this.firstFormGroup=this._formBuilder.group({firstCtrl:["",r.Validators.required]}),this.secondFormGroup=this._formBuilder.group({secondCtrl:["",r.Validators.required]})},t.decorators=[{type:e.Component,args:[{selector:"stepper-overview-example",template:'<button mat-raised-button (click)="isLinear = !isLinear" id="toggle-linear">\n  {{!isLinear ? \'Enable linear mode\' : \'Disable linear mode\'}}\n</button>\n<mat-horizontal-stepper [linear]="isLinear" #stepper>\n  <mat-step [stepControl]="firstFormGroup">\n    <form [formGroup]="firstFormGroup">\n      <ng-template matStepLabel>Fill out your name</ng-template>\n      <mat-form-field>\n        <input matInput placeholder="Last name, First name" formControlName="firstCtrl" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]="secondFormGroup">\n    <form [formGroup]="secondFormGroup">\n      <ng-template matStepLabel>Fill out your address</ng-template>\n      <mat-form-field>\n        <input matInput placeholder="Address" formControlName="secondCtrl" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    You are now done.\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)="stepper.reset()">Reset</button>\n    </div>\n  </mat-step>\n</mat-horizontal-stepper>\n',styles:["/** No CSS for this example */\n"]}]}],t.ctorParameters=function(){return[{type:r.FormBuilder}]},t}(),b={displayDefaultIndicatorType:!1},c=function(){function t(t){this._formBuilder=t}return t.prototype.ngOnInit=function(){this.firstFormGroup=this._formBuilder.group({firstCtrl:["",r.Validators.required]}),this.secondFormGroup=this._formBuilder.group({secondCtrl:["",r.Validators.required]})},t.decorators=[{type:e.Component,args:[{selector:"stepper-states-example",template:'<mat-horizontal-stepper #stepper>\n  <mat-step [stepControl]="firstFormGroup">\n    <form [formGroup]="firstFormGroup">\n      <ng-template matStepLabel>Fill out your name</ng-template>\n      <mat-form-field>\n        <input matInput placeholder="Last name, First name" formControlName="firstCtrl" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]="secondFormGroup">\n    <form [formGroup]="secondFormGroup">\n      <ng-template matStepLabel>Fill out your address</ng-template>\n      <mat-form-field>\n        <input matInput placeholder="Address" formControlName="secondCtrl" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    You are now done.\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)="stepper.reset()">Reset</button>\n    </div>\n  </mat-step>\n</mat-horizontal-stepper>\n\n<mat-horizontal-stepper>\n  <mat-step label="Step 1" state="phone">\n    <p>Put down your phones.</p>\n    <div>\n      <button mat-button matStepperNext>Next</button>\n    </div>\n  </mat-step>\n  <mat-step label="Step 2" state="chat">\n    <p>Socialize with each other.</p>\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button matStepperNext>Next</button>\n    </div>\n  </mat-step>\n  <mat-step label="Step 3">\n    <p>You\'re welcome.</p>\n  </mat-step>\n\n  \x3c!-- Icon overrides. --\x3e\n  <ng-template matStepperIcon="phone">\n    <mat-icon>call_end</mat-icon>\n  </ng-template>\n  <ng-template matStepperIcon="chat">\n    <mat-icon>forum</mat-icon>\n  </ng-template>\n</mat-horizontal-stepper>\n',providers:[{provide:p.STEPPER_GLOBAL_OPTIONS,useValue:b}],styles:[""]}]}],t.ctorParameters=function(){return[{type:r.FormBuilder}]},t}(),g=function(){function t(t){this._formBuilder=t,this.isLinear=!1}return t.prototype.ngOnInit=function(){this.firstFormGroup=this._formBuilder.group({firstCtrl:["",r.Validators.required]}),this.secondFormGroup=this._formBuilder.group({secondCtrl:["",r.Validators.required]})},t.decorators=[{type:e.Component,args:[{selector:"stepper-vertical-example",template:'<button mat-raised-button (click)="isLinear = !isLinear" id="toggle-linear">\n  {{!isLinear ? \'Enable linear mode\' : \'Disable linear mode\'}}\n</button>\n<mat-vertical-stepper [linear]="isLinear" #stepper>\n  <mat-step [stepControl]="firstFormGroup">\n    <form [formGroup]="firstFormGroup">\n      <ng-template matStepLabel>Fill out your name</ng-template>\n      <mat-form-field>\n        <input matInput placeholder="Last name, First name" formControlName="firstCtrl" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step [stepControl]="secondFormGroup">\n    <form [formGroup]="secondFormGroup">\n      <ng-template matStepLabel>Fill out your address</ng-template>\n      <mat-form-field>\n        <input matInput placeholder="Address" formControlName="secondCtrl" required>\n      </mat-form-field>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button matStepperNext>Next</button>\n      </div>\n    </form>\n  </mat-step>\n  <mat-step>\n    <ng-template matStepLabel>Done</ng-template>\n    You are now done.\n    <div>\n      <button mat-button matStepperPrevious>Back</button>\n      <button mat-button (click)="stepper.reset()">Reset</button>\n    </div>\n  </mat-step>\n</mat-vertical-stepper>\n',styles:["/** No CSS for this example */\n"]}]}],t.ctorParameters=function(){return[{type:r.FormBuilder}]},t}(),h=[i,s,u,d,f,c,g],S=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[n.MatButtonModule,o.MatIconModule,a.MatInputModule,m.MatStepperModule,r.ReactiveFormsModule],declarations:h,exports:h}]}],t}();t.StepperEditableExample=i,t.StepperErrorsExample=s,t.StepperLabelPositionBottomExample=u,t.StepperOptionalExample=d,t.StepperOverviewExample=f,t.StepperStatesExample=c,t.StepperVerticalExample=g,t.StepperExamplesModule=S,Object.defineProperty(t,"__esModule",{value:!0})});
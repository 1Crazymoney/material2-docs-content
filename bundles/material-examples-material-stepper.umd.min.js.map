{"version":3,"sources":["src/material-examples/material-examples-material-stepper.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","materialExamples","material","stepper","core","forms","button","icon","input","cdk","this","stepper$1","StepperEditableExample","_formBuilder","isEditable","prototype","ngOnInit","firstFormGroup","group","firstCtrl","Validators","required","secondFormGroup","secondCtrl","decorators","type","Component","args","selector","template","styles","ctorParameters","FormBuilder","ɵ0","showError","StepperErrorsExample","providers","provide","STEPPER_GLOBAL_OPTIONS","useValue","StepperLabelPositionBottomExample","StepperOptionalExample","isOptional","StepperOverviewExample","isLinear","ɵ0$1","displayDefaultIndicatorType","StepperStatesExample","StepperVerticalExample","EXAMPLES","StepperExamplesModule","NgModule","imports","MatButtonModule","MatIconModule","MatInputModule","MatStepperModule","ReactiveFormsModule","declarations","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/forms'), require('@angular/material/button'), require('@angular/material/icon'), require('@angular/material/input'), require('@angular/material/stepper'), require('@angular/cdk/stepper')) :\n    typeof define === 'function' && define.amd ? define('@angular/material-examples/material/stepper', ['exports', '@angular/core', '@angular/forms', '@angular/material/button', '@angular/material/icon', '@angular/material/input', '@angular/material/stepper', '@angular/cdk/stepper'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.materialExamples = global.ng.materialExamples || {}, global.ng.materialExamples.material = global.ng.materialExamples.material || {}, global.ng.materialExamples.material.stepper = {}), global.ng.core, global.ng.forms, global.ng.material.button, global.ng.material.icon, global.ng.material.input, global.ng.material.stepper, global.ng.cdk.stepper));\n}(this, function (exports, core, forms, button, icon, input, stepper, stepper$1) { 'use strict';\n\n    /**\n     * @title Stepper with editable steps\n     */\n    var StepperEditableExample = /** @class */ (function () {\n        function StepperEditableExample(_formBuilder) {\n            this._formBuilder = _formBuilder;\n            this.isEditable = false;\n        }\n        StepperEditableExample.prototype.ngOnInit = function () {\n            this.firstFormGroup = this._formBuilder.group({\n                firstCtrl: ['', forms.Validators.required]\n            });\n            this.secondFormGroup = this._formBuilder.group({\n                secondCtrl: ['', forms.Validators.required]\n            });\n        };\n        StepperEditableExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'stepper-editable-example',\n                        template: \"<button mat-raised-button (click)=\\\"isEditable = !isEditable\\\">\\n  {{!isEditable ? 'Enable edit mode' : 'Disable edit mode'}}\\n</button>\\n\\n<mat-horizontal-stepper linear #stepper>\\n  <mat-step [stepControl]=\\\"firstFormGroup\\\" [editable]=\\\"isEditable\\\">\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\n      <ng-template matStepLabel>Fill out your name</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"secondFormGroup\\\" [editable]=\\\"isEditable\\\">\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\n      <ng-template matStepLabel>Fill out your address</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperPrevious>Back</button>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step>\\n    <ng-template matStepLabel>Done</ng-template>\\n    You are now done.\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\n    </div>\\n  </mat-step>\\n</mat-horizontal-stepper>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        StepperEditableExample.ctorParameters = function () { return [\n            { type: forms.FormBuilder }\n        ]; };\n        return StepperEditableExample;\n    }());\n\n    var ɵ0 = { showError: true };\n    /**\n     * @title Stepper that displays errors in the steps\n     */\n    var StepperErrorsExample = /** @class */ (function () {\n        function StepperErrorsExample(_formBuilder) {\n            this._formBuilder = _formBuilder;\n        }\n        StepperErrorsExample.prototype.ngOnInit = function () {\n            this.firstFormGroup = this._formBuilder.group({\n                firstCtrl: ['', forms.Validators.required]\n            });\n            this.secondFormGroup = this._formBuilder.group({\n                secondCtrl: ['', forms.Validators.required]\n            });\n        };\n        StepperErrorsExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'stepper-errors-example',\n                        template: \"<mat-horizontal-stepper linear #stepper>\\n  <mat-step [stepControl]=\\\"firstFormGroup\\\" errorMessage=\\\"Name is required.\\\">\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\n      <ng-template matStepLabel>Fill out your name</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"secondFormGroup\\\" errorMessage=\\\"Address is required.\\\">\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\n      <ng-template matStepLabel>Fill out your address</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperPrevious>Back</button>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step>\\n    <ng-template matStepLabel>Done</ng-template>\\n    You are now done.\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\n    </div>\\n  </mat-step>\\n</mat-horizontal-stepper>\\n\",\n                        providers: [{\n                                provide: stepper$1.STEPPER_GLOBAL_OPTIONS, useValue: ɵ0\n                            }],\n                        styles: [\"\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        StepperErrorsExample.ctorParameters = function () { return [\n            { type: forms.FormBuilder }\n        ]; };\n        return StepperErrorsExample;\n    }());\n\n    /**\n     * @title Stepper label bottom position\n     */\n    var StepperLabelPositionBottomExample = /** @class */ (function () {\n        function StepperLabelPositionBottomExample(_formBuilder) {\n            this._formBuilder = _formBuilder;\n        }\n        StepperLabelPositionBottomExample.prototype.ngOnInit = function () {\n            this.firstFormGroup = this._formBuilder.group({\n                firstCtrl: ['', forms.Validators.required]\n            });\n            this.secondFormGroup = this._formBuilder.group({\n                secondCtrl: ['', forms.Validators.required]\n            });\n        };\n        StepperLabelPositionBottomExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'stepper-label-position-bottom-example',\n                        template: \"<mat-horizontal-stepper labelPosition=\\\"bottom\\\" #stepper>\\n    <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n        <form [formGroup]=\\\"firstFormGroup\\\">\\n            <ng-template matStepLabel>Fill out your name</ng-template>\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\n            </mat-form-field>\\n            <div>\\n                <button mat-button matStepperNext>Next</button>\\n            </div>\\n        </form>\\n    </mat-step>\\n    <mat-step [stepControl]=\\\"secondFormGroup\\\" optional>\\n        <form [formGroup]=\\\"secondFormGroup\\\">\\n            <ng-template matStepLabel>Fill out your address</ng-template>\\n            <mat-form-field>\\n                <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n            </mat-form-field>\\n            <div>\\n                <button mat-button matStepperPrevious>Back</button>\\n                <button mat-button matStepperNext>Next</button>\\n            </div>\\n        </form>\\n    </mat-step>\\n    <mat-step>\\n        <ng-template matStepLabel>Done</ng-template>\\n        You are now done.\\n        <div>\\n            <button mat-button matStepperPrevious>Back</button>\\n            <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\n        </div>\\n    </mat-step>\\n</mat-horizontal-stepper>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        StepperLabelPositionBottomExample.ctorParameters = function () { return [\n            { type: forms.FormBuilder }\n        ]; };\n        return StepperLabelPositionBottomExample;\n    }());\n\n    /**\n     * @title Stepper with optional steps\n     */\n    var StepperOptionalExample = /** @class */ (function () {\n        function StepperOptionalExample(_formBuilder) {\n            this._formBuilder = _formBuilder;\n            this.isOptional = false;\n        }\n        StepperOptionalExample.prototype.ngOnInit = function () {\n            this.firstFormGroup = this._formBuilder.group({\n                firstCtrl: ['', forms.Validators.required]\n            });\n            this.secondFormGroup = this._formBuilder.group({\n                secondCtrl: ''\n            });\n        };\n        StepperOptionalExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'stepper-optional-example',\n                        template: \"<button mat-raised-button (click)=\\\"isOptional = !isOptional\\\">\\n  {{!isOptional ? 'Enable optional steps' : 'Disable optional steps'}}\\n</button>\\n\\n<mat-horizontal-stepper linear #stepper>\\n  <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\n      <ng-template matStepLabel>Fill out your name</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"secondFormGroup\\\" [optional]=\\\"isOptional\\\">\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\n      <ng-template matStepLabel>Fill out your address</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperPrevious>Back</button>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step>\\n    <ng-template matStepLabel>Done</ng-template>\\n    You are now done.\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\n    </div>\\n  </mat-step>\\n</mat-horizontal-stepper>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        StepperOptionalExample.ctorParameters = function () { return [\n            { type: forms.FormBuilder }\n        ]; };\n        return StepperOptionalExample;\n    }());\n\n    /**\n     * @title Stepper overview\n     */\n    var StepperOverviewExample = /** @class */ (function () {\n        function StepperOverviewExample(_formBuilder) {\n            this._formBuilder = _formBuilder;\n            this.isLinear = false;\n        }\n        StepperOverviewExample.prototype.ngOnInit = function () {\n            this.firstFormGroup = this._formBuilder.group({\n                firstCtrl: ['', forms.Validators.required]\n            });\n            this.secondFormGroup = this._formBuilder.group({\n                secondCtrl: ['', forms.Validators.required]\n            });\n        };\n        StepperOverviewExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'stepper-overview-example',\n                        template: \"<button mat-raised-button (click)=\\\"isLinear = !isLinear\\\" id=\\\"toggle-linear\\\">\\n  {{!isLinear ? 'Enable linear mode' : 'Disable linear mode'}}\\n</button>\\n<mat-horizontal-stepper [linear]=\\\"isLinear\\\" #stepper>\\n  <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\n      <ng-template matStepLabel>Fill out your name</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\n      <ng-template matStepLabel>Fill out your address</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperPrevious>Back</button>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step>\\n    <ng-template matStepLabel>Done</ng-template>\\n    You are now done.\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\n    </div>\\n  </mat-step>\\n</mat-horizontal-stepper>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        StepperOverviewExample.ctorParameters = function () { return [\n            { type: forms.FormBuilder }\n        ]; };\n        return StepperOverviewExample;\n    }());\n\n    var ɵ0$1 = { displayDefaultIndicatorType: false };\n    /**\n     * @title Stepper with customized states\n     */\n    var StepperStatesExample = /** @class */ (function () {\n        function StepperStatesExample(_formBuilder) {\n            this._formBuilder = _formBuilder;\n        }\n        StepperStatesExample.prototype.ngOnInit = function () {\n            this.firstFormGroup = this._formBuilder.group({\n                firstCtrl: ['', forms.Validators.required]\n            });\n            this.secondFormGroup = this._formBuilder.group({\n                secondCtrl: ['', forms.Validators.required]\n            });\n        };\n        StepperStatesExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'stepper-states-example',\n                        template: \"<mat-horizontal-stepper #stepper>\\n  <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\n      <ng-template matStepLabel>Fill out your name</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\n      <ng-template matStepLabel>Fill out your address</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperPrevious>Back</button>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step>\\n    <ng-template matStepLabel>Done</ng-template>\\n    You are now done.\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\n    </div>\\n  </mat-step>\\n</mat-horizontal-stepper>\\n\\n<mat-horizontal-stepper>\\n  <mat-step label=\\\"Step 1\\\" state=\\\"phone\\\">\\n    <p>Put down your phones.</p>\\n    <div>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n  <mat-step label=\\\"Step 2\\\" state=\\\"chat\\\">\\n    <p>Socialize with each other.</p>\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button matStepperNext>Next</button>\\n    </div>\\n  </mat-step>\\n  <mat-step label=\\\"Step 3\\\">\\n    <p>You're welcome.</p>\\n  </mat-step>\\n\\n  <!-- Icon overrides. -->\\n  <ng-template matStepperIcon=\\\"phone\\\">\\n    <mat-icon>call_end</mat-icon>\\n  </ng-template>\\n  <ng-template matStepperIcon=\\\"chat\\\">\\n    <mat-icon>forum</mat-icon>\\n  </ng-template>\\n</mat-horizontal-stepper>\\n\",\n                        providers: [{\n                                provide: stepper$1.STEPPER_GLOBAL_OPTIONS, useValue: ɵ0$1\n                            }],\n                        styles: [\"\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        StepperStatesExample.ctorParameters = function () { return [\n            { type: forms.FormBuilder }\n        ]; };\n        return StepperStatesExample;\n    }());\n\n    /**\n     * @title Stepper vertical\n     */\n    var StepperVerticalExample = /** @class */ (function () {\n        function StepperVerticalExample(_formBuilder) {\n            this._formBuilder = _formBuilder;\n            this.isLinear = false;\n        }\n        StepperVerticalExample.prototype.ngOnInit = function () {\n            this.firstFormGroup = this._formBuilder.group({\n                firstCtrl: ['', forms.Validators.required]\n            });\n            this.secondFormGroup = this._formBuilder.group({\n                secondCtrl: ['', forms.Validators.required]\n            });\n        };\n        StepperVerticalExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'stepper-vertical-example',\n                        template: \"<button mat-raised-button (click)=\\\"isLinear = !isLinear\\\" id=\\\"toggle-linear\\\">\\n  {{!isLinear ? 'Enable linear mode' : 'Disable linear mode'}}\\n</button>\\n<mat-vertical-stepper [linear]=\\\"isLinear\\\" #stepper>\\n  <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n    <form [formGroup]=\\\"firstFormGroup\\\">\\n      <ng-template matStepLabel>Fill out your name</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Last name, First name\\\" formControlName=\\\"firstCtrl\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n    <form [formGroup]=\\\"secondFormGroup\\\">\\n      <ng-template matStepLabel>Fill out your address</ng-template>\\n      <mat-form-field>\\n        <input matInput placeholder=\\\"Address\\\" formControlName=\\\"secondCtrl\\\" required>\\n      </mat-form-field>\\n      <div>\\n        <button mat-button matStepperPrevious>Back</button>\\n        <button mat-button matStepperNext>Next</button>\\n      </div>\\n    </form>\\n  </mat-step>\\n  <mat-step>\\n    <ng-template matStepLabel>Done</ng-template>\\n    You are now done.\\n    <div>\\n      <button mat-button matStepperPrevious>Back</button>\\n      <button mat-button (click)=\\\"stepper.reset()\\\">Reset</button>\\n    </div>\\n  </mat-step>\\n</mat-vertical-stepper>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        /** @nocollapse */\n        StepperVerticalExample.ctorParameters = function () { return [\n            { type: forms.FormBuilder }\n        ]; };\n        return StepperVerticalExample;\n    }());\n\n    var EXAMPLES = [\n        StepperEditableExample,\n        StepperErrorsExample,\n        StepperLabelPositionBottomExample,\n        StepperOptionalExample,\n        StepperOverviewExample,\n        StepperStatesExample,\n        StepperVerticalExample,\n    ];\n    var StepperExamplesModule = /** @class */ (function () {\n        function StepperExamplesModule() {\n        }\n        StepperExamplesModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            button.MatButtonModule,\n                            icon.MatIconModule,\n                            input.MatInputModule,\n                            stepper.MatStepperModule,\n                            forms.ReactiveFormsModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                    },] }\n        ];\n        return StepperExamplesModule;\n    }());\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.StepperEditableExample = StepperEditableExample;\n    exports.StepperErrorsExample = StepperErrorsExample;\n    exports.StepperLabelPositionBottomExample = StepperLabelPositionBottomExample;\n    exports.StepperOptionalExample = StepperOptionalExample;\n    exports.StepperOverviewExample = StepperOverviewExample;\n    exports.StepperStatesExample = StepperStatesExample;\n    exports.StepperVerticalExample = StepperVerticalExample;\n    exports.StepperExamplesModule = StepperExamplesModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=material-examples-material-stepper.umd.js.map\n"]}
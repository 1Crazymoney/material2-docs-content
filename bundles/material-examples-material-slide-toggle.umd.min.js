!function(e,a){"object"==typeof exports&&"undefined"!=typeof module?a(exports,require("@angular/core"),require("@angular/forms"),require("@angular/material/button"),require("@angular/material/card"),require("@angular/material/checkbox"),require("@angular/material/radio"),require("@angular/material/slide-toggle")):"function"==typeof define&&define.amd?define("@angular/material-examples/material/slide-toggle",["exports","@angular/core","@angular/forms","@angular/material/button","@angular/material/card","@angular/material/checkbox","@angular/material/radio","@angular/material/slide-toggle"],a):a(((e=e||self).ng=e.ng||{},e.ng.materialExamples=e.ng.materialExamples||{},e.ng.materialExamples.material=e.ng.materialExamples.material||{},e.ng.materialExamples.material.slideToggle={}),e.ng.core,e.ng.forms,e.ng.material.button,e.ng.material.card,e.ng.material.checkbox,e.ng.material.radio,e.ng.material["slide-toggle"])}(this,function(e,a,n,t,l,o,r,i){"use strict";var m=function(){function e(){this.color="accent",this.checked=!1,this.disabled=!1}return e.decorators=[{type:a.Component,args:[{selector:"slide-toggle-configurable-example",template:'<mat-card>\n  <mat-card-content>\n    <h2 class="example-h2">Slider configuration</h2>\n\n    <section class="example-section">\n      <label class="example-margin">Color:</label>\n      <mat-radio-group [(ngModel)]="color">\n        <mat-radio-button class="example-margin" value="primary">\n          Primary\n        </mat-radio-button>\n        <mat-radio-button class="example-margin" value="accent">\n          Accent\n        </mat-radio-button>\n        <mat-radio-button class="example-margin" value="warn">\n          Warn\n        </mat-radio-button>\n      </mat-radio-group>\n    </section>\n\n    <section class="example-section">\n      <mat-checkbox class="example-margin" [(ngModel)]="checked">Checked</mat-checkbox>\n    </section>\n\n    <section class="example-section">\n      <mat-checkbox class="example-margin" [(ngModel)]="disabled">Disabled</mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>\n\n<mat-card class="result">\n  <mat-card-content>\n    <h2 class="example-h2">Result</h2>\n\n    <section class="example-section">\n      <mat-slide-toggle\n          class="example-margin"\n          [color]="color"\n          [checked]="checked"\n          [disabled]="disabled">\n        Slide me!\n      </mat-slide-toggle>\n    </section>\n  </mat-card-content>\n</mat-card>\n',styles:[".example-h2 {\n  margin: 10px;\n}\n\n.example-section {\n  display: flex;\n  align-content: center;\n  align-items: center;\n  height: 60px;\n}\n\n.example-margin {\n  margin: 10px;\n}\n"]}]}],e}(),s=function(){function e(e){this.isChecked=!0,this.formGroup=e.group({enableWifi:"",acceptTerms:["",n.Validators.requiredTrue]})}return e.prototype.onFormSubmit=function(){alert(JSON.stringify(this.formGroup.value,null,2))},e.decorators=[{type:a.Component,args:[{selector:"slide-toggle-forms-example",template:'<p>Slide Toggle using a simple NgModel.</p>\n\n<mat-slide-toggle [(ngModel)]="isChecked">Slide Toggle Checked: {{isChecked}}</mat-slide-toggle>\n\n<p>Slide Toggle inside of a Template-driven form</p>\n\n<form class="example-form" #form="ngForm" (ngSubmit)="onFormSubmit()" ngNativeValidate>\n\n  <mat-slide-toggle ngModel name="enableWifi">Enable Wifi</mat-slide-toggle>\n  <mat-slide-toggle ngModel name="acceptTerms" required>Accept Terms of Service</mat-slide-toggle>\n\n  <button mat-raised-button type="submit">Save Settings</button>\n</form>\n\n<p>Slide Toggle inside of a Reactive form</p>\n\n<form class="example-form" [formGroup]="formGroup" (ngSubmit)="onFormSubmit()" ngNativeValidate>\n\n  <mat-slide-toggle formControlName="enableWifi">Enable Wifi</mat-slide-toggle>\n  <mat-slide-toggle formControlName="acceptTerms">Accept Terms of Service</mat-slide-toggle>\n\n  <p>Form Group Status: {{formGroup.status}}</p>\n\n  <button mat-rasied-button type="submit">Save Settings</button>\n</form>\n',styles:[".example-form mat-slide-toggle {\n  margin: 8px 0;\n  display: block;\n}\n"]}]}],e.ctorParameters=function(){return[{type:n.FormBuilder}]},e}(),g=function(){function e(){}return e.decorators=[{type:a.Component,args:[{selector:"slide-toggle-overview-example",template:"<mat-slide-toggle>Slide me!</mat-slide-toggle>\n",styles:["/** No CSS for this example */\n"]}]}],e}(),c=[m,s,g],d=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[n.FormsModule,t.MatButtonModule,l.MatCardModule,o.MatCheckboxModule,r.MatRadioModule,i.MatSlideToggleModule,n.ReactiveFormsModule],declarations:c,exports:c}]}],e}();e.SlideToggleConfigurableExample=m,e.SlideToggleFormsExample=s,e.SlideToggleOverviewExample=g,e.SlideToggleExamplesModule=d,Object.defineProperty(e,"__esModule",{value:!0})});
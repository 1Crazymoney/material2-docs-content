{"version":3,"sources":["src/material-examples/material-examples-cdk-experimental-popover-edit.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","materialExamples","cdkExperimental","popoverEdit","cdk","table","common","core","forms","tslib","collections","rxjs","this","tslib_1","ELEMENT_DATA","position","name","weight","symbol","CdkPopoverEditCdkTableFlexExample","displayedColumns","dataSource","ExampleDataSource","preservedNameValues","WeakMap","preservedWeightValues","prototype","onSubmitName","element","f","valid","value","onSubmitWeight","decorators","type","Component","args","selector","template","styles","_super","_this","apply","arguments","data","BehaviorSubject","__extends","connect","disconnect","DataSource","ELEMENT_DATA$1","CdkPopoverEditCdkTableExample","ExampleDataSource$1","PERSON_DATA","id","firstName","middleName","lastName","CdkPopoverEditCellSpanVanillaTableExample","preservedValues","persons","onSubmit","person","ELEMENT_DATA$2","CdkPopoverEditTabOutVanillaTableExample","elements","ELEMENT_DATA$3","CdkPopoverEditVanillaTableExample","EXAMPLES","CdkPopoverEditExamplesModule","NgModule","imports","CdkPopoverEditModule","CdkTableModule","FormsModule","CommonModule","declarations","Object","defineProperty"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,0CAA2CA,QAAQ,sBAAuBA,QAAQ,mBAAoBA,QAAQ,iBAAkBA,QAAQ,kBAAmBA,QAAQ,SAAUA,QAAQ,4BAA6BA,QAAQ,SAChS,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,2DAA4D,CAAC,UAAW,yCAA0C,qBAAsB,kBAAmB,gBAAiB,iBAAkB,QAAS,2BAA4B,QAASJ,GACtQA,IAAzBD,EAASA,GAAUO,MAAsBC,GAAKR,EAAOQ,IAAM,GAAIR,EAAOQ,GAAGC,iBAAmBT,EAAOQ,GAAGC,kBAAoB,GAAIT,EAAOQ,GAAGC,iBAAiBC,gBAAkBV,EAAOQ,GAAGC,iBAAiBC,iBAAmB,GAAIV,EAAOQ,GAAGC,iBAAiBC,gBAAgBC,YAAc,IAAKX,EAAOQ,GAAGE,gBAAgBC,YAAaX,EAAOQ,GAAGI,IAAIC,MAAOb,EAAOQ,GAAGM,OAAQd,EAAOQ,GAAGO,KAAMf,EAAOQ,GAAGQ,MAAOhB,EAAOiB,MAAOjB,EAAOQ,GAAGI,IAAIM,YAAalB,EAAOmB,MAH/b,CAIEC,KAAM,SAAUlB,EAASS,EAAaE,EAAOC,EAAQC,EAAMC,EAAOK,EAASH,EAAaC,GAAQ,aAE9F,IAAIG,EAAe,CACf,CAAEC,SAAU,EAAGC,KAAM,WAAYC,OAAQ,OAAQC,OAAQ,KACzD,CAAEH,SAAU,EAAGC,KAAM,SAAUC,OAAQ,OAAQC,OAAQ,MACvD,CAAEH,SAAU,EAAGC,KAAM,UAAWC,OAAQ,MAAOC,OAAQ,MACvD,CAAEH,SAAU,EAAGC,KAAM,YAAaC,OAAQ,OAAQC,OAAQ,MAC1D,CAAEH,SAAU,EAAGC,KAAM,QAASC,OAAQ,OAAQC,OAAQ,KACtD,CAAEH,SAAU,EAAGC,KAAM,SAAUC,OAAQ,QAASC,OAAQ,KACxD,CAAEH,SAAU,EAAGC,KAAM,WAAYC,OAAQ,QAASC,OAAQ,KAC1D,CAAEH,SAAU,EAAGC,KAAM,SAAUC,OAAQ,QAASC,OAAQ,KACxD,CAAEH,SAAU,EAAGC,KAAM,WAAYC,OAAQ,QAASC,OAAQ,KAC1D,CAAEH,SAAU,GAAIC,KAAM,OAAQC,OAAQ,QAASC,OAAQ,MACvD,CAAEH,SAAU,GAAIC,KAAM,SAAUC,OAAQ,QAASC,OAAQ,MACzD,CAAEH,SAAU,GAAIC,KAAM,YAAaC,OAAQ,OAAQC,OAAQ,MAC3D,CAAEH,SAAU,GAAIC,KAAM,WAAYC,OAAQ,QAASC,OAAQ,MAC3D,CAAEH,SAAU,GAAIC,KAAM,UAAWC,OAAQ,QAASC,OAAQ,MAC1D,CAAEH,SAAU,GAAIC,KAAM,aAAcC,OAAQ,QAASC,OAAQ,KAC7D,CAAEH,SAAU,GAAIC,KAAM,SAAUC,OAAQ,OAAQC,OAAQ,KACxD,CAAEH,SAAU,GAAIC,KAAM,WAAYC,OAAQ,OAAQC,OAAQ,MAC1D,CAAEH,SAAU,GAAIC,KAAM,QAASC,OAAQ,OAAQC,OAAQ,MACvD,CAAEH,SAAU,GAAIC,KAAM,YAAaC,OAAQ,QAASC,OAAQ,KAC5D,CAAEH,SAAU,GAAIC,KAAM,UAAWC,OAAQ,OAAQC,OAAQ,OAKzDC,EAAmD,WACnD,SAASA,IACLP,KAAKQ,iBAAmB,CAAC,WAAY,OAAQ,SAAU,UACvDR,KAAKS,WAAa,IAAIC,EACtBV,KAAKW,oBAAsB,IAAIC,QAC/BZ,KAAKa,sBAAwB,IAAID,QAqBrC,OAnBAL,EAAkCO,UAAUC,aAAe,SAAUC,EAASC,GACrEA,EAAEC,QAGPF,EAAQZ,KAAOa,EAAEE,MAAMf,OAE3BG,EAAkCO,UAAUM,eAAiB,SAAUJ,EAASC,GACvEA,EAAEC,QAGPF,EAAQX,OAASY,EAAEE,MAAMd,SAE7BE,EAAkCc,WAAa,CAC3C,CAAEC,KAAM3B,EAAK4B,UAAWC,KAAM,CAAC,CACnBC,SAAU,0CACVC,SAAU,4hGACVC,OAAQ,CAAC,gQAGlBpB,EA1B2C,GAmClDG,EAAmC,SAAUkB,GAE7C,SAASlB,IACL,IAAImB,EAAmB,OAAXD,GAAmBA,EAAOE,MAAM9B,KAAM+B,YAAc/B,KAGhE,OADA6B,EAAMG,KAAO,IAAIjC,EAAKkC,gBAAgB/B,GAC/B2B,EAOX,OAZA5B,EAAQiC,UAAUxB,EAAmBkB,GAQrClB,EAAkBI,UAAUqB,QAAU,WAClC,OAAOnC,KAAKgC,MAEhBtB,EAAkBI,UAAUsB,WAAa,aAClC1B,EAb2B,CAcpCZ,EAAYuC,YAEVC,EAAiB,CACjB,CAAEnC,SAAU,EAAGC,KAAM,WAAYC,OAAQ,OAAQC,OAAQ,KACzD,CAAEH,SAAU,EAAGC,KAAM,SAAUC,OAAQ,OAAQC,OAAQ,MACvD,CAAEH,SAAU,EAAGC,KAAM,UAAWC,OAAQ,MAAOC,OAAQ,MACvD,CAAEH,SAAU,EAAGC,KAAM,YAAaC,OAAQ,OAAQC,OAAQ,MAC1D,CAAEH,SAAU,EAAGC,KAAM,QAASC,OAAQ,OAAQC,OAAQ,KACtD,CAAEH,SAAU,EAAGC,KAAM,SAAUC,OAAQ,QAASC,OAAQ,KACxD,CAAEH,SAAU,EAAGC,KAAM,WAAYC,OAAQ,QAASC,OAAQ,KAC1D,CAAEH,SAAU,EAAGC,KAAM,SAAUC,OAAQ,QAASC,OAAQ,KACxD,CAAEH,SAAU,EAAGC,KAAM,WAAYC,OAAQ,QAASC,OAAQ,KAC1D,CAAEH,SAAU,GAAIC,KAAM,OAAQC,OAAQ,QAASC,OAAQ,MACvD,CAAEH,SAAU,GAAIC,KAAM,SAAUC,OAAQ,QAASC,OAAQ,MACzD,CAAEH,SAAU,GAAIC,KAAM,YAAaC,OAAQ,OAAQC,OAAQ,MAC3D,CAAEH,SAAU,GAAIC,KAAM,WAAYC,OAAQ,QAASC,OAAQ,MAC3D,CAAEH,SAAU,GAAIC,KAAM,UAAWC,OAAQ,QAASC,OAAQ,MAC1D,CAAEH,SAAU,GAAIC,KAAM,aAAcC,OAAQ,QAASC,OAAQ,KAC7D,CAAEH,SAAU,GAAIC,KAAM,SAAUC,OAAQ,OAAQC,OAAQ,KACxD,CAAEH,SAAU,GAAIC,KAAM,WAAYC,OAAQ,OAAQC,OAAQ,MAC1D,CAAEH,SAAU,GAAIC,KAAM,QAASC,OAAQ,OAAQC,OAAQ,MACvD,CAAEH,SAAU,GAAIC,KAAM,YAAaC,OAAQ,QAASC,OAAQ,KAC5D,CAAEH,SAAU,GAAIC,KAAM,UAAWC,OAAQ,OAAQC,OAAQ,OAKzDiC,EAA+C,WAC/C,SAASA,IACLvC,KAAKQ,iBAAmB,CAAC,WAAY,OAAQ,SAAU,UACvDR,KAAKS,WAAa,IAAI+B,EACtBxC,KAAKW,oBAAsB,IAAIC,QAC/BZ,KAAKa,sBAAwB,IAAID,QAqBrC,OAnBA2B,EAA8BzB,UAAUC,aAAe,SAAUC,EAASC,GACjEA,EAAEC,QAGPF,EAAQZ,KAAOa,EAAEE,MAAMf,OAE3BmC,EAA8BzB,UAAUM,eAAiB,SAAUJ,EAASC,GACnEA,EAAEC,QAGPF,EAAQX,OAASY,EAAEE,MAAMd,SAE7BkC,EAA8BlB,WAAa,CACvC,CAAEC,KAAM3B,EAAK4B,UAAWC,KAAM,CAAC,CACnBC,SAAU,qCACVC,SAAU,y8FACVC,OAAQ,CAAC,yJAGlBY,EA1BuC,GAmC9CC,EAAqC,SAAUZ,GAE/C,SAASlB,IACL,IAAImB,EAAmB,OAAXD,GAAmBA,EAAOE,MAAM9B,KAAM+B,YAAc/B,KAGhE,OADA6B,EAAMG,KAAO,IAAIjC,EAAKkC,gBAAgBK,GAC/BT,EAOX,OAZA5B,EAAQiC,UAAUxB,EAAmBkB,GAQrClB,EAAkBI,UAAUqB,QAAU,WAClC,OAAOnC,KAAKgC,MAEhBtB,EAAkBI,UAAUsB,WAAa,aAClC1B,EAb6B,CActCZ,EAAYuC,YAEVI,EAAc,CACd,CAAEC,GAAI,EAAGC,UAAW,QAASC,WAAY,SAAUC,SAAU,YAC7D,CAAEH,GAAI,EAAGC,UAAW,QAASC,WAAY,GAAIC,SAAU,QACvD,CAAEH,GAAI,EAAGC,UAAW,QAASC,WAAY,UAAWC,SAAU,SAC9D,CAAEH,GAAI,EAAGC,UAAW,QAASC,WAAY,OAAQC,SAAU,UAC3D,CAAEH,GAAI,EAAGC,UAAW,QAASC,WAAY,OAAQC,SAAU,UAC3D,CAAEH,GAAI,EAAGC,UAAW,QAASC,WAAY,WAAYC,SAAU,WAC/D,CAAEH,GAAI,EAAGC,UAAW,SAAUC,WAAY,GAAIC,SAAU,YACxD,CAAEH,GAAI,EAAGC,UAAW,MAAOC,WAAY,YAAaC,SAAU,WAC9D,CAAEH,GAAI,EAAGC,UAAW,MAAOC,WAAY,GAAIC,SAAU,aAKrDC,EAA2D,WAC3D,SAASA,IACL9C,KAAK+C,gBAAkB,IAAInC,QAC3BZ,KAAKgD,QAAUP,EAiBnB,OAfAK,EAA0ChC,UAAUmC,SAAW,SAAUC,EAAQjC,GACxEA,EAAEC,QAGPgC,EAAOP,UAAY1B,EAAEE,MAAiB,UACtC+B,EAAON,WAAa3B,EAAEE,MAAkB,WACxC+B,EAAOL,SAAW5B,EAAEE,MAAgB,WAExC2B,EAA0CzB,WAAa,CACnD,CAAEC,KAAM3B,EAAK4B,UAAWC,KAAM,CAAC,CACnBC,SAAU,mDACVC,SAAU,y3EACVC,OAAQ,CAAC,qUAGlBmB,EApBmD,GAuB1DK,EAAiB,CACjB,CAAEhD,SAAU,EAAGC,KAAM,WAAYC,OAAQ,OAAQC,OAAQ,KACzD,CAAEH,SAAU,EAAGC,KAAM,SAAUC,OAAQ,OAAQC,OAAQ,MACvD,CAAEH,SAAU,EAAGC,KAAM,UAAWC,OAAQ,MAAOC,OAAQ,MACvD,CAAEH,SAAU,EAAGC,KAAM,YAAaC,OAAQ,OAAQC,OAAQ,MAC1D,CAAEH,SAAU,EAAGC,KAAM,QAASC,OAAQ,OAAQC,OAAQ,KACtD,CAAEH,SAAU,EAAGC,KAAM,SAAUC,OAAQ,QAASC,OAAQ,KACxD,CAAEH,SAAU,EAAGC,KAAM,WAAYC,OAAQ,QAASC,OAAQ,KAC1D,CAAEH,SAAU,EAAGC,KAAM,SAAUC,OAAQ,QAASC,OAAQ,KACxD,CAAEH,SAAU,EAAGC,KAAM,WAAYC,OAAQ,QAASC,OAAQ,KAC1D,CAAEH,SAAU,GAAIC,KAAM,OAAQC,OAAQ,QAASC,OAAQ,MACvD,CAAEH,SAAU,GAAIC,KAAM,SAAUC,OAAQ,QAASC,OAAQ,MACzD,CAAEH,SAAU,GAAIC,KAAM,YAAaC,OAAQ,OAAQC,OAAQ,MAC3D,CAAEH,SAAU,GAAIC,KAAM,WAAYC,OAAQ,QAASC,OAAQ,MAC3D,CAAEH,SAAU,GAAIC,KAAM,UAAWC,OAAQ,QAASC,OAAQ,MAC1D,CAAEH,SAAU,GAAIC,KAAM,aAAcC,OAAQ,QAASC,OAAQ,KAC7D,CAAEH,SAAU,GAAIC,KAAM,SAAUC,OAAQ,OAAQC,OAAQ,KACxD,CAAEH,SAAU,GAAIC,KAAM,WAAYC,OAAQ,OAAQC,OAAQ,MAC1D,CAAEH,SAAU,GAAIC,KAAM,QAASC,OAAQ,OAAQC,OAAQ,MACvD,CAAEH,SAAU,GAAIC,KAAM,YAAaC,OAAQ,QAASC,OAAQ,KAC5D,CAAEH,SAAU,GAAIC,KAAM,UAAWC,OAAQ,OAAQC,OAAQ,OAKzD8C,EAAyD,WACzD,SAASA,IACLpD,KAAKW,oBAAsB,IAAIC,QAC/BZ,KAAKa,sBAAwB,IAAID,QACjCZ,KAAKqD,SAAWF,EAqBpB,OAnBAC,EAAwCtC,UAAUC,aAAe,SAAUC,EAASC,GAC3EA,EAAEC,QAGPF,EAAQZ,KAAOa,EAAEE,MAAMf,OAE3BgD,EAAwCtC,UAAUM,eAAiB,SAAUJ,EAASC,GAC7EA,EAAEC,QAGPF,EAAQX,OAASY,EAAEE,MAAMd,SAE7B+C,EAAwC/B,WAAa,CACjD,CAAEC,KAAM3B,EAAK4B,UAAWC,KAAM,CAAC,CACnBC,SAAU,iDACVC,SAAU,q9DACVC,OAAQ,CAAC,8KAGlByB,EAzBiD,GA4BxDE,EAAiB,CACjB,CAAEnD,SAAU,EAAGC,KAAM,WAAYC,OAAQ,OAAQC,OAAQ,KACzD,CAAEH,SAAU,EAAGC,KAAM,SAAUC,OAAQ,OAAQC,OAAQ,MACvD,CAAEH,SAAU,EAAGC,KAAM,UAAWC,OAAQ,MAAOC,OAAQ,MACvD,CAAEH,SAAU,EAAGC,KAAM,YAAaC,OAAQ,OAAQC,OAAQ,MAC1D,CAAEH,SAAU,EAAGC,KAAM,QAASC,OAAQ,OAAQC,OAAQ,KACtD,CAAEH,SAAU,EAAGC,KAAM,SAAUC,OAAQ,QAASC,OAAQ,KACxD,CAAEH,SAAU,EAAGC,KAAM,WAAYC,OAAQ,QAASC,OAAQ,KAC1D,CAAEH,SAAU,EAAGC,KAAM,SAAUC,OAAQ,QAASC,OAAQ,KACxD,CAAEH,SAAU,EAAGC,KAAM,WAAYC,OAAQ,QAASC,OAAQ,KAC1D,CAAEH,SAAU,GAAIC,KAAM,OAAQC,OAAQ,QAASC,OAAQ,MACvD,CAAEH,SAAU,GAAIC,KAAM,SAAUC,OAAQ,QAASC,OAAQ,MACzD,CAAEH,SAAU,GAAIC,KAAM,YAAaC,OAAQ,OAAQC,OAAQ,MAC3D,CAAEH,SAAU,GAAIC,KAAM,WAAYC,OAAQ,QAASC,OAAQ,MAC3D,CAAEH,SAAU,GAAIC,KAAM,UAAWC,OAAQ,QAASC,OAAQ,MAC1D,CAAEH,SAAU,GAAIC,KAAM,aAAcC,OAAQ,QAASC,OAAQ,KAC7D,CAAEH,SAAU,GAAIC,KAAM,SAAUC,OAAQ,OAAQC,OAAQ,KACxD,CAAEH,SAAU,GAAIC,KAAM,WAAYC,OAAQ,OAAQC,OAAQ,MAC1D,CAAEH,SAAU,GAAIC,KAAM,QAASC,OAAQ,OAAQC,OAAQ,MACvD,CAAEH,SAAU,GAAIC,KAAM,YAAaC,OAAQ,QAASC,OAAQ,KAC5D,CAAEH,SAAU,GAAIC,KAAM,UAAWC,OAAQ,OAAQC,OAAQ,OAKzDiD,EAAmD,WACnD,SAASA,IACLvD,KAAKW,oBAAsB,IAAIC,QAC/BZ,KAAKa,sBAAwB,IAAID,QACjCZ,KAAKqD,SAAWC,EAqBpB,OAnBAC,EAAkCzC,UAAUC,aAAe,SAAUC,EAASC,GACrEA,EAAEC,QAGPF,EAAQZ,KAAOa,EAAEE,MAAMf,OAE3BmD,EAAkCzC,UAAUM,eAAiB,SAAUJ,EAASC,GACvEA,EAAEC,QAGPF,EAAQX,OAASY,EAAEE,MAAMd,SAE7BkD,EAAkClC,WAAa,CAC3C,CAAEC,KAAM3B,EAAK4B,UAAWC,KAAM,CAAC,CACnBC,SAAU,yCACVC,SAAU,swEACVC,OAAQ,CAAC,8KAGlB4B,EAzB2C,GA4BlDC,EAAW,CACXjB,EACAhC,EACAuC,EACAM,EACAG,GAEAE,EAA8C,WAC9C,SAASA,KAcT,OAZAA,EAA6BpC,WAAa,CACtC,CAAEC,KAAM3B,EAAK+D,SAAUlC,KAAM,CAAC,CAClBmC,QAAS,CACLpE,EAAYqE,qBACZnE,EAAMoE,eACNjE,EAAMkE,YACNpE,EAAOqE,cAEXC,aAAcR,EACd1E,QAAS0E,MAGlBC,EAfsC,GAsBjD3E,EAAQyB,kCAAoCA,EAC5CzB,EAAQyD,8BAAgCA,EACxCzD,EAAQgE,0CAA4CA,EACpDhE,EAAQsE,wCAA0CA,EAClDtE,EAAQyE,kCAAoCA,EAC5CzE,EAAQ2E,6BAA+BA,EAEvCQ,OAAOC,eAAepF,EAAS,aAAc,CAAEqC,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/cdk-experimental/popover-edit'), require('@angular/cdk/table'), require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('tslib'), require('@angular/cdk/collections'), require('rxjs')) :\n    typeof define === 'function' && define.amd ? define('@angular/material-examples/cdk-experimental/popover-edit', ['exports', '@angular/cdk-experimental/popover-edit', '@angular/cdk/table', '@angular/common', '@angular/core', '@angular/forms', 'tslib', '@angular/cdk/collections', 'rxjs'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.materialExamples = global.ng.materialExamples || {}, global.ng.materialExamples.cdkExperimental = global.ng.materialExamples.cdkExperimental || {}, global.ng.materialExamples.cdkExperimental.popoverEdit = {}), global.ng.cdkExperimental.popoverEdit, global.ng.cdk.table, global.ng.common, global.ng.core, global.ng.forms, global.tslib, global.ng.cdk.collections, global.rxjs));\n}(this, function (exports, popoverEdit, table, common, core, forms, tslib_1, collections, rxjs) { 'use strict';\n\n    var ELEMENT_DATA = [\n        { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n        { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n        { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n        { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n        { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n        { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n        { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n        { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n        { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n        { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n        { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\n        { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\n        { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\n        { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\n        { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\n        { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\n        { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\n        { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\n        { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\n        { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\n    ];\n    /**\n     * @title CDK Popover Edit on a flex cdk-table.\n     */\n    var CdkPopoverEditCdkTableFlexExample = /** @class */ (function () {\n        function CdkPopoverEditCdkTableFlexExample() {\n            this.displayedColumns = ['position', 'name', 'weight', 'symbol'];\n            this.dataSource = new ExampleDataSource();\n            this.preservedNameValues = new WeakMap();\n            this.preservedWeightValues = new WeakMap();\n        }\n        CdkPopoverEditCdkTableFlexExample.prototype.onSubmitName = function (element, f) {\n            if (!f.valid) {\n                return;\n            }\n            element.name = f.value.name;\n        };\n        CdkPopoverEditCdkTableFlexExample.prototype.onSubmitWeight = function (element, f) {\n            if (!f.valid) {\n                return;\n            }\n            element.weight = f.value.weight;\n        };\n        CdkPopoverEditCdkTableFlexExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'cdk-popover-edit-cdk-table-flex-example',\n                        template: \"<cdk-table class=\\\"example-table\\\" editable [dataSource]=\\\"dataSource\\\">\\n  <!--\\n    This edit lens is specified outside of the cell and must explicitly declare\\n    its context. It could be reused in multiple cells.\\n  -->\\n  <ng-template #weightEdit let-element>\\n    <div style=\\\"background-color: white;\\\">\\n      <form #f=\\\"ngForm\\\"\\n          cdkEditControl\\n          (ngSubmit)=\\\"onSubmitWeight(element, f)\\\"\\n          [cdkEditControlPreservedFormValue]=\\\"preservedWeightValues.get(element)\\\"\\n          (cdkEditControlPreservedFormValueChange)=\\\"preservedWeightValues.set(element, $event)\\\">\\n        Edit b:\\n        <input type=\\\"number\\\" [ngModel]=\\\"element.weight\\\" name=\\\"weight\\\" required>\\n        <br>\\n        <button type=\\\"submit\\\">Confirm</button>\\n        <button cdkEditRevert>Revert</button>\\n        <button cdkEditClose>Close</button>\\n      </form>\\n    </div>\\n  </ng-template>\\n\\n  <!-- Position Column -->\\n  <ng-container cdkColumnDef=\\\"position\\\">\\n    <cdk-header-cell *cdkHeaderCellDef> No. </cdk-header-cell>\\n    <cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.position}} </cdk-cell>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container cdkColumnDef=\\\"name\\\">\\n    <cdk-header-cell *cdkHeaderCellDef> Name </cdk-header-cell>\\n    <cdk-cell *cdkCellDef=\\\"let element\\\"\\n        [cdkPopoverEdit]=\\\"nameEdit\\\">\\n      {{element.name}}\\n      \\n      <!-- This edit is defined in the cell and can implicitly access element -->\\n      <ng-template #nameEdit>\\n        <div style=\\\"background-color: white;\\\">\\n          <form #f=\\\"ngForm\\\"\\n              cdkEditControl\\n              (ngSubmit)=\\\"onSubmitName(element, f)\\\"\\n              [cdkEditControlPreservedFormValue]=\\\"preservedNameValues.get(element)\\\"\\n              (cdkEditControlPreservedFormValueChange)=\\\"preservedNameValues.set(element, $event)\\\">\\n            Edit a:\\n            <input [ngModel]=\\\"element.name\\\" name=\\\"name\\\" required>\\n            <br>\\n            <button type=\\\"submit\\\">Confirm</button>\\n            <button cdkEditRevert>Revert</button>\\n            <button cdkEditClose>Close</button>\\n          </form>\\n        </div>\\n      </ng-template>\\n\\n      <span *cdkRowHoverContent>\\n        <button cdkEditOpen>Edit</button>\\n      </span>\\n    </cdk-cell>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container cdkColumnDef=\\\"weight\\\">\\n    <cdk-header-cell *cdkHeaderCellDef> Weight </cdk-header-cell>\\n    <cdk-cell *cdkCellDef=\\\"let element\\\"\\n        [cdkPopoverEdit]=\\\"weightEdit\\\" [cdkPopoverEditContext]=\\\"element\\\">\\n      {{element.weight}}\\n      \\n      <span *cdkRowHoverContent>\\n        <button cdkEditOpen>Edit</button>\\n      </span>\\n    </cdk-cell>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container cdkColumnDef=\\\"symbol\\\">\\n    <cdk-header-cell *cdkHeaderCellDef> Symbol </cdk-header-cell>\\n    <cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.symbol}} </cdk-cell>\\n  </ng-container>\\n\\n  <cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></cdk-header-row>\\n  <cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></cdk-row>\\n</cdk-table>\\n\",\n                        styles: [\"/**\\n * Add basic flex styling so that the cells evenly space themselves in the row.\\n */\\n.example-table cdk-row, cdk-header-row, cdk-footer-row {\\n  display: flex;\\n}\\n\\n.example-table cdk-cell, cdk-header-cell, cdk-footer-cell {\\n  flex: 1;\\n}\\n\"]\n                    }] }\n        ];\n        return CdkPopoverEditCdkTableFlexExample;\n    }());\n    /**\n     * Data source to provide what data should be rendered in the table. Note that the data source\n     * can retrieve its data in any way. In this case, the data source is provided a reference\n     * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n     * the underlying data. Instead, it only needs to take the data and send the table exactly what\n     * should be rendered.\n     */\n    var ExampleDataSource = /** @class */ (function (_super) {\n        tslib_1.__extends(ExampleDataSource, _super);\n        function ExampleDataSource() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /** Stream of data that is provided to the table. */\n            _this.data = new rxjs.BehaviorSubject(ELEMENT_DATA);\n            return _this;\n        }\n        /** Connect function called by the table to retrieve one stream containing the data to render. */\n        ExampleDataSource.prototype.connect = function () {\n            return this.data;\n        };\n        ExampleDataSource.prototype.disconnect = function () { };\n        return ExampleDataSource;\n    }(collections.DataSource));\n\n    var ELEMENT_DATA$1 = [\n        { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n        { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n        { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n        { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n        { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n        { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n        { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n        { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n        { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n        { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n        { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\n        { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\n        { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\n        { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\n        { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\n        { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\n        { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\n        { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\n        { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\n        { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\n    ];\n    /**\n     * @title CDK Popover Edit on a CDK data-table\n     */\n    var CdkPopoverEditCdkTableExample = /** @class */ (function () {\n        function CdkPopoverEditCdkTableExample() {\n            this.displayedColumns = ['position', 'name', 'weight', 'symbol'];\n            this.dataSource = new ExampleDataSource$1();\n            this.preservedNameValues = new WeakMap();\n            this.preservedWeightValues = new WeakMap();\n        }\n        CdkPopoverEditCdkTableExample.prototype.onSubmitName = function (element, f) {\n            if (!f.valid) {\n                return;\n            }\n            element.name = f.value.name;\n        };\n        CdkPopoverEditCdkTableExample.prototype.onSubmitWeight = function (element, f) {\n            if (!f.valid) {\n                return;\n            }\n            element.weight = f.value.weight;\n        };\n        CdkPopoverEditCdkTableExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'cdk-popover-edit-cdk-table-example',\n                        template: \"<table class=\\\"example-table\\\" cdk-table editable [dataSource]=\\\"dataSource\\\">\\n  <!--\\n    This edit lens is specified outside of the cell and must explicitly declare\\n    its context. It could be reused in multiple cells.\\n  -->\\n  <ng-template #weightEdit let-element>\\n    <div style=\\\"background-color: white;\\\">\\n      <form #f=\\\"ngForm\\\"\\n          cdkEditControl\\n          (ngSubmit)=\\\"onSubmitWeight(element, f)\\\"\\n          [cdkEditControlPreservedFormValue]=\\\"preservedWeightValues.get(element)\\\"\\n          (cdkEditControlPreservedFormValueChange)=\\\"preservedWeightValues.set(element, $event)\\\">\\n        Edit b:\\n        <input type=\\\"number\\\" [ngModel]=\\\"element.weight\\\" name=\\\"weight\\\" required>\\n        <br>\\n        <button type=\\\"submit\\\">Confirm</button>\\n        <button cdkEditRevert cdkEditClose>Revert and close</button>\\n      </form>\\n    </div>\\n  </ng-template>\\n\\n  <!-- Position Column -->\\n  <ng-container cdkColumnDef=\\\"position\\\">\\n    <th cdk-header-cell *cdkHeaderCellDef> No. </th>\\n    <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.position}} </td>\\n  </ng-container>\\n\\n  <!-- Name Column -->\\n  <ng-container cdkColumnDef=\\\"name\\\">\\n    <th cdk-header-cell *cdkHeaderCellDef> Name </th>\\n    <td cdk-cell *cdkCellDef=\\\"let element\\\"\\n        [cdkPopoverEdit]=\\\"nameEdit\\\">\\n      {{element.name}}\\n      \\n      <!-- This edit is defined in the cell and can implicitly access element -->\\n      <ng-template #nameEdit>\\n        <div style=\\\"background-color: white;\\\">\\n          <form #f=\\\"ngForm\\\"\\n              cdkEditControl\\n              (ngSubmit)=\\\"onSubmitName(element, f)\\\"\\n              [cdkEditControlPreservedFormValue]=\\\"preservedNameValues.get(element)\\\"\\n              (cdkEditControlPreservedFormValueChange)=\\\"preservedNameValues.set(element, $event)\\\">\\n            Edit a:\\n            <input [ngModel]=\\\"element.name\\\" name=\\\"name\\\" required>\\n            <br>\\n            <button type=\\\"submit\\\">Confirm</button>\\n            <button cdkEditRevert>Revert</button>\\n            <button cdkEditClose>Close</button>\\n          </form>\\n        </div>\\n      </ng-template>\\n\\n      <span *cdkRowHoverContent>\\n        <button cdkEditOpen>Edit</button>\\n      </span>\\n    </td>\\n  </ng-container>\\n\\n  <!-- Weight Column -->\\n  <ng-container cdkColumnDef=\\\"weight\\\">\\n    <th cdk-header-cell *cdkHeaderCellDef> Weight </th>\\n    <td cdk-cell *cdkCellDef=\\\"let element\\\"\\n        [cdkPopoverEdit]=\\\"weightEdit\\\" [cdkPopoverEditContext]=\\\"element\\\">\\n      {{element.weight}}\\n      \\n      <span *cdkRowHoverContent>\\n        <button cdkEditOpen>Edit</button>\\n      </span>\\n    </td>\\n  </ng-container>\\n\\n  <!-- Symbol Column -->\\n  <ng-container cdkColumnDef=\\\"symbol\\\">\\n    <th cdk-header-cell *cdkHeaderCellDef> Symbol </th>\\n    <td cdk-cell *cdkCellDef=\\\"let element\\\"> {{element.symbol}} </td>\\n  </ng-container>\\n\\n  <tr cdk-header-row *cdkHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n  <tr cdk-row *cdkRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\",\n                        styles: [\".example-table {\\n  width: 100%;\\n}\\n\\n.example-table th {\\n  text-align: left;\\n}\\n\\n.example-table td,\\n.example-table th {\\n  width: 25%;\\n}\\n\"]\n                    }] }\n        ];\n        return CdkPopoverEditCdkTableExample;\n    }());\n    /**\n     * Data source to provide what data should be rendered in the table. Note that the data source\n     * can retrieve its data in any way. In this case, the data source is provided a reference\n     * to a common data base, ExampleDatabase. It is not the data source's responsibility to manage\n     * the underlying data. Instead, it only needs to take the data and send the table exactly what\n     * should be rendered.\n     */\n    var ExampleDataSource$1 = /** @class */ (function (_super) {\n        tslib_1.__extends(ExampleDataSource, _super);\n        function ExampleDataSource() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            /** Stream of data that is provided to the table. */\n            _this.data = new rxjs.BehaviorSubject(ELEMENT_DATA$1);\n            return _this;\n        }\n        /** Connect function called by the table to retrieve one stream containing the data to render. */\n        ExampleDataSource.prototype.connect = function () {\n            return this.data;\n        };\n        ExampleDataSource.prototype.disconnect = function () { };\n        return ExampleDataSource;\n    }(collections.DataSource));\n\n    var PERSON_DATA = [\n        { id: 1, firstName: 'Terra', middleName: 'Maduin', lastName: 'Branford' },\n        { id: 2, firstName: 'Locke', middleName: '', lastName: 'Cole' },\n        { id: 3, firstName: 'Celes', middleName: 'Gestahl', lastName: 'Chere' },\n        { id: 4, firstName: 'Edgar', middleName: 'Roni', lastName: 'Figaro' },\n        { id: 5, firstName: 'Sabin', middleName: 'Rene', lastName: 'Figaro' },\n        { id: 6, firstName: 'Clyde', middleName: '\"Shadow\"', lastName: 'Arrowny' },\n        { id: 7, firstName: 'Setzer', middleName: '', lastName: 'Gabbiani' },\n        { id: 8, firstName: 'Cid', middleName: 'Del Norte', lastName: 'Marquez' },\n        { id: 9, firstName: 'Mog', middleName: '', lastName: 'McMoogle' },\n    ];\n    /**\n     * @title CDK Popover Edit spanning multiple columns on an HTML data-table\n     */\n    var CdkPopoverEditCellSpanVanillaTableExample = /** @class */ (function () {\n        function CdkPopoverEditCellSpanVanillaTableExample() {\n            this.preservedValues = new WeakMap();\n            this.persons = PERSON_DATA;\n        }\n        CdkPopoverEditCellSpanVanillaTableExample.prototype.onSubmit = function (person, f) {\n            if (!f.valid) {\n                return;\n            }\n            person.firstName = f.value['firstName'];\n            person.middleName = f.value['middleName'];\n            person.lastName = f.value['lastName'];\n        };\n        CdkPopoverEditCellSpanVanillaTableExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'cdk-popover-edit-cell-span-vanilla-table-example',\n                        template: \"<table editable class=\\\"example-table\\\">\\n  <!--\\n    This edit lens is specified outside of the cell and must explicitly declare\\n    its context. It could be reused in multiple cells.\\n  -->\\n  <ng-template #nameEdit let-ctx>\\n    <div style=\\\"background-color: #ddd; width: 100%\\\">\\n      <form #f=\\\"ngForm\\\"\\n          cdkEditControl\\n          (ngSubmit)=\\\"onSubmit(ctx.person, f)\\\"\\n          [cdkEditControlPreservedFormValue]=\\\"preservedValues.get(ctx.person)\\\"\\n          (cdkEditControlPreservedFormValueChange)=\\\"preservedValues.set(ctx.person, $event)\\\">\\n        <div class=\\\"example-input-container\\\">\\n          <input [ngModel]=\\\"ctx.person.firstName\\\" name=\\\"firstName\\\" required\\n              [attr.cdkFocusInitial]=\\\"ctx.focus === 'firstName' || null\\\">\\n          <input [ngModel]=\\\"ctx.person.middleName\\\" name=\\\"middleName\\\"\\n              [attr.cdkFocusInitial]=\\\"ctx.focus === 'middleName' || null\\\">\\n          <input [ngModel]=\\\"ctx.person.lastName\\\" name=\\\"lastName\\\" required\\n              [attr.cdkFocusInitial]=\\\"ctx.focus === 'lastName' || null\\\">\\n        </div>\\n        <br>\\n        <br>\\n        <button type=\\\"submit\\\">Confirm</button>\\n        <button cdkEditRevert>Revert</button>\\n        <button cdkEditClose>Close</button>\\n      </form>\\n    </div>\\n  </ng-template>\\n  \\n  <tr>\\n    <th> No. </th>\\n    <th> First name </th>\\n    <th> Middle name </th>\\n    <th> Last name </th>\\n  </tr>\\n  \\n  <tr *ngFor=\\\"let person of persons\\\">\\n    <td> {{person.id}} </td>\\n\\n    <td [cdkPopoverEdit]=\\\"nameEdit\\\"\\n        [cdkPopoverEditContext]=\\\"{person: person, focus: 'firstName'}\\\"\\n        [cdkPopoverEditColspan]=\\\"{after: 2}\\\">\\n      {{person.firstName}}\\n      \\n      <span *cdkRowHoverContent>\\n        <button cdkEditOpen>Edit</button>\\n      </span>\\n    </td>\\n    \\n    <td [cdkPopoverEdit]=\\\"nameEdit\\\"\\n        [cdkPopoverEditContext]=\\\"{person: person, focus: 'middleName'}\\\"\\n        [cdkPopoverEditColspan]=\\\"{before: 1, after: 1}\\\">\\n      {{person.middleName}}\\n      \\n      <span *cdkRowHoverContent>\\n        <button cdkEditOpen>Edit</button>\\n      </span>\\n    </td>\\n    \\n    <td [cdkPopoverEdit]=\\\"nameEdit\\\"\\n        [cdkPopoverEditContext]=\\\"{person: person, focus: 'lastName'}\\\"\\n        [cdkPopoverEditColspan]=\\\"{before: 2}\\\">\\n      {{person.lastName}}\\n      \\n      <span *cdkRowHoverContent>\\n        <button cdkEditOpen>Edit</button>\\n      </span>\\n    </td>\\n  </tr>\\n</table>\\n\",\n                        styles: [\".example-table {\\n  width: 100%;\\n}\\n\\n.example-table th {\\n  text-align: left;\\n}\\n\\n.example-table td,\\n.example-table th {\\n  min-width: 300px;\\n  width: 25%;\\n}\\n\\n.example-input-container {\\n  display: flex;\\n  justify-content: stretch;\\n}\\n\\n.example-input-container input {\\n  flex: 1;\\n  font-size: 14px;\\n}\\n\"]\n                    }] }\n        ];\n        return CdkPopoverEditCellSpanVanillaTableExample;\n    }());\n\n    var ELEMENT_DATA$2 = [\n        { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n        { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n        { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n        { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n        { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n        { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n        { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n        { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n        { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n        { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n        { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\n        { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\n        { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\n        { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\n        { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\n        { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\n        { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\n        { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\n        { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\n        { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\n    ];\n    /**\n     * @title CDK Popover Edit with spreadsheet-like configuration on an HTML data-table\n     */\n    var CdkPopoverEditTabOutVanillaTableExample = /** @class */ (function () {\n        function CdkPopoverEditTabOutVanillaTableExample() {\n            this.preservedNameValues = new WeakMap();\n            this.preservedWeightValues = new WeakMap();\n            this.elements = ELEMENT_DATA$2;\n        }\n        CdkPopoverEditTabOutVanillaTableExample.prototype.onSubmitName = function (element, f) {\n            if (!f.valid) {\n                return;\n            }\n            element.name = f.value.name;\n        };\n        CdkPopoverEditTabOutVanillaTableExample.prototype.onSubmitWeight = function (element, f) {\n            if (!f.valid) {\n                return;\n            }\n            element.weight = f.value.weight;\n        };\n        CdkPopoverEditTabOutVanillaTableExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'cdk-popover-edit-tab-out-vanilla-table-example',\n                        template: \"<table editable class=\\\"example-table\\\">\\n  <!--\\n    This edit lens is specified outside of the cell and must explicitly declare\\n    its context. It could be reused in multiple cells.\\n  -->\\n  <ng-template #weightEdit let-element>\\n    <div style=\\\"background-color: white; width: 100%\\\">\\n      <form #f=\\\"ngForm\\\"\\n          cdkEditControl\\n          cdkEditControlClickOutBehavior=\\\"submit\\\"\\n          (ngSubmit)=\\\"onSubmitWeight(element, f)\\\"\\n          [cdkEditControlPreservedFormValue]=\\\"preservedWeightValues.get(element)\\\"\\n          (cdkEditControlPreservedFormValueChange)=\\\"preservedWeightValues.set(element, $event)\\\">\\n        <input type=\\\"number\\\" [ngModel]=\\\"element.weight\\\" name=\\\"weight\\\" required>\\n      </form>\\n    </div>\\n  </ng-template>\\n  \\n  <tr>\\n    <th> No. </th>\\n    <th> Name </th>\\n    <th> Weight </th>\\n    <th> Symbol </th>\\n  </tr>\\n  \\n  <tr *ngFor=\\\"let element of elements\\\">\\n    <td> {{element.position}} </td>\\n    \\n    <td [cdkPopoverEdit]=\\\"nameEdit\\\" cdkPopoverEditTabOut cdkEditOpen>\\n      {{element.name}}\\n      \\n      <!-- This edit is defined in the cell and can implicitly access element -->\\n      <ng-template #nameEdit>\\n        <div style=\\\"background-color: white; width: 100%\\\">\\n          <form #f=\\\"ngForm\\\"\\n              cdkEditControl\\n              cdkEditControlClickOutBehavior=\\\"submit\\\"\\n              (ngSubmit)=\\\"onSubmitName(element, f)\\\"\\n              [cdkEditControlPreservedFormValue]=\\\"preservedNameValues.get(element)\\\"\\n              (cdkEditControlPreservedFormValueChange)=\\\"preservedNameValues.set(element, $event)\\\">\\n            <input [ngModel]=\\\"element.name\\\" name=\\\"name\\\" required>\\n            <br>\\n            <button type=\\\"submit\\\">Confirm</button>\\n          </form>\\n        </div>\\n      </ng-template>\\n    </td>\\n\\n    <td [cdkPopoverEdit]=\\\"weightEdit\\\" [cdkPopoverEditContext]=\\\"element\\\"\\n        cdkPopoverEditTabOut cdkEditOpen>\\n      {{element.weight}}\\n    </td>\\n\\n    <td> {{element.symbol}} </td>\\n  </tr>\\n</table>\\n\",\n                        styles: [\".example-table {\\n  width: 100%;\\n}\\n\\n.example-table th {\\n  text-align: left;\\n}\\n\\n.example-table td,\\n.example-table th {\\n  min-width: 300px;\\n  width: 25%;\\n}\\n\"]\n                    }] }\n        ];\n        return CdkPopoverEditTabOutVanillaTableExample;\n    }());\n\n    var ELEMENT_DATA$3 = [\n        { position: 1, name: 'Hydrogen', weight: 1.0079, symbol: 'H' },\n        { position: 2, name: 'Helium', weight: 4.0026, symbol: 'He' },\n        { position: 3, name: 'Lithium', weight: 6.941, symbol: 'Li' },\n        { position: 4, name: 'Beryllium', weight: 9.0122, symbol: 'Be' },\n        { position: 5, name: 'Boron', weight: 10.811, symbol: 'B' },\n        { position: 6, name: 'Carbon', weight: 12.0107, symbol: 'C' },\n        { position: 7, name: 'Nitrogen', weight: 14.0067, symbol: 'N' },\n        { position: 8, name: 'Oxygen', weight: 15.9994, symbol: 'O' },\n        { position: 9, name: 'Fluorine', weight: 18.9984, symbol: 'F' },\n        { position: 10, name: 'Neon', weight: 20.1797, symbol: 'Ne' },\n        { position: 11, name: 'Sodium', weight: 22.9897, symbol: 'Na' },\n        { position: 12, name: 'Magnesium', weight: 24.305, symbol: 'Mg' },\n        { position: 13, name: 'Aluminum', weight: 26.9815, symbol: 'Al' },\n        { position: 14, name: 'Silicon', weight: 28.0855, symbol: 'Si' },\n        { position: 15, name: 'Phosphorus', weight: 30.9738, symbol: 'P' },\n        { position: 16, name: 'Sulfur', weight: 32.065, symbol: 'S' },\n        { position: 17, name: 'Chlorine', weight: 35.453, symbol: 'Cl' },\n        { position: 18, name: 'Argon', weight: 39.948, symbol: 'Ar' },\n        { position: 19, name: 'Potassium', weight: 39.0983, symbol: 'K' },\n        { position: 20, name: 'Calcium', weight: 40.078, symbol: 'Ca' },\n    ];\n    /**\n     * @title CDK Popover Edit on an HTML data-table\n     */\n    var CdkPopoverEditVanillaTableExample = /** @class */ (function () {\n        function CdkPopoverEditVanillaTableExample() {\n            this.preservedNameValues = new WeakMap();\n            this.preservedWeightValues = new WeakMap();\n            this.elements = ELEMENT_DATA$3;\n        }\n        CdkPopoverEditVanillaTableExample.prototype.onSubmitName = function (element, f) {\n            if (!f.valid) {\n                return;\n            }\n            element.name = f.value.name;\n        };\n        CdkPopoverEditVanillaTableExample.prototype.onSubmitWeight = function (element, f) {\n            if (!f.valid) {\n                return;\n            }\n            element.weight = f.value.weight;\n        };\n        CdkPopoverEditVanillaTableExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'cdk-popover-edit-vanilla-table-example',\n                        template: \"<table editable class=\\\"example-table\\\">\\n  <!--\\n    This edit lens is specified outside of the cell and must explicitly declare\\n    its context. It could be reused in multiple cells.\\n  -->\\n  <ng-template #weightEdit let-element>\\n    <div style=\\\"background-color: white; width: 100%\\\">\\n      <form #f=\\\"ngForm\\\"\\n          cdkEditControl\\n          (ngSubmit)=\\\"onSubmitWeight(element, f)\\\"\\n          [cdkEditControlPreservedFormValue]=\\\"preservedWeightValues.get(element)\\\"\\n          (cdkEditControlPreservedFormValueChange)=\\\"preservedWeightValues.set(element, $event)\\\">\\n        Edit b:\\n        <input type=\\\"number\\\" [ngModel]=\\\"element.weight\\\" name=\\\"weight\\\" required>\\n        <br>\\n        <button type=\\\"submit\\\">Confirm</button>\\n        <button cdkEditRevert>Revert</button>\\n        <button cdkEditClose>Close</button>\\n      </form>\\n    </div>\\n  </ng-template>\\n  \\n  <tr>\\n    <th> No. </th>\\n    <th> Name </th>\\n    <th> Weight </th>\\n    <th> Symbol </th>\\n  </tr>\\n  \\n  <tr *ngFor=\\\"let element of elements\\\">\\n    <td> {{element.position}} </td>\\n    \\n    <td [cdkPopoverEdit]=\\\"nameEdit\\\">\\n      {{element.name}}\\n      \\n      <!-- This edit is defined in the cell and can implicitly access element -->\\n      <ng-template #nameEdit>\\n        <div style=\\\"background-color: white; width: 100%\\\">\\n          <form #f=\\\"ngForm\\\"\\n              cdkEditControl\\n              (ngSubmit)=\\\"onSubmitName(element, f)\\\"\\n              [cdkEditControlPreservedFormValue]=\\\"preservedNameValues.get(element)\\\"\\n              (cdkEditControlPreservedFormValueChange)=\\\"preservedNameValues.set(element, $event)\\\">\\n            Edit a:\\n            <input [ngModel]=\\\"element.name\\\" name=\\\"name\\\" required>\\n            <br>\\n            <button type=\\\"submit\\\">Confirm</button>\\n            <button cdkEditRevert>Revert</button>\\n            <button cdkEditClose>Close</button>\\n          </form>\\n        </div>\\n      </ng-template>\\n\\n      <span *cdkRowHoverContent>\\n        <button cdkEditOpen>Edit</button>\\n      </span>\\n    </td>\\n\\n    <td [cdkPopoverEdit]=\\\"weightEdit\\\" [cdkPopoverEditContext]=\\\"element\\\">\\n      {{element.weight}}\\n      \\n      <span *cdkRowHoverContent>\\n        <button cdkEditOpen>Edit</button>\\n      </span>\\n    </td>\\n\\n    <td> {{element.symbol}} </td>\\n  </tr>\\n</table>\\n\",\n                        styles: [\".example-table {\\n  width: 100%;\\n}\\n\\n.example-table th {\\n  text-align: left;\\n}\\n\\n.example-table td,\\n.example-table th {\\n  min-width: 300px;\\n  width: 25%;\\n}\\n\"]\n                    }] }\n        ];\n        return CdkPopoverEditVanillaTableExample;\n    }());\n\n    var EXAMPLES = [\n        CdkPopoverEditCdkTableExample,\n        CdkPopoverEditCdkTableFlexExample,\n        CdkPopoverEditCellSpanVanillaTableExample,\n        CdkPopoverEditTabOutVanillaTableExample,\n        CdkPopoverEditVanillaTableExample,\n    ];\n    var CdkPopoverEditExamplesModule = /** @class */ (function () {\n        function CdkPopoverEditExamplesModule() {\n        }\n        CdkPopoverEditExamplesModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            popoverEdit.CdkPopoverEditModule,\n                            table.CdkTableModule,\n                            forms.FormsModule,\n                            common.CommonModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                    },] }\n        ];\n        return CdkPopoverEditExamplesModule;\n    }());\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.CdkPopoverEditCdkTableFlexExample = CdkPopoverEditCdkTableFlexExample;\n    exports.CdkPopoverEditCdkTableExample = CdkPopoverEditCdkTableExample;\n    exports.CdkPopoverEditCellSpanVanillaTableExample = CdkPopoverEditCellSpanVanillaTableExample;\n    exports.CdkPopoverEditTabOutVanillaTableExample = CdkPopoverEditTabOutVanillaTableExample;\n    exports.CdkPopoverEditVanillaTableExample = CdkPopoverEditVanillaTableExample;\n    exports.CdkPopoverEditExamplesModule = CdkPopoverEditExamplesModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=material-examples-cdk-experimental-popover-edit.umd.js.map\n"]}
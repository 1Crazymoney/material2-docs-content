{"version":3,"sources":["src/material-examples/material-examples-material-progress-spinner.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","materialExamples","material","progressSpinner","common","core","forms","card","radio","slider","this","ProgressSpinnerConfigurableExample","color","mode","value","decorators","type","Component","args","selector","template","styles","ProgressSpinnerOverviewExample","EXAMPLES","ProgressSpinnerExamplesModule","NgModule","imports","CommonModule","MatCardModule","MatProgressSpinnerModule","MatRadioModule","MatSliderModule","FormsModule","declarations","Object","defineProperty"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,mBAAoBA,QAAQ,iBAAkBA,QAAQ,kBAAmBA,QAAQ,0BAA2BA,QAAQ,sCAAuCA,QAAQ,2BAA4BA,QAAQ,6BAC7Q,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,uDAAwD,CAAC,UAAW,kBAAmB,gBAAiB,iBAAkB,yBAA0B,qCAAsC,0BAA2B,4BAA6BJ,GAC5QA,IAAzBD,EAASA,GAAUO,MAAsBC,GAAKR,EAAOQ,IAAM,GAAIR,EAAOQ,GAAGC,iBAAmBT,EAAOQ,GAAGC,kBAAoB,GAAIT,EAAOQ,GAAGC,iBAAiBC,SAAWV,EAAOQ,GAAGC,iBAAiBC,UAAY,GAAIV,EAAOQ,GAAGC,iBAAiBC,SAASC,gBAAkB,IAAKX,EAAOQ,GAAGI,OAAQZ,EAAOQ,GAAGK,KAAMb,EAAOQ,GAAGM,MAAOd,EAAOQ,GAAGE,SAASK,KAAMf,EAAOQ,GAAGE,SAAS,oBAAqBV,EAAOQ,GAAGE,SAASM,MAAOhB,EAAOQ,GAAGE,SAASO,QAHhb,CAIEC,KAAM,SAAUhB,EAASU,EAAQC,EAAMC,EAAOC,EAAMJ,EAAiBK,EAAOC,GAAU,aAKpF,IAAIE,EAAoD,WACpD,SAASA,IACLD,KAAKE,MAAQ,UACbF,KAAKG,KAAO,cACZH,KAAKI,MAAQ,GASjB,OAPAH,EAAmCI,WAAa,CAC5C,CAAEC,KAAMX,EAAKY,UAAWC,KAAM,CAAC,CACnBC,SAAU,wCACVC,SAAU,yiDACVC,OAAQ,CAAC,oMAGlBV,EAb4C,GAmBnDW,EAAgD,WAChD,SAASA,KAST,OAPAA,EAA+BP,WAAa,CACxC,CAAEC,KAAMX,EAAKY,UAAWC,KAAM,CAAC,CACnBC,SAAU,oCACVC,SAAU,gCACVC,OAAQ,CAAC,wCAGlBC,EAVwC,GAa/CC,EAAW,CACXZ,EACAW,GAEAE,EAA+C,WAC/C,SAASA,KAgBT,OAdAA,EAA8BT,WAAa,CACvC,CAAEC,KAAMX,EAAKoB,SAAUP,KAAM,CAAC,CAClBQ,QAAS,CACLtB,EAAOuB,aACPpB,EAAKqB,cACLzB,EAAgB0B,yBAChBrB,EAAMsB,eACNrB,EAAOsB,gBACPzB,EAAM0B,aAEVC,aAAcV,EACd7B,QAAS6B,MAGlBC,EAjBuC,GAwBlD9B,EAAQiB,mCAAqCA,EAC7CjB,EAAQ4B,+BAAiCA,EACzC5B,EAAQ8B,8BAAgCA,EAExCU,OAAOC,eAAezC,EAAS,aAAc,CAAEoB,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@angular/forms'), require('@angular/material/card'), require('@angular/material/progress-spinner'), require('@angular/material/radio'), require('@angular/material/slider')) :\n    typeof define === 'function' && define.amd ? define('@angular/material-examples/material/progress-spinner', ['exports', '@angular/common', '@angular/core', '@angular/forms', '@angular/material/card', '@angular/material/progress-spinner', '@angular/material/radio', '@angular/material/slider'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.materialExamples = global.ng.materialExamples || {}, global.ng.materialExamples.material = global.ng.materialExamples.material || {}, global.ng.materialExamples.material.progressSpinner = {}), global.ng.common, global.ng.core, global.ng.forms, global.ng.material.card, global.ng.material['progress-spinner'], global.ng.material.radio, global.ng.material.slider));\n}(this, function (exports, common, core, forms, card, progressSpinner, radio, slider) { 'use strict';\n\n    /**\n     * @title Configurable progress spinner\n     */\n    var ProgressSpinnerConfigurableExample = /** @class */ (function () {\n        function ProgressSpinnerConfigurableExample() {\n            this.color = 'primary';\n            this.mode = 'determinate';\n            this.value = 50;\n        }\n        ProgressSpinnerConfigurableExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'progress-spinner-configurable-example',\n                        template: \"<mat-card>\\n  <mat-card-content>\\n    <h2 class=\\\"example-h2\\\">Progress spinner configuration</h2>\\n\\n    <section class=\\\"example-section\\\">\\n      <label class=\\\"example-margin\\\">Color:</label>\\n      <mat-radio-group [(ngModel)]=\\\"color\\\">\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"primary\\\">\\n          Primary\\n        </mat-radio-button>\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"accent\\\">\\n          Accent\\n        </mat-radio-button>\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"warn\\\">\\n          Warn\\n        </mat-radio-button>\\n      </mat-radio-group>\\n    </section>\\n\\n    <section class=\\\"example-section\\\">\\n      <label class=\\\"example-margin\\\">Mode:</label>\\n      <mat-radio-group [(ngModel)]=\\\"mode\\\">\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"determinate\\\">\\n          Determinate\\n        </mat-radio-button>\\n        <mat-radio-button class=\\\"example-margin\\\" value=\\\"indeterminate\\\">\\n          Indeterminate\\n        </mat-radio-button>\\n      </mat-radio-group>\\n    </section>\\n\\n    <section class=\\\"example-section\\\" *ngIf=\\\"mode === 'determinate'\\\">\\n      <label class=\\\"example-margin\\\">Progress:</label>\\n      <mat-slider class=\\\"example-margin\\\" [(ngModel)]=\\\"value\\\"></mat-slider>\\n    </section>\\n  </mat-card-content>\\n</mat-card>\\n<mat-card>\\n  <mat-card-content>\\n    <h2 class=\\\"example-h2\\\">Result</h2>\\n\\n    <mat-progress-spinner\\n        class=\\\"example-margin\\\"\\n        [color]=\\\"color\\\"\\n        [mode]=\\\"mode\\\"\\n        [value]=\\\"value\\\">\\n    </mat-progress-spinner>\\n  </mat-card-content>\\n</mat-card>\\n\",\n                        styles: [\".example-h2 {\\n  margin: 10px;\\n}\\n\\n.example-section {\\n  display: flex;\\n  align-content: center;\\n  align-items: center;\\n  height: 60px;\\n}\\n\\n.example-margin {\\n  margin: 0 10px;\\n}\\n\"]\n                    }] }\n        ];\n        return ProgressSpinnerConfigurableExample;\n    }());\n\n    /**\n     * @title Basic progress-spinner\n     */\n    var ProgressSpinnerOverviewExample = /** @class */ (function () {\n        function ProgressSpinnerOverviewExample() {\n        }\n        ProgressSpinnerOverviewExample.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'progress-spinner-overview-example',\n                        template: \"<mat-spinner></mat-spinner>\\n\",\n                        styles: [\"/** No CSS for this example */\\n\"]\n                    }] }\n        ];\n        return ProgressSpinnerOverviewExample;\n    }());\n\n    var EXAMPLES = [\n        ProgressSpinnerConfigurableExample,\n        ProgressSpinnerOverviewExample,\n    ];\n    var ProgressSpinnerExamplesModule = /** @class */ (function () {\n        function ProgressSpinnerExamplesModule() {\n        }\n        ProgressSpinnerExamplesModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [\n                            common.CommonModule,\n                            card.MatCardModule,\n                            progressSpinner.MatProgressSpinnerModule,\n                            radio.MatRadioModule,\n                            slider.MatSliderModule,\n                            forms.FormsModule,\n                        ],\n                        declarations: EXAMPLES,\n                        exports: EXAMPLES,\n                    },] }\n        ];\n        return ProgressSpinnerExamplesModule;\n    }());\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ProgressSpinnerConfigurableExample = ProgressSpinnerConfigurableExample;\n    exports.ProgressSpinnerOverviewExample = ProgressSpinnerOverviewExample;\n    exports.ProgressSpinnerExamplesModule = ProgressSpinnerExamplesModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n//# sourceMappingURL=material-examples-material-progress-spinner.umd.js.map\n"]}
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("tslib"),require("@angular/common"),require("@angular/core"),require("@angular/forms"),require("@angular/material/button"),require("@angular/material/checkbox"),require("@angular/material/form-field"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/radio"),require("@angular/material/select"),require("@angular/cdk/a11y"),require("@angular/cdk/coercion"),require("rxjs")):"function"==typeof define&&define.amd?define("@angular/material-examples/material/form-field",["exports","tslib","@angular/common","@angular/core","@angular/forms","@angular/material/button","@angular/material/checkbox","@angular/material/form-field","@angular/material/icon","@angular/material/input","@angular/material/radio","@angular/material/select","@angular/cdk/a11y","@angular/cdk/coercion","rxjs"],t):t(((e=e||self).ng=e.ng||{},e.ng.materialExamples=e.ng.materialExamples||{},e.ng.materialExamples.material=e.ng.materialExamples.material||{},e.ng.materialExamples.material.formField={}),e.tslib,e.ng.common,e.ng.core,e.ng.forms,e.ng.material.button,e.ng.material.checkbox,e.ng.material.formField,e.ng.material.icon,e.ng.material.input,e.ng.material.radio,e.ng.material.select,e.ng.cdk.a11y,e.ng.cdk.coercion,e.rxjs)}(this,function(e,t,n,a,r,o,i,l,m,p,s,u,c,d,f){"use strict";var h=function(){function e(){}return e.decorators=[{type:a.Component,args:[{selector:"form-field-appearance-example",template:'<p>\n  <mat-form-field appearance="legacy">\n    <mat-label>Legacy form field</mat-label>\n    <input matInput placeholder="Placeholder">\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n    <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n<p>\n  <mat-form-field appearance="standard">\n    <mat-label>Standard form field</mat-label>\n    <input matInput placeholder="Placeholder">\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n    <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n<p>\n  <mat-form-field appearance="fill">\n    <mat-label>Fill form field</mat-label>\n    <input matInput placeholder="Placeholder">\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n    <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n<p>\n  <mat-form-field appearance="outline">\n    <mat-label>Outline form field</mat-label>\n    <input matInput placeholder="Placeholder">\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n    <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n',styles:["/** No CSS for this example */\n"]}]}],e}(),g=function(){function e(){}return e.decorators=[{type:a.Component,args:[{selector:"form-field-custom-control-example",template:'<mat-form-field>\n  <example-tel-input placeholder="Phone number" required></example-tel-input>\n  <mat-icon matSuffix>phone</mat-icon>\n  <mat-hint>Include area code</mat-hint>\n</mat-form-field>\n',styles:["/** No CSS for this example */\n"]}]}],e}(),x=function x(e,t,n){this.area=e,this.exchange=t,this.subscriber=n},b=function(){function e(t,n,a,r){var o=this;this._focusMonitor=n,this._elementRef=a,this.ngControl=r,this.stateChanges=new f.Subject,this.focused=!1,this.errorState=!1,this.controlType="example-tel-input",this.id="example-tel-input-"+e.nextId++,this.describedBy="",this.onChange=function(e){},this.onTouched=function(){},this._required=!1,this._disabled=!1,this.parts=t.group({area:"",exchange:"",subscriber:""}),n.monitor(a,!0).subscribe(function(e){o.focused&&!e&&o.onTouched(),o.focused=!!e,o.stateChanges.next()}),null!=this.ngControl&&(this.ngControl.valueAccessor=this)}return Object.defineProperty(e.prototype,"empty",{get:function(){var e=this.parts.value;return!e.area&&!e.exchange&&!e.subscriber},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"shouldLabelFloat",{get:function(){return this.focused||!this.empty},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"placeholder",{get:function(){return this._placeholder},set:function(e){this._placeholder=e,this.stateChanges.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"required",{get:function(){return this._required},set:function(e){this._required=d.coerceBooleanProperty(e),this.stateChanges.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"disabled",{get:function(){return this._disabled},set:function(e){this._disabled=d.coerceBooleanProperty(e),this._disabled?this.parts.disable():this.parts.enable(),this.stateChanges.next()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"value",{get:function(){var e=this.parts.value,t=e.area,n=e.exchange,a=e.subscriber;return 3===t.length&&3===n.length&&4===a.length?new x(t,n,a):null},set:function(e){var t=e||new x("","","");this.parts.setValue({area:t.area,exchange:t.exchange,subscriber:t.subscriber}),this.stateChanges.next()},enumerable:!0,configurable:!0}),e.prototype.ngOnDestroy=function(){this.stateChanges.complete(),this._focusMonitor.stopMonitoring(this._elementRef)},e.prototype.setDescribedByIds=function(e){this.describedBy=e.join(" ")},e.prototype.onContainerClick=function(e){"input"!=e.target.tagName.toLowerCase()&&this._elementRef.nativeElement.querySelector("input").focus()},e.prototype.writeValue=function(e){this.value=e},e.prototype.registerOnChange=function(e){this.onChange=e},e.prototype.registerOnTouched=function(e){this.onTouched=e},e.prototype.setDisabledState=function(e){this.disabled=e},e.prototype._handleInput=function(){this.onChange(this.parts.value)},e.nextId=0,e.decorators=[{type:a.Component,args:[{selector:"example-tel-input",template:'<div [formGroup]="parts" class="example-tel-input-container">\n  <input class="example-tel-input-element" formControlName="area" size="3" aria-label="Area code" (input)="_handleInput()">\n  <span class="example-tel-input-spacer">&ndash;</span>\n  <input class="example-tel-input-element" formControlName="exchange" size="3" aria-label="Exchange code" (input)="_handleInput()">\n  <span class="example-tel-input-spacer">&ndash;</span>\n  <input class="example-tel-input-element" formControlName="subscriber" size="4" aria-label="Subscriber number" (input)="_handleInput()">\n</div>\n',providers:[{provide:l.MatFormFieldControl,useExisting:e}],host:{"[class.example-floating]":"shouldLabelFloat","[id]":"id","[attr.aria-describedby]":"describedBy"},styles:[".example-tel-input-container {\n  display: flex;\n}\n\n.example-tel-input-element {\n  border: none;\n  background: none;\n  padding: 0;\n  outline: none;\n  font: inherit;\n  text-align: center;\n}\n\n.example-tel-input-spacer {\n  opacity: 0;\n  transition: opacity 200ms;\n}\n\n:host.example-floating .example-tel-input-spacer {\n  opacity: 1;\n}\n"]}]}],e.ctorParameters=function(){return[{type:r.FormBuilder},{type:c.FocusMonitor},{type:a.ElementRef},{type:r.NgControl,decorators:[{type:a.Optional},{type:a.Self}]}]},e.propDecorators={placeholder:[{type:a.Input}],required:[{type:a.Input}],disabled:[{type:a.Input}],value:[{type:a.Input}]},e}(),y=function(){function e(){this.email=new r.FormControl("",[r.Validators.required,r.Validators.email])}return e.prototype.getErrorMessage=function(){return this.email.hasError("required")?"You must enter a value":this.email.hasError("email")?"Not a valid email":""},e.decorators=[{type:a.Component,args:[{selector:"form-field-error-example",template:'<div class="example-container">\n  <mat-form-field>\n    <input matInput placeholder="Enter your email" [formControl]="email" required>\n    <mat-error *ngIf="email.invalid">{{getErrorMessage()}}</mat-error>\n  </mat-form-field>\n</div>\n',styles:[".example-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.example-container > * {\n  width: 100%;\n}\n"]}]}],e}(),v=function(){function e(){}return e.decorators=[{type:a.Component,args:[{selector:"form-field-hint-example",template:'<div class="example-container">\n  <mat-form-field hintLabel="Max 10 characters">\n    <input matInput #input maxlength="10" placeholder="Enter some input">\n    <mat-hint align="end">{{input.value?.length || 0}}/10</mat-hint>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-select placeholder="Select me">\n      <mat-option value="option">Option</mat-option>\n    </mat-select>\n    <mat-hint align="end">Here\'s the dropdown arrow ^</mat-hint>\n  </mat-form-field>\n</div>\n',styles:[".example-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.example-container > * {\n  width: 100%;\n}\n"]}]}],e}(),C=function(){function e(e){this.options=e.group({hideRequired:!1,floatLabel:"auto"})}return e.decorators=[{type:a.Component,args:[{selector:"form-field-label-example",template:'<div class="example-container">\n  <form class="example-container" [formGroup]="options">\n    <mat-checkbox formControlName="hideRequired">Hide required marker</mat-checkbox>\n    <div>\n      <label>Float label: </label>\n      <mat-radio-group formControlName="floatLabel">\n        <mat-radio-button value="auto">Auto</mat-radio-button>\n        <mat-radio-button value="always">Always</mat-radio-button>\n        <mat-radio-button value="never">Never</mat-radio-button>\n      </mat-radio-group>\n    </div>\n  </form>\n\n  <mat-form-field\n      [hideRequiredMarker]="options.value.hideRequired"\n      [floatLabel]="options.value.floatLabel">\n    <input matInput placeholder="Simple placeholder" required>\n  </mat-form-field>\n\n  <mat-form-field [floatLabel]="options.value.floatLabel">\n    <mat-label>Both a label and a placeholder</mat-label>\n    <input matInput placeholder="Simple placeholder">\n  </mat-form-field>\n\n  <mat-form-field\n      [hideRequiredMarker]="options.value.hideRequired"\n      [floatLabel]="options.value.floatLabel">\n    <mat-select required>\n      <mat-option>-- None --</mat-option>\n      <mat-option value="option">Option</mat-option>\n    </mat-select>\n    <mat-label><mat-icon>favorite</mat-icon> <b> Fancy</b> <i> label</i></mat-label>\n  </mat-form-field>\n</div>\n',styles:[".example-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.example-container > * {\n  width: 100%;\n}\n\n.example-container form {\n  margin-bottom: 20px;\n}\n\n.example-container form > * {\n  margin: 5px 0;\n}\n\n.example-container .mat-radio-button {\n  margin: 0 12px;\n}\n"]}]}],e.ctorParameters=function(){return[{type:r.FormBuilder}]},e}(),F=function(){function e(){}return e.decorators=[{type:a.Component,args:[{selector:"form-field-overview-example",template:'<div class="example-container">\n  <mat-form-field>\n    <input matInput placeholder="Input">\n  </mat-form-field>\n\n  <mat-form-field>\n    <textarea matInput placeholder="Textarea"></textarea>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-select placeholder="Select">\n      <mat-option value="option">Option</mat-option>\n    </mat-select>\n  </mat-form-field>\n</div>\n',styles:[".example-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.example-container > * {\n  width: 100%;\n}\n"]}]}],e}(),q=function(){function e(){this.hide=!0}return e.decorators=[{type:a.Component,args:[{selector:"form-field-prefix-suffix-example",template:'<div class="example-container">\n  <mat-form-field>\n    <input matInput placeholder="Enter your password" [type]="hide ? \'password\' : \'text\'">\n    <button mat-icon-button matSuffix (click)="hide = !hide" [attr.aria-label]="\'Hide password\'" [attr.aria-pressed]="hide">\n    <mat-icon>{{hide ? \'visibility_off\' : \'visibility\'}}</mat-icon>\n    </button>\n  </mat-form-field>\n\n  <mat-form-field>\n    <input matInput placeholder="Amount" type="number" class="example-right-align">\n    <span matPrefix>$&nbsp;</span>\n    <span matSuffix>.00</span>\n  </mat-form-field>\n</div>\n',styles:[".example-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.example-container > * {\n  width: 100%;\n}\n\n.example-right-align {\n  text-align: right;\n}\n\ninput.example-right-align::-webkit-outer-spin-button,\ninput.example-right-align::-webkit-inner-spin-button {\n  display: none;\n}\n\ninput.example-right-align {\n  -moz-appearance: textfield;\n}\n"]}]}],e}(),M=function(){function e(e){this.options=e.group({color:"primary",fontSize:[16,r.Validators.min(10)]})}return e.prototype.getFontSize=function(){return Math.max(10,this.options.value.fontSize)},e.decorators=[{type:a.Component,args:[{selector:"form-field-theming-example",template:'<form class="example-container" [formGroup]="options" [style.fontSize.px]="getFontSize()">\n  <mat-form-field [color]="options.value.color">\n    <mat-select placeholder="Color" formControlName="color">\n      <mat-option value="primary">Primary</mat-option>\n      <mat-option value="accent">Accent</mat-option>\n      <mat-option value="warn">Warn</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field [color]="options.value.color">\n    <input matInput type="number" placeholder="Font size (px)" formControlName="fontSize" min="10">\n    <mat-error *ngIf="options.get(\'fontSize\')?.invalid">Min size: 10px</mat-error>\n  </mat-form-field>\n</form>\n',styles:[".example-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.example-container > * {\n  width: 100%;\n}\n"]}]}],e.ctorParameters=function(){return[{type:r.FormBuilder}]},e}(),I=[h,g,y,v,C,F,q,M],S=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{imports:[n.CommonModule,o.MatButtonModule,i.MatCheckboxModule,l.MatFormFieldModule,m.MatIconModule,p.MatInputModule,s.MatRadioModule,u.MatSelectModule,r.ReactiveFormsModule],declarations:t.__spread(I,[b]),exports:I}]}],e}();e.FormFieldAppearanceExample=h,e.FormFieldCustomControlExample=g,e.FormFieldErrorExample=y,e.FormFieldHintExample=v,e.FormFieldLabelExample=C,e.FormFieldOverviewExample=F,e.FormFieldPrefixSuffixExample=q,e.FormFieldThemingExample=M,e.MyTelInput=b,e.FormFieldExamplesModule=S,Object.defineProperty(e,"__esModule",{value:!0})});
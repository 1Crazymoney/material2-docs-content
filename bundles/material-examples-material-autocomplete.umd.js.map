{"version":3,"file":"material-examples-material-autocomplete.umd.js","sources":["../../../../../../../src/material-examples/material/autocomplete/autocomplete-auto-active-first-option/autocomplete-auto-active-first-option-example.ts","../../../../../../../src/material-examples/material/autocomplete/autocomplete-display/autocomplete-display-example.ts","../../../../../../../src/material-examples/material/autocomplete/autocomplete-filter/autocomplete-filter-example.ts","../../../../../../../src/material-examples/material/autocomplete/autocomplete-optgroup/autocomplete-optgroup-example.ts","../../../../../../../src/material-examples/material/autocomplete/autocomplete-overview/autocomplete-overview-example.ts","../../../../../../../src/material-examples/material/autocomplete/autocomplete-plain-input/autocomplete-plain-input-example.ts","../../../../../../../src/material-examples/material/autocomplete/autocomplete-simple/autocomplete-simple-example.ts","../../../../../../../src/material-examples/material/autocomplete/module.ts","../../../../../../../src/material-examples/material/autocomplete/index.ts"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n/**\n * @title Highlight the first autocomplete option\n */\n@Component({\n  selector: 'autocomplete-auto-active-first-option-example',\n  templateUrl: 'autocomplete-auto-active-first-option-example.html',\n  styleUrls: ['autocomplete-auto-active-first-option-example.css'],\n})\nexport class AutocompleteAutoActiveFirstOptionExample implements OnInit {\n  myControl = new FormControl();\n  options: string[] = ['One', 'Two', 'Three'];\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\nexport interface User {\n  name: string;\n}\n\n/**\n * @title Display value autocomplete\n */\n@Component({\n  selector: 'autocomplete-display-example',\n  templateUrl: 'autocomplete-display-example.html',\n  styleUrls: ['autocomplete-display-example.css'],\n})\nexport class AutocompleteDisplayExample implements OnInit {\n  myControl = new FormControl();\n  options: User[] = [\n    {name: 'Mary'},\n    {name: 'Shelley'},\n    {name: 'Igor'}\n  ];\n  filteredOptions: Observable<User[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => typeof value === 'string' ? value : value.name),\n        map(name => name ? this._filter(name) : this.options.slice())\n      );\n  }\n\n  displayFn(user?: User): string | undefined {\n    return user ? user.name : undefined;\n  }\n\n  private _filter(name: string): User[] {\n    const filterValue = name.toLowerCase();\n\n    return this.options.filter(option => option.name.toLowerCase().indexOf(filterValue) === 0);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\n/**\n * @title Filter autocomplete\n */\n@Component({\n  selector: 'autocomplete-filter-example',\n  templateUrl: 'autocomplete-filter-example.html',\n  styleUrls: ['autocomplete-filter-example.css'],\n})\nexport class AutocompleteFilterExample implements OnInit {\n  myControl = new FormControl();\n  options: string[] = ['One', 'Two', 'Three'];\n  filteredOptions: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredOptions = this.myControl.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filter(value))\n      );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().includes(filterValue));\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {startWith, map} from 'rxjs/operators';\n\nexport interface StateGroup {\n  letter: string;\n  names: string[];\n}\n\nexport const _filter = (opt: string[], value: string): string[] => {\n  const filterValue = value.toLowerCase();\n\n  return opt.filter(item => item.toLowerCase().indexOf(filterValue) === 0);\n};\n\n/**\n * @title Option groups autocomplete\n */\n@Component({\n  selector: 'autocomplete-optgroup-example',\n  templateUrl: './autocomplete-optgroup-example.html',\n  styleUrls: ['./autocomplete-optgroup-example.css'],\n})\n\nexport class AutocompleteOptgroupExample implements OnInit {\n  stateForm: FormGroup = this._formBuilder.group({\n    stateGroup: '',\n  });\n\n  stateGroups: StateGroup[] = [{\n    letter: 'A',\n    names: ['Alabama', 'Alaska', 'Arizona', 'Arkansas']\n  }, {\n    letter: 'C',\n    names: ['California', 'Colorado', 'Connecticut']\n  }, {\n    letter: 'D',\n    names: ['Delaware']\n  }, {\n    letter: 'F',\n    names: ['Florida']\n  }, {\n    letter: 'G',\n    names: ['Georgia']\n  }, {\n    letter: 'H',\n    names: ['Hawaii']\n  }, {\n    letter: 'I',\n    names: ['Idaho', 'Illinois', 'Indiana', 'Iowa']\n  }, {\n    letter: 'K',\n    names: ['Kansas', 'Kentucky']\n  }, {\n    letter: 'L',\n    names: ['Louisiana']\n  }, {\n    letter: 'M',\n    names: ['Maine', 'Maryland', 'Massachusetts', 'Michigan',\n      'Minnesota', 'Mississippi', 'Missouri', 'Montana']\n  }, {\n    letter: 'N',\n    names: ['Nebraska', 'Nevada', 'New Hampshire', 'New Jersey',\n      'New Mexico', 'New York', 'North Carolina', 'North Dakota']\n  }, {\n    letter: 'O',\n    names: ['Ohio', 'Oklahoma', 'Oregon']\n  }, {\n    letter: 'P',\n    names: ['Pennsylvania']\n  }, {\n    letter: 'R',\n    names: ['Rhode Island']\n  }, {\n    letter: 'S',\n    names: ['South Carolina', 'South Dakota']\n  }, {\n    letter: 'T',\n    names: ['Tennessee', 'Texas']\n  }, {\n    letter: 'U',\n    names: ['Utah']\n  }, {\n    letter: 'V',\n    names: ['Vermont', 'Virginia']\n  }, {\n    letter: 'W',\n    names: ['Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\n  }];\n\n  stateGroupOptions: Observable<StateGroup[]>;\n\n  constructor(private _formBuilder: FormBuilder) {}\n\n  ngOnInit() {\n    this.stateGroupOptions = this.stateForm.get('stateGroup')!.valueChanges\n      .pipe(\n        startWith(''),\n        map(value => this._filterGroup(value))\n      );\n  }\n\n  private _filterGroup(value: string): StateGroup[] {\n    if (value) {\n      return this.stateGroups\n        .map(group => ({letter: group.letter, names: _filter(group.names, value)}))\n        .filter(group => group.names.length > 0);\n    }\n\n    return this.stateGroups;\n  }\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {map, startWith} from 'rxjs/operators';\n\nexport interface State {\n  flag: string;\n  name: string;\n  population: string;\n}\n\n/**\n * @title Autocomplete overview\n */\n@Component({\n  selector: 'autocomplete-overview-example',\n  templateUrl: 'autocomplete-overview-example.html',\n  styleUrls: ['autocomplete-overview-example.css'],\n})\nexport class AutocompleteOverviewExample {\n  stateCtrl = new FormControl();\n  filteredStates: Observable<State[]>;\n\n  states: State[] = [\n    {\n      name: 'Arkansas',\n      population: '2.978M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\n    },\n    {\n      name: 'California',\n      population: '39.14M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\n    },\n    {\n      name: 'Florida',\n      population: '20.27M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\n    },\n    {\n      name: 'Texas',\n      population: '27.47M',\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\n    }\n  ];\n\n  constructor() {\n    this.filteredStates = this.stateCtrl.valueChanges\n      .pipe(\n        startWith(''),\n        map(state => state ? this._filterStates(state) : this.states.slice())\n      );\n  }\n\n  private _filterStates(value: string): State[] {\n    const filterValue = value.toLowerCase();\n\n    return this.states.filter(state => state.name.toLowerCase().indexOf(filterValue) === 0);\n  }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormControl} from '@angular/forms';\nimport {Observable} from 'rxjs';\nimport {startWith, map} from 'rxjs/operators';\n\n/**\n * @title Plain input autocomplete\n */\n@Component({\n  selector: 'autocomplete-plain-input-example',\n  templateUrl: 'autocomplete-plain-input-example.html',\n  styleUrls: ['autocomplete-plain-input-example.css'],\n})\nexport class AutocompletePlainInputExample implements OnInit {\n  control = new FormControl();\n  streets: string[] = ['Champs-ÃlysÃ©es', 'Lombard Street', 'Abbey Road', 'Fifth Avenue'];\n  filteredStreets: Observable<string[]>;\n\n  ngOnInit() {\n    this.filteredStreets = this.control.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = this._normalizeValue(value);\n    return this.streets.filter(street => this._normalizeValue(street).includes(filterValue));\n  }\n\n  private _normalizeValue(value: string): string {\n    return value.toLowerCase().replace(/\\s/g, '');\n  }\n}\n","import {Component} from '@angular/core';\nimport {FormControl} from '@angular/forms';\n\n/**\n * @title Simple autocomplete\n */\n@Component({\n  selector: 'autocomplete-simple-example',\n  templateUrl: 'autocomplete-simple-example.html',\n  styleUrls: ['autocomplete-simple-example.css'],\n})\nexport class AutocompleteSimpleExample {\n  myControl = new FormControl();\n  options: string[] = ['One', 'Two', 'Three'];\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {\n  AutocompleteAutoActiveFirstOptionExample\n} from './autocomplete-auto-active-first-option/autocomplete-auto-active-first-option-example';\nimport {AutocompleteDisplayExample} from './autocomplete-display/autocomplete-display-example';\nimport {AutocompleteFilterExample} from './autocomplete-filter/autocomplete-filter-example';\nimport {AutocompleteOptgroupExample} from './autocomplete-optgroup/autocomplete-optgroup-example';\nimport {AutocompleteOverviewExample} from './autocomplete-overview/autocomplete-overview-example';\nimport {\n  AutocompletePlainInputExample\n} from './autocomplete-plain-input/autocomplete-plain-input-example';\nimport {AutocompleteSimpleExample} from './autocomplete-simple/autocomplete-simple-example';\n\nexport {\n  AutocompleteAutoActiveFirstOptionExample,\n  AutocompleteDisplayExample,\n  AutocompleteFilterExample,\n  AutocompleteOptgroupExample,\n  AutocompleteOverviewExample,\n  AutocompletePlainInputExample,\n  AutocompleteSimpleExample,\n};\n\nconst EXAMPLES = [\n  AutocompleteAutoActiveFirstOptionExample,\n  AutocompleteDisplayExample,\n  AutocompleteFilterExample,\n  AutocompleteOptgroupExample,\n  AutocompleteOverviewExample,\n  AutocompletePlainInputExample,\n  AutocompleteSimpleExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSlideToggleModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n})\nexport class AutocompleteExamplesModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './module';\n"],"names":["FormControl","startWith","map","Component","FormBuilder","NgModule","CommonModule","MatAutocompleteModule","MatFormFieldModule","MatInputModule","MatSlideToggleModule","FormsModule","ReactiveFormsModule"],"mappings":"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"}
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/cdk/tree"),require("@angular/core"),require("@angular/material/button"),require("@angular/material/icon"),require("@angular/cdk/collections")):"function"==typeof define&&define.amd?define("@angular/material-examples/cdk/tree",["exports","@angular/cdk/tree","@angular/core","@angular/material/button","@angular/material/icon","@angular/cdk/collections"],n):n(((e=e||self).ng=e.ng||{},e.ng.materialExamples=e.ng.materialExamples||{},e.ng.materialExamples.cdk=e.ng.materialExamples.cdk||{},e.ng.materialExamples.cdk.tree={}),e.ng.cdk.tree,e.ng.core,e.ng.material.button,e.ng.material.icon,e.ng.cdk.collections)}(this,function(e,n,t,a,r,o){"use strict";var l=[{name:"Fruit",expandable:!0,level:0},{name:"Apple",expandable:!1,level:1},{name:"Banana",expandable:!1,level:1},{name:"Fruit loops",expandable:!1,level:1},{name:"Vegetables",expandable:!0,level:0},{name:"Green",expandable:!0,level:1},{name:"Broccoli",expandable:!1,level:2},{name:"Brussel sprouts",expandable:!1,level:2},{name:"Orange",expandable:!0,level:1},{name:"Pumpkins",expandable:!1,level:2},{name:"Carrots",expandable:!1,level:2}],d=function(){function e(){this.treeControl=new n.FlatTreeControl(function(e){return e.level},function(e){return e.expandable}),this.dataSource=new o.ArrayDataSource(l),this.hasChild=function(e,n){return n.expandable}}return e.prototype.getParentNode=function(e){for(var n=l.indexOf(e)-1;n>=0;n--)if(l[n].level===e.level-1)return l[n];return null},e.prototype.shouldRender=function(e){var n=this.getParentNode(e);return!n||n.isExpanded},e.decorators=[{type:t.Component,args:[{selector:"cdk-tree-flat-example",template:'<cdk-tree [dataSource]="dataSource" [treeControl]="treeControl">\n  \x3c!-- This is the tree node template for leaf nodes --\x3e\n  <cdk-tree-node *cdkTreeNodeDef="let node" cdkTreeNodePadding\n                 [style.display]="shouldRender(node) ? \'flex\' : \'none\'"\n                 class="example-tree-node">\n    \x3c!-- use a disabled button to provide padding for tree leaf --\x3e\n    <button mat-icon-button disabled></button>\n    {{node.name}}\n  </cdk-tree-node>\n  \x3c!-- This is the tree node template for expandable nodes --\x3e\n  <cdk-tree-node *cdkTreeNodeDef="let node; when: hasChild" cdkTreeNodePadding\n                 [style.display]="shouldRender(node) ? \'flex\' : \'none\'"\n                 class="example-tree-node">\n    <button mat-icon-button cdkTreeNodeToggle\n            [attr.aria-label]="\'toggle \' + node.filename"\n            (click)="node.isExpanded = !node.isExpanded"\n            [style.visibility]="node.expandable ? \'visible\' : \'hidden\'">\n      <mat-icon class="mat-icon-rtl-mirror">\n        {{treeControl.isExpanded(node) ? \'expand_more\' : \'chevron_right\'}}\n      </mat-icon>\n    </button>\n    {{node.name}}\n  </cdk-tree-node>\n</cdk-tree>\n',styles:[".example-tree-node {\n  display: flex;\n  align-items: center;\n}\n"]}]}],e}(),i=[{name:"Fruit",children:[{name:"Apple"},{name:"Banana"},{name:"Fruit loops"}]},{name:"Vegetables",children:[{name:"Green",children:[{name:"Broccoli"},{name:"Brussel sprouts"}]},{name:"Orange",children:[{name:"Pumpkins"},{name:"Carrots"}]}]}],s=function(){function e(){this.treeControl=new n.NestedTreeControl(function(e){return e.children}),this.dataSource=new o.ArrayDataSource(i),this.hasChild=function(e,n){return!!n.children&&n.children.length>0}}return e.decorators=[{type:t.Component,args:[{selector:"cdk-tree-nested-example",template:'<cdk-tree [dataSource]="dataSource" [treeControl]="treeControl">\n  \x3c!-- This is the tree node template for leaf nodes --\x3e\n  <cdk-nested-tree-node *cdkTreeNodeDef="let node" class="example-tree-node">\n    \x3c!-- use a disabled button to provide padding for tree leaf --\x3e\n    <button mat-icon-button disabled></button>\n    {{node.name}}\n  </cdk-nested-tree-node>\n  \x3c!-- This is the tree node template for expandable nodes --\x3e\n  <cdk-nested-tree-node *cdkTreeNodeDef="let node; when: hasChild" class="example-tree-node">\n    <button mat-icon-button [attr.aria-label]="\'toggle \' + node.name" cdkTreeNodeToggle>\n      <mat-icon class="mat-icon-rtl-mirror">\n        {{treeControl.isExpanded(node) ? \'expand_more\' : \'chevron_right\'}}\n      </mat-icon>\n    </button>\n    {{node.name}}\n    <div [class.example-tree-invisible]="!treeControl.isExpanded(node)">\n      <ng-container cdkTreeNodeOutlet></ng-container>\n    </div>\n  </cdk-nested-tree-node>\n</cdk-tree>\n',styles:[".example-tree-invisible {\n  display: none;\n}\n\n.example-tree ul,\n.example-tree li {\n  margin-top: 0;\n  margin-bottom: 0;\n  list-style-type: none;\n}\n.example-tree-node {\n  display: block;\n}\n\n.example-tree-node .example-tree-node {\n  padding-left: 40px;\n}\n"]}]}],e}(),c=[d,s],u=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{imports:[n.CdkTreeModule,a.MatButtonModule,r.MatIconModule],declarations:c,exports:c}]}],e}();e.CdkTreeFlatExample=d,e.CdkTreeNestedExample=s,e.CdkTreeExamplesModule=u,Object.defineProperty(e,"__esModule",{value:!0})});
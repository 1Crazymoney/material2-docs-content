{"version":3,"file":"cdk__tree.js","sources":["../../../../../../../src/material-examples/cdk/tree/cdk-tree-flat/cdk-tree-flat-example.ts","../../../../../../../src/material-examples/cdk/tree/cdk-tree-nested/cdk-tree-nested-example.ts","../../../../../../../src/material-examples/cdk/tree/module.ts","../../../../../../../src/material-examples/cdk/tree/index.ts"],"sourcesContent":["import {ArrayDataSource} from '@angular/cdk/collections';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {Component} from '@angular/core';\n\n\nconst TREE_DATA: ExampleFlatNode[] = [\n  {\n    name: 'Fruit',\n    expandable: true,\n    level: 0,\n  }, {\n    name: 'Apple',\n    expandable: false,\n    level: 1,\n  }, {\n    name: 'Banana',\n    expandable: false,\n    level: 1,\n  }, {\n    name: 'Fruit loops',\n    expandable: false,\n    level: 1,\n  }, {\n    name: 'Vegetables',\n    expandable: true,\n    level: 0,\n  }, {\n    name: 'Green',\n    expandable: true,\n    level: 1,\n  }, {\n    name: 'Broccoli',\n    expandable: false,\n    level: 2,\n  }, {\n    name: 'Brussel sprouts',\n    expandable: false,\n    level: 2,\n  }, {\n    name: 'Orange',\n    expandable: true,\n    level: 1,\n  }, {\n    name: 'Pumpkins',\n    expandable: false,\n    level: 2,\n  }, {\n    name: 'Carrots',\n    expandable: false,\n    level: 2,\n  }\n];\n\n/** Flat node with expandable and level information */\ninterface ExampleFlatNode {\n  expandable: boolean;\n  name: string;\n  level: number;\n  isExpanded?: boolean;\n}\n\n/**\n * @title Tree with flat nodes\n */\n@Component({\n  selector: 'cdk-tree-flat-example',\n  templateUrl: 'cdk-tree-flat-example.html',\n  styleUrls: ['cdk-tree-flat-example.css'],\n})\nexport class CdkTreeFlatExample {\n  treeControl = new FlatTreeControl<ExampleFlatNode>(\n      node => node.level, node => node.expandable);\n\n  dataSource = new ArrayDataSource(TREE_DATA);\n\n  hasChild = (_: number, node: ExampleFlatNode) => node.expandable;\n\n  getParentNode(node: ExampleFlatNode) {\n    const nodeIndex = TREE_DATA.indexOf(node);\n\n    for (let i = nodeIndex - 1; i >= 0; i--) {\n      if (TREE_DATA[i].level === node.level - 1) {\n        return TREE_DATA[i];\n      }\n    }\n\n    return null;\n  }\n\n  shouldRender(node: ExampleFlatNode) {\n    const parent = this.getParentNode(node);\n    return !parent || parent.isExpanded;\n  }\n}\n","import {ArrayDataSource} from '@angular/cdk/collections';\nimport {Component} from '@angular/core';\nimport {NestedTreeControl} from '@angular/cdk/tree';\n\n/**\n * Food data with nested structure.\n * Each node has a name and an optiona list of children.\n */\ninterface FoodNode {\n  name: string;\n  children?: FoodNode[];\n}\n\nconst TREE_DATA: FoodNode[] = [\n  {\n    name: 'Fruit',\n    children: [\n      {name: 'Apple'},\n      {name: 'Banana'},\n      {name: 'Fruit loops'},\n    ]\n  }, {\n    name: 'Vegetables',\n    children: [\n      {\n        name: 'Green',\n        children: [\n          {name: 'Broccoli'},\n          {name: 'Brussel sprouts'},\n        ]\n      }, {\n        name: 'Orange',\n        children: [\n          {name: 'Pumpkins'},\n          {name: 'Carrots'},\n        ]\n      },\n    ]\n  },\n];\n\n/**\n * @title Tree with nested nodes\n */\n@Component({\n  selector: 'cdk-tree-nested-example',\n  templateUrl: 'cdk-tree-nested-example.html',\n  styleUrls: ['cdk-tree-nested-example.css'],\n})\nexport class CdkTreeNestedExample {\n  treeControl = new NestedTreeControl<FoodNode> (node => node.children);\n  dataSource = new ArrayDataSource(TREE_DATA);\n\n  hasChild = (_: number, node: FoodNode) => !!node.children && node.children.length > 0;\n}\n","import {CdkTreeModule} from '@angular/cdk/tree';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {CdkTreeFlatExample} from './cdk-tree-flat/cdk-tree-flat-example';\nimport {CdkTreeNestedExample} from './cdk-tree-nested/cdk-tree-nested-example';\n\nexport {\n  CdkTreeFlatExample,\n  CdkTreeNestedExample,\n};\n\nconst EXAMPLES = [\n  CdkTreeFlatExample,\n  CdkTreeNestedExample,\n];\n\n@NgModule({\n  imports: [\n    CdkTreeModule,\n    MatButtonModule,\n    MatIconModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n})\nexport class CdkTreeExamplesModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './module';\n"],"names":["TREE_DATA"],"mappings":"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"}
{"__symbolic":"module","version":4,"metadata":{"ɵangular_material_src_material_examples_material_tree_tree_a":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":47,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"initialize":[{"__symbolic":"method"}],"buildFileTree":[{"__symbolic":"method"}],"insertItem":[{"__symbolic":"method"}],"updateItem":[{"__symbolic":"method"}]}},"TreeChecklistExample":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":105,"character":1},"arguments":[{"selector":"tree-checklist-example","providers":[{"__symbolic":"reference","name":"ɵangular_material_src_material_examples_material_tree_tree_a"}],"template":"<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle matTreeNodePadding>\n    <button mat-icon-button disabled></button>\n    <mat-checkbox class=\"checklist-leaf-node\"\n                  [checked]=\"checklistSelection.isSelected(node)\"\n                  (change)=\"todoLeafItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\n  </mat-tree-node>\n\n  <mat-tree-node *matTreeNodeDef=\"let node; when: hasNoContent\" matTreeNodePadding>\n    <button mat-icon-button disabled></button>\n    <mat-form-field>\n      <input matInput #itemValue placeholder=\"New item...\">\n    </mat-form-field>\n    <button mat-button (click)=\"saveNode(node, itemValue.value)\">Save</button>\n  </mat-tree-node>\n\n  <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\n    <button mat-icon-button matTreeNodeToggle\n            [attr.aria-label]=\"'toggle ' + node.filename\">\n      <mat-icon class=\"mat-icon-rtl-mirror\">\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n      </mat-icon>\n    </button>\n    <mat-checkbox [checked]=\"descendantsAllSelected(node)\"\n                  [indeterminate]=\"descendantsPartiallySelected(node)\"\n                  (change)=\"todoItemSelectionToggle(node)\">{{node.item}}</mat-checkbox>\n    <button mat-icon-button (click)=\"addNewItem(node)\"><mat-icon>add</mat-icon></button>\n  </mat-tree-node>\n</mat-tree>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵangular_material_src_material_examples_material_tree_tree_a"}]}],"descendantsAllSelected":[{"__symbolic":"method"}],"descendantsPartiallySelected":[{"__symbolic":"method"}],"todoItemSelectionToggle":[{"__symbolic":"method"}],"todoLeafItemSelectionToggle":[{"__symbolic":"method"}],"checkAllParentsSelection":[{"__symbolic":"method"}],"checkRootNodeSelection":[{"__symbolic":"method"}],"getParentNode":[{"__symbolic":"method"}],"addNewItem":[{"__symbolic":"method"}],"saveNode":[{"__symbolic":"method"}]}},"ɵangular_material_src_material_examples_material_tree_tree_b":{"__symbolic":"class","members":{"initialData":[{"__symbolic":"method"}],"getChildren":[{"__symbolic":"method"}],"isExpandable":[{"__symbolic":"method"}]}},"TreeDynamicExample":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":115,"character":1},"arguments":[{"selector":"tree-dynamic-example","providers":[{"__symbolic":"reference","name":"ɵangular_material_src_material_examples_material_tree_tree_b"}],"template":"<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n    <button mat-icon-button disabled></button>\n    {{node.item}}\n  </mat-tree-node>\n  <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\n    <button mat-icon-button\n            [attr.aria-label]=\"'toggle ' + node.filename\" matTreeNodeToggle>\n      <mat-icon class=\"mat-icon-rtl-mirror\">\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n      </mat-icon>\n    </button>\n    {{node.item}}\n    <mat-progress-bar *ngIf=\"node.isLoading\"\n                      mode=\"indeterminate\"\n                      class=\"example-tree-progress-bar\"></mat-progress-bar>\n  </mat-tree-node>\n</mat-tree>\n","styles":[".example-tree-progress-bar {\n  margin-left: 30px;\n}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵangular_material_src_material_examples_material_tree_tree_b"}]}]}},"TreeFlatOverviewExample":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":51,"character":1},"arguments":[{"selector":"tree-flat-overview-example","template":"<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n  <!-- This is the tree node template for leaf nodes -->\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n    <!-- use a disabled button to provide padding for tree leaf -->\n    <button mat-icon-button disabled></button>\n    {{node.name}}\n  </mat-tree-node>\n  <!-- This is the tree node template for expandable nodes -->\n  <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n    <button mat-icon-button matTreeNodeToggle\n            [attr.aria-label]=\"'toggle ' + node.name\">\n      <mat-icon class=\"mat-icon-rtl-mirror\">\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n      </mat-icon>\n    </button>\n    {{node.name}}\n  </mat-tree-node>\n</mat-tree>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]}},"ɵangular_material_src_material_examples_material_tree_tree_c":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":39,"character":1}}],"members":{"initialize":[{"__symbolic":"method"}],"loadMore":[{"__symbolic":"method"}],"_generateNode":[{"__symbolic":"method"}]}},"TreeLoadmoreExample":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":94,"character":1},"arguments":[{"selector":"tree-loadmore-example","providers":[{"__symbolic":"reference","name":"ɵangular_material_src_material_examples_material_tree_tree_c"}],"template":"<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n  <!-- Leaf node -->\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n    <button mat-icon-button disabled></button>\n    {{node.item}}\n  </mat-tree-node>\n\n  <!-- expandable node -->\n  <mat-tree-node *matTreeNodeDef=\"let node; when: hasChild\" matTreeNodePadding>\n    <button mat-icon-button\n            [attr.aria-label]=\"'toggle ' + node.filename\"\n            (click)=\"loadChildren(node)\"\n            matTreeNodeToggle>\n      <mat-icon class=\"mat-icon-rtl-mirror\">\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n      </mat-icon>\n    </button>\n    {{node.item}}\n  </mat-tree-node>\n\n  <mat-tree-node *matTreeNodeDef=\"let node; when: isLoadMore\">\n    <button mat-button (click)=\"loadMore(node.loadMoreParentItem)\">\n      Load more...\n    </button>\n  </mat-tree-node>\n</mat-tree>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵangular_material_src_material_examples_material_tree_tree_c"}]}],"loadMore":[{"__symbolic":"method"}],"loadChildren":[{"__symbolic":"method"}]}},"TreeNestedOverviewExample":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":44,"character":1},"arguments":[{"selector":"tree-nested-overview-example","template":"<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" class=\"example-tree\">\n  <!-- This is the tree node template for leaf nodes -->\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodeToggle>\n    <li class=\"mat-tree-node\">\n      <!-- use a disabled button to provide padding for tree leaf -->\n      <button mat-icon-button disabled></button>\n      {{node.name}}\n    </li>\n  </mat-tree-node>\n  <!-- This is the tree node template for expandable nodes -->\n  <mat-nested-tree-node *matTreeNodeDef=\"let node; when: hasChild\">\n    <li>\n      <div class=\"mat-tree-node\">\n        <button mat-icon-button matTreeNodeToggle\n                [attr.aria-label]=\"'toggle ' + node.name\">\n          <mat-icon class=\"mat-icon-rtl-mirror\">\n            {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n          </mat-icon>\n        </button>\n        {{node.name}}\n      </div>\n      <ul [class.example-tree-invisible]=\"!treeControl.isExpanded(node)\">\n        <ng-container matTreeNodeOutlet></ng-container>\n      </ul>\n    </li>\n  </mat-nested-tree-node>\n</mat-tree>\n","styles":[".example-tree-invisible {\n  display: none;\n}\n\n.example-tree ul,\n.example-tree li {\n  margin-top: 0;\n  margin-bottom: 0;\n  list-style-type: none;\n}\n"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]}},"TreeExamplesModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":30,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":32,"character":4},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":33,"character":4},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":34,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":35,"character":4},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":36,"character":4},{"__symbolic":"reference","module":"@angular/material/progress-bar","name":"MatProgressBarModule","line":37,"character":4},{"__symbolic":"reference","module":"@angular/material/tree","name":"MatTreeModule","line":38,"character":4}],"declarations":[{"__symbolic":"reference","name":"TreeChecklistExample"},{"__symbolic":"reference","name":"TreeDynamicExample"},{"__symbolic":"reference","name":"TreeFlatOverviewExample"},{"__symbolic":"reference","name":"TreeLoadmoreExample"},{"__symbolic":"reference","name":"TreeNestedOverviewExample"}],"exports":[{"__symbolic":"reference","name":"TreeChecklistExample"},{"__symbolic":"reference","name":"TreeDynamicExample"},{"__symbolic":"reference","name":"TreeFlatOverviewExample"},{"__symbolic":"reference","name":"TreeLoadmoreExample"},{"__symbolic":"reference","name":"TreeNestedOverviewExample"}]}]}],"members":{}}},"origins":{"ɵangular_material_src_material_examples_material_tree_tree_a":"./tree-checklist/tree-checklist-example","TreeChecklistExample":"./tree-checklist/tree-checklist-example","ɵangular_material_src_material_examples_material_tree_tree_b":"./tree-dynamic/tree-dynamic-example","TreeDynamicExample":"./tree-dynamic/tree-dynamic-example","TreeFlatOverviewExample":"./tree-flat-overview/tree-flat-overview-example","ɵangular_material_src_material_examples_material_tree_tree_c":"./tree-loadmore/tree-loadmore-example","TreeLoadmoreExample":"./tree-loadmore/tree-loadmore-example","TreeNestedOverviewExample":"./tree-nested-overview/tree-nested-overview-example","TreeExamplesModule":"./module"},"importAs":"@angular/material-examples/material/tree"}
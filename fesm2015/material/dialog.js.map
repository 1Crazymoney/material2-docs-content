{"version":3,"file":"material__dialog.js","sources":["../material/dialog/dialog-content/dialog-content-example.ts","../material/dialog/dialog-data/dialog-data-example.ts","../material/dialog/dialog-elements/dialog-elements-example.ts","../material/dialog/dialog-overview/dialog-overview-example.ts","../material/dialog/module.ts","../material/dialog/index.ts"],"sourcesContent":["import {Component} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\n\n/**\n * @title Dialog with header, scrollable content and actions\n */\n@Component({\n  selector: 'dialog-content-example',\n  templateUrl: 'dialog-content-example.html',\n  styleUrls: ['dialog-content-example.css'],\n})\nexport class DialogContentExample {\n  constructor(public dialog: MatDialog) {}\n\n  openDialog() {\n    const dialogRef = this.dialog.open(DialogContentExampleDialog);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-content-example-dialog',\n  templateUrl: 'dialog-content-example-dialog.html',\n})\nexport class DialogContentExampleDialog {}\n","import {Component, Inject} from '@angular/core';\nimport {MatDialog, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\nexport interface DialogData {\n  animal: 'panda' | 'unicorn' | 'lion';\n}\n\n/**\n * @title Injecting data when opening a dialog\n */\n@Component({\n  selector: 'dialog-data-example',\n  templateUrl: 'dialog-data-example.html',\n  styleUrls: ['dialog-data-example.css'],\n})\nexport class DialogDataExample {\n  constructor(public dialog: MatDialog) {}\n\n  openDialog() {\n    this.dialog.open(DialogDataExampleDialog, {\n      data: {\n        animal: 'panda'\n      }\n    });\n  }\n}\n\n@Component({\n  selector: 'dialog-data-example-dialog',\n  templateUrl: 'dialog-data-example-dialog.html',\n})\nexport class DialogDataExampleDialog {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n}\n","import {Component} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\n\n/**\n * @title Dialog elements\n */\n@Component({\n  selector: 'dialog-elements-example',\n  templateUrl: 'dialog-elements-example.html',\n  styleUrls: ['dialog-elements-example.css'],\n})\nexport class DialogElementsExample {\n  constructor(public dialog: MatDialog) {}\n\n  openDialog() {\n    this.dialog.open(DialogElementsExampleDialog);\n  }\n}\n\n\n@Component({\n  selector: 'dialog-elements-example-dialog',\n  templateUrl: 'dialog-elements-example-dialog.html',\n})\nexport class DialogElementsExampleDialog {}\n","import {Component, Inject} from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\nexport interface DialogData {\n  animal: string;\n  name: string;\n}\n\n/**\n * @title Dialog Overview\n */\n@Component({\n  selector: 'dialog-overview-example',\n  templateUrl: 'dialog-overview-example.html',\n  styleUrls: ['dialog-overview-example.css'],\n})\nexport class DialogOverviewExample {\n\n  animal: string;\n  name: string;\n\n  constructor(public dialog: MatDialog) {}\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogOverviewExampleDialog, {\n      width: '250px',\n      data: {name: this.name, animal: this.animal}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n      this.animal = result;\n    });\n  }\n\n}\n\n@Component({\n  selector: 'dialog-overview-example-dialog',\n  templateUrl: 'dialog-overview-example-dialog.html',\n})\nexport class DialogOverviewExampleDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<DialogOverviewExampleDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatInputModule} from '@angular/material/input';\nimport {\n  DialogContentExample,\n  DialogContentExampleDialog\n} from './dialog-content/dialog-content-example';\nimport {DialogDataExample, DialogDataExampleDialog} from './dialog-data/dialog-data-example';\nimport {\n  DialogElementsExample,\n  DialogElementsExampleDialog\n} from './dialog-elements/dialog-elements-example';\nimport {\n  DialogOverviewExample,\n  DialogOverviewExampleDialog\n} from './dialog-overview/dialog-overview-example';\n\nexport {\n  DialogContentExample,\n  DialogContentExampleDialog,\n  DialogDataExample,\n  DialogDataExampleDialog,\n  DialogElementsExample,\n  DialogElementsExampleDialog,\n  DialogOverviewExample,\n  DialogOverviewExampleDialog,\n};\n\nconst EXAMPLES = [\n  DialogContentExample,\n  DialogContentExampleDialog,\n  DialogDataExample,\n  DialogDataExampleDialog,\n  DialogElementsExample,\n  DialogElementsExampleDialog,\n  DialogOverviewExample,\n  DialogOverviewExampleDialog,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatInputModule,\n    FormsModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n  entryComponents: [\n    DialogContentExampleDialog,\n    DialogDataExampleDialog,\n    DialogElementsExampleDialog,\n    DialogOverviewExampleDialog,\n  ]\n})\nexport class DialogExamplesModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './module';\n"],"names":["DialogData"],"mappings":"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"}
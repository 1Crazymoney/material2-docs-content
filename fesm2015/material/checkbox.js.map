{"version":3,"file":"material__checkbox.js","sources":["../../../../../../src/components-examples/material/checkbox/checkbox-configurable/checkbox-configurable-example.ts","../../../../../../src/components-examples/material/checkbox/checkbox-configurable/checkbox-configurable-example.html","../../../../../../src/components-examples/material/checkbox/checkbox-overview/checkbox-overview-example.ts","../../../../../../src/components-examples/material/checkbox/checkbox-overview/checkbox-overview-example.html","../../../../../../src/components-examples/material/checkbox/index.ts"],"sourcesContent":["import {Component} from '@angular/core';\n\n/**\n * @title Configurable checkbox\n */\n@Component({\n  selector: 'checkbox-configurable-example',\n  templateUrl: 'checkbox-configurable-example.html',\n  styleUrls: ['checkbox-configurable-example.css'],\n})\nexport class CheckboxConfigurableExample {\n  checked = false;\n  indeterminate = false;\n  labelPosition: 'before' | 'after' = 'after';\n  disabled = false;\n}\n","<mat-card>\n  <mat-card-content>\n    <h2 class=\"example-h2\">Checkbox configuration</h2>\n\n    <section class=\"example-section\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"checked\">Checked</mat-checkbox>\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"indeterminate\">Indeterminate</mat-checkbox>\n    </section>\n\n    <section class=\"example-section\">\n      <label class=\"example-margin\">Align:</label>\n      <mat-radio-group [(ngModel)]=\"labelPosition\">\n        <mat-radio-button class=\"example-margin\" value=\"after\">After</mat-radio-button>\n        <mat-radio-button class=\"example-margin\" value=\"before\">Before</mat-radio-button>\n      </mat-radio-group>\n    </section>\n\n    <section class=\"example-section\">\n      <mat-checkbox class=\"example-margin\" [(ngModel)]=\"disabled\">Disabled</mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>\n\n<mat-card class=\"result\">\n  <mat-card-content>\n    <h2 class=\"example-h2\">Result</h2>\n\n    <section class=\"example-section\">\n      <mat-checkbox\n          class=\"example-margin\"\n          [(ngModel)]=\"checked\"\n          [(indeterminate)]=\"indeterminate\"\n          [labelPosition]=\"labelPosition\"\n          [disabled]=\"disabled\">\n        I'm a checkbox\n      </mat-checkbox>\n    </section>\n  </mat-card-content>\n</mat-card>\n","import {Component} from '@angular/core';\nimport {ThemePalette} from '@angular/material/core';\n\nexport interface Task {\n  name: string;\n  completed: boolean;\n  color: ThemePalette;\n  subtasks?: Task[];\n}\n\n/**\n * @title Basic checkboxes\n */\n@Component({\n  selector: 'checkbox-overview-example',\n  templateUrl: 'checkbox-overview-example.html',\n  styleUrls: ['checkbox-overview-example.css'],\n})\nexport class CheckboxOverviewExample {\n  task: Task = {\n    name: 'Indeterminate',\n    completed: false,\n    color: 'primary',\n    subtasks: [\n      {name: 'Primary', completed: false, color: 'primary'},\n      {name: 'Accent', completed: false, color: 'accent'},\n      {name: 'Warn', completed: false, color: 'warn'}\n    ]\n  };\n\n  allComplete: boolean = false;\n\n  updateAllComplete() {\n    this.allComplete = this.task.subtasks != null && this.task.subtasks.every(t => t.completed);\n  }\n\n  someComplete(): boolean {\n    if (this.task.subtasks == null) {\n      return false;\n    }\n    return this.task.subtasks.filter(t => t.completed).length > 0 && !this.allComplete;\n  }\n\n  setAll(completed: boolean) {\n    this.allComplete = completed;\n    if (this.task.subtasks == null) {\n      return;\n    }\n    this.task.subtasks.forEach(t => t.completed = completed);\n  }\n}\n","<section class=\"example-section\">\n  <mat-checkbox class=\"example-margin\">Check me!</mat-checkbox>\n  <mat-checkbox class=\"example-margin\" [disabled]=\"true\">Disabled</mat-checkbox>\n</section>\n\n<section class=\"example-section\">\n  <span class=\"example-list-section\">\n    <mat-checkbox class=\"example-margin\"\n                  [checked]=\"allComplete\"\n                  [indeterminate]=\"someComplete()\"\n                  (change)=\"setAll($event.checked)\">\n      {{task.name}}\n    </mat-checkbox>\n  </span>\n  <span class=\"example-list-section\">\n    <ul>\n      <li *ngFor=\"let subtask of task.subtasks\">\n        <mat-checkbox [(ngModel)]=\"subtask.completed\"\n                      [color]=\"subtask.color\"\n                      (ngModelChange)=\"updateAllComplete()\">\n          {{subtask.name}}\n        </mat-checkbox>\n      </li>\n    </ul>\n  </span>\n</section>\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {CheckboxConfigurableExample} from './checkbox-configurable/checkbox-configurable-example';\nimport {CheckboxOverviewExample} from './checkbox-overview/checkbox-overview-example';\n\nexport {\n  CheckboxConfigurableExample,\n  CheckboxOverviewExample,\n};\n\nconst EXAMPLES = [\n  CheckboxConfigurableExample,\n  CheckboxOverviewExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatRadioModule,\n    FormsModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n  entryComponents: EXAMPLES,\n})\nexport class CheckboxExamplesModule {\n}\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵlistener","i0.ɵɵadvance","i0.ɵɵproperty","i0.ɵɵtextInterpolate1","i0.ɵɵtemplate"],"mappings":"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"}
{"version":3,"file":"material__form-field.js","sources":["../../../../../../src/components-examples/material/form-field/form-field-appearance/form-field-appearance-example.ts","../../../../../../src/components-examples/material/form-field/form-field-appearance/form-field-appearance-example.html","../../../../../../src/components-examples/material/form-field/form-field-custom-control/form-field-custom-control-example.ts","../../../../../../src/components-examples/material/form-field/form-field-custom-control/form-field-custom-control-example.html","../../../../../../src/components-examples/material/form-field/form-field-custom-control/example-tel-input-example.html","../../../../../../src/components-examples/material/form-field/form-field-error/form-field-error-example.html","../../../../../../src/components-examples/material/form-field/form-field-error/form-field-error-example.ts","../../../../../../src/components-examples/material/form-field/form-field-hint/form-field-hint-example.ts","../../../../../../src/components-examples/material/form-field/form-field-hint/form-field-hint-example.html","../../../../../../src/components-examples/material/form-field/form-field-label/form-field-label-example.ts","../../../../../../src/components-examples/material/form-field/form-field-label/form-field-label-example.html","../../../../../../src/components-examples/material/form-field/form-field-overview/form-field-overview-example.ts","../../../../../../src/components-examples/material/form-field/form-field-overview/form-field-overview-example.html","../../../../../../src/components-examples/material/form-field/form-field-prefix-suffix/form-field-prefix-suffix-example.ts","../../../../../../src/components-examples/material/form-field/form-field-prefix-suffix/form-field-prefix-suffix-example.html","../../../../../../src/components-examples/material/form-field/form-field-theming/form-field-theming-example.html","../../../../../../src/components-examples/material/form-field/form-field-theming/form-field-theming-example.ts","../../../../../../src/components-examples/material/form-field/index.ts","../../../../../../src/components-examples/material/form-field/form-field_public_index.ts"],"sourcesContent":["import {Component} from '@angular/core';\n\n/** @title Form field appearance variants */\n@Component({\n  selector: 'form-field-appearance-example',\n  templateUrl: 'form-field-appearance-example.html',\n  styleUrls: ['form-field-appearance-example.css'],\n})\nexport class FormFieldAppearanceExample {}\n","<p>\n  <mat-form-field appearance=\"legacy\">\n    <mat-label>Legacy form field</mat-label>\n    <input matInput placeholder=\"Placeholder\">\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n    <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n<p>\n  <mat-form-field appearance=\"standard\">\n    <mat-label>Standard form field</mat-label>\n    <input matInput placeholder=\"Placeholder\">\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n    <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n<p>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Fill form field</mat-label>\n    <input matInput placeholder=\"Placeholder\">\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n    <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n<p>\n  <mat-form-field appearance=\"outline\">\n    <mat-label>Outline form field</mat-label>\n    <input matInput placeholder=\"Placeholder\">\n    <mat-icon matSuffix>sentiment_very_satisfied</mat-icon>\n    <mat-hint>Hint</mat-hint>\n  </mat-form-field>\n</p>\n","import {FocusMonitor} from '@angular/cdk/a11y';\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  Optional,\n  Self,\n  ViewChild\n} from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  ControlValueAccessor,\n  NgControl,\n  Validators,\n  FormControl,\n  AbstractControl\n} from '@angular/forms';\nimport {MatFormFieldControl} from '@angular/material/form-field';\nimport {Subject} from 'rxjs';\n\n/** @title Form field with custom telephone number input control. */\n@Component({\n  selector: 'form-field-custom-control-example',\n  templateUrl: 'form-field-custom-control-example.html',\n  styleUrls: ['form-field-custom-control-example.css']\n})\nexport class FormFieldCustomControlExample {\n  form: FormGroup = new FormGroup({\n    tel: new FormControl(new MyTel('', '', ''))\n  });\n}\n\n/** Data structure for holding telephone number. */\nexport class MyTel {\n  constructor(\n    public area: string,\n    public exchange: string,\n    public subscriber: string\n  ) {}\n}\n\n/** Custom `MatFormFieldControl` for telephone number input. */\n@Component({\n  selector: 'example-tel-input',\n  templateUrl: 'example-tel-input-example.html',\n  styleUrls: ['example-tel-input-example.css'],\n  providers: [{ provide: MatFormFieldControl, useExisting: MyTelInput }],\n  host: {\n    '[class.example-floating]': 'shouldLabelFloat',\n    '[id]': 'id',\n    '[attr.aria-describedby]': 'describedBy'\n  }\n})\nexport class MyTelInput\n  implements ControlValueAccessor, MatFormFieldControl<MyTel>, OnDestroy {\n  static nextId = 0;\n  @ViewChild('area') areaInput: HTMLInputElement;\n  @ViewChild('exchange') exchangeInput: HTMLInputElement;\n  @ViewChild('subscriber') subscriberInput: HTMLInputElement;\n\n  parts: FormGroup;\n  stateChanges = new Subject<void>();\n  focused = false;\n  errorState = false;\n  controlType = 'example-tel-input';\n  id = `example-tel-input-${MyTelInput.nextId++}`;\n  describedBy = '';\n  onChange = (_: any) => {};\n  onTouched = () => {};\n\n  get empty() {\n    const {\n      value: { area, exchange, subscriber }\n    } = this.parts;\n\n    return !area && !exchange && !subscriber;\n  }\n\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n  @Input()\n  get placeholder(): string {\n    return this._placeholder;\n  }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  private _placeholder: string;\n\n  @Input()\n  get required(): boolean {\n    return this._required;\n  }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  private _required = false;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._disabled ? this.parts.disable() : this.parts.enable();\n    this.stateChanges.next();\n  }\n  private _disabled = false;\n\n  @Input()\n  get value(): MyTel | null {\n    if (this.parts.valid) {\n      const {\n        value: { area, exchange, subscriber }\n      } = this.parts;\n      return new MyTel(area, exchange, subscriber);\n    }\n    return null;\n  }\n  set value(tel: MyTel | null) {\n    const { area, exchange, subscriber } = tel || new MyTel('', '', '');\n    this.parts.setValue({ area, exchange, subscriber });\n    this.stateChanges.next();\n  }\n\n  constructor(\n    formBuilder: FormBuilder,\n    private _focusMonitor: FocusMonitor,\n    private _elementRef: ElementRef<HTMLElement>,\n    @Optional() @Self() public ngControl: NgControl\n  ) {\n    this.parts = formBuilder.group({\n      area: [\n        null,\n        [Validators.required, Validators.minLength(3), Validators.maxLength(3)]\n      ],\n      exchange: [\n        null,\n        [Validators.required, Validators.minLength(3), Validators.maxLength(3)]\n      ],\n      subscriber: [\n        null,\n        [Validators.required, Validators.minLength(4), Validators.maxLength(4)]\n      ]\n    });\n\n    _focusMonitor.monitor(_elementRef, true).subscribe(origin => {\n      if (this.focused && !origin) {\n        this.onTouched();\n      }\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  autoFocusNext(control: AbstractControl, nextElement?: HTMLInputElement): void {\n    if (!control.errors && nextElement) {\n      this._focusMonitor.focusVia(nextElement, 'program');\n    }\n  }\n\n  autoFocusPrev(control: AbstractControl, prevElement: HTMLInputElement): void {\n    if (control.value.length < 1) {\n      this._focusMonitor.focusVia(prevElement, 'program');\n    }\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if (this.parts.controls.subscriber.valid) {\n      this._focusMonitor.focusVia(this.subscriberInput, 'program');\n    } else if (this.parts.controls.exchange.valid) {\n      this._focusMonitor.focusVia(this.subscriberInput, 'program');\n    } else if (this.parts.controls.area.valid) {\n      this._focusMonitor.focusVia(this.exchangeInput, 'program');\n    } else {\n      this._focusMonitor.focusVia(this.areaInput, 'program');\n    }\n  }\n\n  writeValue(tel: MyTel | null): void {\n    this.value = tel;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  _handleInput(control: AbstractControl, nextElement?: HTMLInputElement): void {\n    this.autoFocusNext(control, nextElement);\n    this.onChange(this.value);\n  }\n\n  static ngAcceptInputType_disabled: boolean | string | null | undefined;\n  static ngAcceptInputType_required: boolean | string | null | undefined;\n}\n","<div [formGroup]=\"form\">\n\t<mat-form-field appearance=\"fill\">\n\t\t<mat-label>Phone number</mat-label>\n\t\t<example-tel-input formControlName=\"tel\" required></example-tel-input>\n\t\t<mat-icon matSuffix>phone</mat-icon>\n\t\t<mat-hint>Include area code</mat-hint>\n\t</mat-form-field>\n</div>\n","<div [formGroup]=\"parts\" class=\"example-tel-input-container\">\n  <input class=\"example-tel-input-element\"\n         formControlName=\"area\" size=\"3\"\n         maxLength=\"3\"\n         aria-label=\"Area code\"\n         (input)=\"_handleInput(parts.controls.area, exchange)\"\n         #area>\n  <span class=\"example-tel-input-spacer\">&ndash;</span>\n  <input class=\"example-tel-input-element\"\n         formControlName=\"exchange\"\n         maxLength=\"3\"\n         size=\"3\"\n         aria-label=\"Exchange code\"\n         (input)=\"_handleInput(parts.controls.exchange, subscriber)\"\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.exchange, area)\"\n         #exchange>\n  <span class=\"example-tel-input-spacer\">&ndash;</span>\n  <input class=\"example-tel-input-element\"\n         formControlName=\"subscriber\"\n         maxLength=\"4\"\n         size=\"4\"\n         aria-label=\"Subscriber number\"\n         (input)=\"_handleInput(parts.controls.subscriber)\"\n         (keyup.backspace)=\"autoFocusPrev(parts.controls.subscriber, exchange)\"\n         #subscriber>\n</div>\n","<div class=\"example-container\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Enter your email</mat-label>\n    <input matInput placeholder=\"pat@example.com\" [formControl]=\"email\" required>\n    <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error>\n  </mat-form-field>\n</div>\n","import {Component} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\n\n/** @title Form field with error messages */\n@Component({\n  selector: 'form-field-error-example',\n  templateUrl: 'form-field-error-example.html',\n  styleUrls: ['form-field-error-example.css'],\n})\nexport class FormFieldErrorExample {\n  email = new FormControl('', [Validators.required, Validators.email]);\n\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'You must enter a value';\n    }\n\n    return this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n}\n","import {Component} from '@angular/core';\n\n/** @title Form field with hints */\n@Component({\n  selector: 'form-field-hint-example',\n  templateUrl: 'form-field-hint-example.html',\n  styleUrls: ['form-field-hint-example.css'],\n})\nexport class FormFieldHintExample {}\n","<div class=\"example-container\">\n  <mat-form-field hintLabel=\"Max 10 characters\" appearance=\"fill\">\n    <mat-label>Enter some input</mat-label>\n    <input matInput #input maxlength=\"10\" placeholder=\"Ex. Nougat\">\n    <mat-hint align=\"end\">{{input.value?.length || 0}}/10</mat-hint>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Select me</mat-label>\n    <mat-select>\n      <mat-option value=\"option\">Option</mat-option>\n    </mat-select>\n    <mat-hint align=\"end\">Here's the dropdown arrow ^</mat-hint>\n  </mat-form-field>\n</div>\n","import {Component} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\n\n/** @title Form field with label */\n@Component({\n  selector: 'form-field-label-example',\n  templateUrl: 'form-field-label-example.html',\n  styleUrls: ['form-field-label-example.css'],\n})\nexport class FormFieldLabelExample {\n  options: FormGroup;\n  hideRequiredControl = new FormControl(false);\n  floatLabelControl = new FormControl('auto');\n\n  constructor(fb: FormBuilder) {\n    this.options = fb.group({\n      hideRequired: this.hideRequiredControl,\n      floatLabel: this.floatLabelControl,\n    });\n  }\n}\n","<div class=\"example-container\">\n  <form [formGroup]=\"options\">\n    <mat-checkbox [formControl]=\"hideRequiredControl\">Hide required marker</mat-checkbox>\n    <div>\n      <label>Float label: </label>\n      <mat-radio-group [formControl]=\"floatLabelControl\">\n        <mat-radio-button value=\"auto\">Auto</mat-radio-button>\n        <mat-radio-button value=\"always\">Always</mat-radio-button>\n      </mat-radio-group>\n    </div>\n\n    <mat-form-field appearance=\"fill\"\n        [hideRequiredMarker]=\"hideRequiredControl.value\"\n        [floatLabel]=\"floatLabelControl.value\">\n      <input matInput placeholder=\"Simple placeholder\" required>\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\" [floatLabel]=\"floatLabelControl.value\">\n      <mat-label>Both a label and a placeholder</mat-label>\n      <input matInput placeholder=\"Simple placeholder\">\n    </mat-form-field>\n\n    <mat-form-field appearance=\"fill\"\n        [hideRequiredMarker]=\"hideRequiredControl.value\"\n        [floatLabel]=\"floatLabelControl.value\">\n      <mat-select required>\n        <mat-option>-- None --</mat-option>\n        <mat-option value=\"option\">Option</mat-option>\n      </mat-select>\n      <mat-label><mat-icon>favorite</mat-icon> <b> Fancy</b> <i> label</i></mat-label>\n    </mat-form-field>\n  </form>\n</div>\n","import {Component} from '@angular/core';\n\n/** @title Simple form field */\n@Component({\n  selector: 'form-field-overview-example',\n  templateUrl: 'form-field-overview-example.html',\n  styleUrls: ['form-field-overview-example.css'],\n})\nexport class FormFieldOverviewExample {}\n","<div class=\"example-container\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Input</mat-label>\n    <input matInput>\n  </mat-form-field>\n  <br>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Select</mat-label>\n    <mat-select>\n      <mat-option value=\"option\">Option</mat-option>\n    </mat-select>\n  </mat-form-field>\n  <br>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Textarea</mat-label>\n    <textarea matInput></textarea>\n  </mat-form-field>\n</div>\n","import {Component} from '@angular/core';\n\n/** @title Form field with prefix & suffix */\n@Component({\n  selector: 'form-field-prefix-suffix-example',\n  templateUrl: 'form-field-prefix-suffix-example.html',\n  styleUrls: ['form-field-prefix-suffix-example.css'],\n})\nexport class FormFieldPrefixSuffixExample {\n  hide = true;\n}\n","<div class=\"example-container\">\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Enter your password</mat-label>\n    <input matInput [type]=\"hide ? 'password' : 'text'\">\n    <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n    </button>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Amount</mat-label>\n    <input matInput type=\"number\" class=\"example-right-align\">\n    <span matPrefix>$&nbsp;</span>\n    <span matSuffix>.00</span>\n  </mat-form-field>\n</div>\n","<form class=\"example-container\" [formGroup]=\"options\" [style.fontSize.px]=\"getFontSize()\">\n  <mat-form-field appearance=\"fill\" [color]=\"colorControl.value\">\n    <mat-label>Color</mat-label>\n    <mat-select [formControl]=\"colorControl\">\n      <mat-option value=\"primary\">Primary</mat-option>\n      <mat-option value=\"accent\">Accent</mat-option>\n      <mat-option value=\"warn\">Warn</mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field appearance=\"fill\" [color]=\"colorControl.value\">\n    <mat-label>Font size</mat-label>\n    <input matInput type=\"number\" placeholder=\"Ex. 12\" [formControl]=\"fontSizeControl\" min=\"10\">\n    <span matSuffix>px</span>\n    <mat-error *ngIf=\"fontSizeControl.invalid\">Min size: 10px</mat-error>\n  </mat-form-field>\n</form>\n","import {Component} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\n\n/** @title Form field theming */\n@Component({\n  selector: 'form-field-theming-example',\n  templateUrl: 'form-field-theming-example.html',\n  styleUrls: ['form-field-theming-example.css'],\n})\nexport class FormFieldThemingExample {\n  options: FormGroup;\n  colorControl = new FormControl('primary');\n  fontSizeControl = new FormControl(16, Validators.min(10));\n\n  constructor(fb: FormBuilder) {\n    this.options = fb.group({\n      color: this.colorControl,\n      fontSize: this.fontSizeControl,\n    });\n  }\n\n  getFontSize() {\n    return Math.max(10, this.fontSizeControl.value);\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {FormFieldAppearanceExample} from './form-field-appearance/form-field-appearance-example';\nimport {\n  FormFieldCustomControlExample,\n  MyTelInput\n} from './form-field-custom-control/form-field-custom-control-example';\nimport {FormFieldErrorExample} from './form-field-error/form-field-error-example';\nimport {FormFieldHintExample} from './form-field-hint/form-field-hint-example';\nimport {FormFieldLabelExample} from './form-field-label/form-field-label-example';\nimport {FormFieldOverviewExample} from './form-field-overview/form-field-overview-example';\nimport {\n  FormFieldPrefixSuffixExample\n} from './form-field-prefix-suffix/form-field-prefix-suffix-example';\nimport {FormFieldThemingExample} from './form-field-theming/form-field-theming-example';\n\nexport {\n  FormFieldAppearanceExample,\n  FormFieldCustomControlExample,\n  FormFieldErrorExample,\n  FormFieldHintExample,\n  FormFieldLabelExample,\n  FormFieldOverviewExample,\n  FormFieldPrefixSuffixExample,\n  FormFieldThemingExample,\n  MyTelInput,\n};\n\nconst EXAMPLES = [\n  FormFieldAppearanceExample,\n  FormFieldCustomControlExample,\n  FormFieldErrorExample,\n  FormFieldHintExample,\n  FormFieldLabelExample,\n  FormFieldOverviewExample,\n  FormFieldPrefixSuffixExample,\n  FormFieldThemingExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatRadioModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [...EXAMPLES, MyTelInput],\n  exports: EXAMPLES,\n  entryComponents: EXAMPLES,\n})\nexport class FormFieldExamplesModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵlistener","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵtemplate","i0.ɵɵtextInterpolate1","i0.ɵɵattribute","i0.ɵɵstyleProp"],"mappings":"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"}
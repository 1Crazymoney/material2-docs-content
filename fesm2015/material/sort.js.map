{"version":3,"file":"material__sort.js","sources":["../../../../../../src/components-examples/material/sort/sort-overview/sort-overview-example.html","../../../../../../src/components-examples/material/sort/sort-overview/sort-overview-example.ts","../../../../../../src/components-examples/material/sort/index.ts","../../../../../../src/components-examples/material/sort/sort_public_index.ts"],"sourcesContent":["<table matSort (matSortChange)=\"sortData($event)\">\n  <tr>\n    <th mat-sort-header=\"name\">Dessert (100g)</th>\n    <th mat-sort-header=\"calories\">Calories</th>\n    <th mat-sort-header=\"fat\">Fat (g)</th>\n    <th mat-sort-header=\"carbs\">Carbs (g)</th>\n    <th mat-sort-header=\"protein\">Protein (g)</th>\n  </tr>\n\n  <tr *ngFor=\"let dessert of sortedData\">\n    <td>{{dessert.name}}</td>\n    <td>{{dessert.calories}}</td>\n    <td>{{dessert.fat}}</td>\n    <td>{{dessert.carbs}}</td>\n    <td>{{dessert.protein}}</td>\n  </tr>\n</table>\n","import {Component} from '@angular/core';\nimport {Sort} from '@angular/material/sort';\n\nexport interface Dessert {\n  calories: number;\n  carbs: number;\n  fat: number;\n  name: string;\n  protein: number;\n}\n\n/**\n * @title Sorting overview\n */\n@Component({\n  selector: 'sort-overview-example',\n  templateUrl: 'sort-overview-example.html',\n  styleUrls: ['sort-overview-example.css'],\n})\nexport class SortOverviewExample {\n  desserts: Dessert[] = [\n    {name: 'Frozen yogurt', calories: 159, fat: 6, carbs: 24, protein: 4},\n    {name: 'Ice cream sandwich', calories: 237, fat: 9, carbs: 37, protein: 4},\n    {name: 'Eclair', calories: 262, fat: 16, carbs: 24, protein: 6},\n    {name: 'Cupcake', calories: 305, fat: 4, carbs: 67, protein: 4},\n    {name: 'Gingerbread', calories: 356, fat: 16, carbs: 49, protein: 4},\n  ];\n\n  sortedData: Dessert[];\n\n  constructor() {\n    this.sortedData = this.desserts.slice();\n  }\n\n  sortData(sort: Sort) {\n    const data = this.desserts.slice();\n    if (!sort.active || sort.direction === '') {\n      this.sortedData = data;\n      return;\n    }\n\n    this.sortedData = data.sort((a, b) => {\n      const isAsc = sort.direction === 'asc';\n      switch (sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'calories': return compare(a.calories, b.calories, isAsc);\n        case 'fat': return compare(a.fat, b.fat, isAsc);\n        case 'carbs': return compare(a.carbs, b.carbs, isAsc);\n        case 'protein': return compare(a.protein, b.protein, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatSortModule} from '@angular/material/sort';\nimport {SortOverviewExample} from './sort-overview/sort-overview-example';\n\nexport {SortOverviewExample};\n\nconst EXAMPLES = [\n  SortOverviewExample,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatSortModule,\n  ],\n  declarations: EXAMPLES,\n  exports: EXAMPLES,\n  entryComponents: EXAMPLES,\n})\nexport class SortExamplesModule {\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵlistener","i0.ɵɵtemplate","i0.ɵɵproperty"],"mappings":"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"}
/**
 ******************************************************************************
 * DO NOT MANUALLY EDIT THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED.
 ******************************************************************************/
export var EXAMPLE_COMPONENTS = {
    "cdk-popover-edit-cdk-table-flex": {
        "title": "CDK Popover Edit on a flex cdk-table.",
        "componentName": "CdkPopoverEditCdkTableFlexExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkPopoverEditExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk-experimental/popover-edit"
        }
    },
    "cdk-popover-edit-cdk-table": {
        "title": "CDK Popover Edit on a CDK data-table",
        "componentName": "CdkPopoverEditCdkTableExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkPopoverEditExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk-experimental/popover-edit"
        }
    },
    "cdk-popover-edit-cell-span-vanilla-table": {
        "title": "CDK Popover Edit spanning multiple columns on an HTML data-table",
        "componentName": "CdkPopoverEditCellSpanVanillaTableExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkPopoverEditExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk-experimental/popover-edit"
        }
    },
    "cdk-popover-edit-tab-out-vanilla-table": {
        "title": "CDK Popover Edit with spreadsheet-like configuration on an HTML data-table",
        "componentName": "CdkPopoverEditTabOutVanillaTableExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkPopoverEditExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk-experimental/popover-edit"
        }
    },
    "cdk-popover-edit-vanilla-table": {
        "title": "CDK Popover Edit on an HTML data-table",
        "componentName": "CdkPopoverEditVanillaTableExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkPopoverEditExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk-experimental/popover-edit"
        }
    },
    "focus-monitor-directives": {
        "title": "Monitoring focus with FocusMonitor",
        "componentName": "FocusMonitorDirectivesExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkA11yExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/a11y"
        }
    },
    "focus-monitor-focus-via": {
        "title": "Focusing with a specific FocusOrigin",
        "componentName": "FocusMonitorFocusViaExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkA11yExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/a11y"
        }
    },
    "focus-monitor-overview": {
        "title": "Monitoring focus with FocusMonitor",
        "componentName": "FocusMonitorOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkA11yExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/a11y"
        }
    },
    "cdk-clipboard-overview": {
        "title": "Clipboard overview",
        "componentName": "CdkClipboardOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkClipboardExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/clipboard"
        }
    },
    "cdk-drag-drop-axis-lock": {
        "title": "Drag&Drop position locking",
        "componentName": "CdkDragDropAxisLockExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-drag-drop-boundary": {
        "title": "Drag&Drop boundary",
        "componentName": "CdkDragDropBoundaryExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-drag-drop-connected-sorting-group": {
        "title": "Drag&Drop connected sorting group",
        "componentName": "CdkDragDropConnectedSortingGroupExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-drag-drop-connected-sorting": {
        "title": "Drag&Drop connected sorting",
        "componentName": "CdkDragDropConnectedSortingExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-drag-drop-custom-placeholder": {
        "title": "Drag&Drop custom placeholer",
        "componentName": "CdkDragDropCustomPlaceholderExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-drag-drop-custom-preview": {
        "title": "Drag&Drop custom preview",
        "componentName": "CdkDragDropCustomPreviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-drag-drop-delay": {
        "title": "Delayed dragging",
        "componentName": "CdkDragDropDelayExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-drag-drop-disabled-sorting": {
        "title": "Drag&Drop disabled sorting",
        "componentName": "CdkDragDropDisabledSortingExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-drag-drop-disabled": {
        "title": "Drag&Drop disabled",
        "componentName": "CdkDragDropDisabledExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-drag-drop-enter-predicate": {
        "title": "Drag&Drop enter predicate",
        "componentName": "CdkDragDropEnterPredicateExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-drag-drop-free-drag-position": {
        "title": "Programmatically setting the free drag position",
        "componentName": "CdkDragDropFreeDragPositionExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-drag-drop-handle": {
        "title": "Drag&Drop with a handle",
        "componentName": "CdkDragDropHandleExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-drag-drop-horizontal-sorting": {
        "title": "Drag&Drop horizontal sorting",
        "componentName": "CdkDragDropHorizontalSortingExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-drag-drop-overview": {
        "title": "Basic Drag&Drop",
        "componentName": "CdkDragDropOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-drag-drop-root-element": {
        "title": "Drag&Drop with alternate root element",
        "componentName": "CdkDragDropRootElementExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-drag-drop-sorting": {
        "title": "Drag&Drop sorting",
        "componentName": "CdkDragDropSortingExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkDragDropExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/drag-drop"
        }
    },
    "cdk-platform-overview": {
        "title": "Platform overview",
        "componentName": "CdkPlatformOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkPlatformExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/platform"
        }
    },
    "cdk-portal-overview": {
        "title": "Portal overview",
        "componentName": "CdkPortalOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [
            "ComponentPortalExample"
        ],
        "module": {
            "name": "CdkPortalExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/portal"
        }
    },
    "cdk-virtual-scroll-context": {
        "title": "Virtual scroll context variables",
        "componentName": "CdkVirtualScrollContextExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/scrolling"
        }
    },
    "cdk-virtual-scroll-custom-strategy": {
        "title": "Virtual scroll with a custom strategy",
        "componentName": "CdkVirtualScrollCustomStrategyExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/scrolling"
        }
    },
    "cdk-virtual-scroll-data-source": {
        "title": "Virtual scroll with a custom data source",
        "componentName": "CdkVirtualScrollDataSourceExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/scrolling"
        }
    },
    "cdk-virtual-scroll-dl": {
        "title": "Virtual scrolling `<dl>`",
        "componentName": "CdkVirtualScrollDlExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/scrolling"
        }
    },
    "cdk-virtual-scroll-fixed-buffer": {
        "title": "Fixed size virtual scroll with custom buffer parameters",
        "componentName": "CdkVirtualScrollFixedBufferExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/scrolling"
        }
    },
    "cdk-virtual-scroll-horizontal": {
        "title": "Horizontal virtual scroll",
        "componentName": "CdkVirtualScrollHorizontalExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/scrolling"
        }
    },
    "cdk-virtual-scroll-overview": {
        "title": "Basic virtual scroll",
        "componentName": "CdkVirtualScrollOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/scrolling"
        }
    },
    "cdk-virtual-scroll-template-cache": {
        "title": "Virtual scroll with no template caching",
        "componentName": "CdkVirtualScrollTemplateCacheExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkScrollingExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/scrolling"
        }
    },
    "cdk-custom-stepper-without-form": {
        "title": "A custom CDK stepper without a form",
        "componentName": "CdkCustomStepperWithoutFormExample",
        "additionalFiles": [
            "./example-custom-stepper.html",
            "./example-custom-stepper.css"
        ],
        "additionalComponents": [
            "CustomStepper"
        ],
        "module": {
            "name": "CdkStepperExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/stepper"
        }
    },
    "cdk-table-basic-flex": {
        "title": "Basic use of `<cdk-table>` (uses display flex)",
        "componentName": "CdkTableBasicFlexExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkTableExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/table"
        }
    },
    "cdk-table-basic": {
        "title": "Basic CDK data-table",
        "componentName": "CdkTableBasicExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkTableExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/table"
        }
    },
    "text-field-autofill-directive": {
        "title": "Monitoring autofill state with cdkAutofill",
        "componentName": "TextFieldAutofillDirectiveExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkTextFieldExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/text-field"
        }
    },
    "text-field-autofill-monitor": {
        "title": "Monitoring autofill state with AutofillMonitor",
        "componentName": "TextFieldAutofillMonitorExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkTextFieldExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/text-field"
        }
    },
    "text-field-autosize-textarea": {
        "title": "Auto-resizing textarea",
        "componentName": "TextFieldAutosizeTextareaExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkTextFieldExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/text-field"
        }
    },
    "cdk-tree-flat": {
        "title": "Tree with flat nodes",
        "componentName": "CdkTreeFlatExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkTreeExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/tree"
        }
    },
    "cdk-tree-nested": {
        "title": "Tree with nested nodes",
        "componentName": "CdkTreeNestedExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CdkTreeExamplesModule",
            "importSpecifier": "@angular/components-examples/cdk/tree"
        }
    },
    "popover-edit-cell-span-mat-table": {
        "title": "Material Popover Edit spanning multiple columns on a Material data-table",
        "componentName": "PopoverEditCellSpanMatTableExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "PopoverEditExamplesModule",
            "importSpecifier": "@angular/components-examples/material-experimental/popover-edit"
        }
    },
    "popover-edit-mat-table-flex": {
        "title": "Material Popover Edit on a flex Material data-table",
        "componentName": "PopoverEditMatTableFlexExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "PopoverEditExamplesModule",
            "importSpecifier": "@angular/components-examples/material-experimental/popover-edit"
        }
    },
    "popover-edit-mat-table": {
        "title": "Material Popover Edit on a Material data-table",
        "componentName": "PopoverEditMatTableExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "PopoverEditExamplesModule",
            "importSpecifier": "@angular/components-examples/material-experimental/popover-edit"
        }
    },
    "popover-edit-tab-out-mat-table": {
        "title": "Material Popover Edit with spreadsheet-like configuration on a Material data-table",
        "componentName": "PopoverEditTabOutMatTableExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "PopoverEditExamplesModule",
            "importSpecifier": "@angular/components-examples/material-experimental/popover-edit"
        }
    },
    "autocomplete-auto-active-first-option": {
        "title": "Highlight the first autocomplete option",
        "componentName": "AutocompleteAutoActiveFirstOptionExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "AutocompleteExamplesModule",
            "importSpecifier": "@angular/components-examples/material/autocomplete"
        }
    },
    "autocomplete-display": {
        "title": "Display value autocomplete",
        "componentName": "AutocompleteDisplayExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "AutocompleteExamplesModule",
            "importSpecifier": "@angular/components-examples/material/autocomplete"
        }
    },
    "autocomplete-filter": {
        "title": "Filter autocomplete",
        "componentName": "AutocompleteFilterExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "AutocompleteExamplesModule",
            "importSpecifier": "@angular/components-examples/material/autocomplete"
        }
    },
    "autocomplete-optgroup": {
        "title": "Option groups autocomplete",
        "componentName": "AutocompleteOptgroupExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "AutocompleteExamplesModule",
            "importSpecifier": "@angular/components-examples/material/autocomplete"
        }
    },
    "autocomplete-overview": {
        "title": "Autocomplete overview",
        "componentName": "AutocompleteOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "AutocompleteExamplesModule",
            "importSpecifier": "@angular/components-examples/material/autocomplete"
        }
    },
    "autocomplete-plain-input": {
        "title": "Plain input autocomplete",
        "componentName": "AutocompletePlainInputExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "AutocompleteExamplesModule",
            "importSpecifier": "@angular/components-examples/material/autocomplete"
        }
    },
    "autocomplete-simple": {
        "title": "Simple autocomplete",
        "componentName": "AutocompleteSimpleExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "AutocompleteExamplesModule",
            "importSpecifier": "@angular/components-examples/material/autocomplete"
        }
    },
    "badge-overview": {
        "title": "Badge overview",
        "componentName": "BadgeOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "BadgeExamplesModule",
            "importSpecifier": "@angular/components-examples/material/badge"
        }
    },
    "bottom-sheet-overview": {
        "title": "Bottom Sheet Overview",
        "componentName": "BottomSheetOverviewExample",
        "additionalFiles": [
            "bottom-sheet-overview-example-sheet.html"
        ],
        "additionalComponents": [
            "BottomSheetOverviewExampleSheet"
        ],
        "module": {
            "name": "BottomSheetExamplesModule",
            "importSpecifier": "@angular/components-examples/material/bottom-sheet"
        }
    },
    "button-toggle-appearance": {
        "title": "Button toggle appearance",
        "componentName": "ButtonToggleAppearanceExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ButtonToggleExamplesModule",
            "importSpecifier": "@angular/components-examples/material/button-toggle"
        }
    },
    "button-toggle-exclusive": {
        "title": "Exclusive selection",
        "componentName": "ButtonToggleExclusiveExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ButtonToggleExamplesModule",
            "importSpecifier": "@angular/components-examples/material/button-toggle"
        }
    },
    "button-toggle-overview": {
        "title": "Basic button-toggles",
        "componentName": "ButtonToggleOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ButtonToggleExamplesModule",
            "importSpecifier": "@angular/components-examples/material/button-toggle"
        }
    },
    "button-overview": {
        "title": "Basic buttons",
        "componentName": "ButtonOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ButtonExamplesModule",
            "importSpecifier": "@angular/components-examples/material/button"
        }
    },
    "button-types": {
        "title": "Button varieties",
        "componentName": "ButtonTypesExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ButtonExamplesModule",
            "importSpecifier": "@angular/components-examples/material/button"
        }
    },
    "card-fancy": {
        "title": "Card with multiple sections",
        "componentName": "CardFancyExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CardExamplesModule",
            "importSpecifier": "@angular/components-examples/material/card"
        }
    },
    "card-overview": {
        "title": "Basic cards",
        "componentName": "CardOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CardExamplesModule",
            "importSpecifier": "@angular/components-examples/material/card"
        }
    },
    "checkbox-configurable": {
        "title": "Configurable checkbox",
        "componentName": "CheckboxConfigurableExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CheckboxExamplesModule",
            "importSpecifier": "@angular/components-examples/material/checkbox"
        }
    },
    "checkbox-overview": {
        "title": "Basic checkboxes",
        "componentName": "CheckboxOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CheckboxExamplesModule",
            "importSpecifier": "@angular/components-examples/material/checkbox"
        }
    },
    "chips-autocomplete": {
        "title": "Chips Autocomplete",
        "componentName": "ChipsAutocompleteExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ChipsExamplesModule",
            "importSpecifier": "@angular/components-examples/material/chips"
        }
    },
    "chips-drag-drop": {
        "title": "Chips Drag and Drop",
        "componentName": "ChipsDragDropExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ChipsExamplesModule",
            "importSpecifier": "@angular/components-examples/material/chips"
        }
    },
    "chips-input": {
        "title": "Chips with input",
        "componentName": "ChipsInputExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ChipsExamplesModule",
            "importSpecifier": "@angular/components-examples/material/chips"
        }
    },
    "chips-overview": {
        "title": "Basic chips",
        "componentName": "ChipsOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ChipsExamplesModule",
            "importSpecifier": "@angular/components-examples/material/chips"
        }
    },
    "chips-stacked": {
        "title": "Stacked chips",
        "componentName": "ChipsStackedExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ChipsExamplesModule",
            "importSpecifier": "@angular/components-examples/material/chips"
        }
    },
    "elevation-overview": {
        "title": "Elevation CSS classes",
        "componentName": "ElevationOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CoreExamplesModule",
            "importSpecifier": "@angular/components-examples/material/core"
        }
    },
    "ripple-overview": {
        "title": "MatRipple basic usage",
        "componentName": "RippleOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "CoreExamplesModule",
            "importSpecifier": "@angular/components-examples/material/core"
        }
    },
    "datepicker-api": {
        "title": "Datepicker open method",
        "componentName": "DatepickerApiExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-color": {
        "title": "Datepicker palette colors",
        "componentName": "DatepickerColorExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-custom-header": {
        "title": "Datepicker with custom calendar header",
        "componentName": "DatepickerCustomHeaderExample",
        "additionalFiles": [],
        "additionalComponents": [
            "ExampleHeader"
        ],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-custom-icon": {
        "title": "Datepicker with custom icon",
        "componentName": "DatepickerCustomIconExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-date-class": {
        "title": "Datepicker with custom date classes",
        "componentName": "DatepickerDateClassExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-disabled": {
        "title": "Disabled datepicker",
        "componentName": "DatepickerDisabledExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-events": {
        "title": "Datepicker input and change events",
        "componentName": "DatepickerEventsExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-filter": {
        "title": "Datepicker with filter validation",
        "componentName": "DatepickerFilterExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-formats": {
        "title": "Datepicker with custom formats",
        "componentName": "DatepickerFormatsExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-locale": {
        "title": "Datepicker with different locale",
        "componentName": "DatepickerLocaleExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-min-max": {
        "title": "Datepicker with min & max validation",
        "componentName": "DatepickerMinMaxExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-moment": {
        "title": "Datepicker that uses Moment.js dates",
        "componentName": "DatepickerMomentExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-overview": {
        "title": "Basic datepicker",
        "componentName": "DatepickerOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-start-view": {
        "title": "Datepicker start date",
        "componentName": "DatepickerStartViewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-touch": {
        "title": "Datepicker touch UI",
        "componentName": "DatepickerTouchExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-value": {
        "title": "Datepicker selected value",
        "componentName": "DatepickerValueExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "datepicker-views-selection": {
        "title": "Datepicker emulating a Year and month picker",
        "componentName": "DatepickerViewsSelectionExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DatepickerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/datepicker"
        }
    },
    "dialog-content": {
        "title": "Dialog with header, scrollable content and actions",
        "componentName": "DialogContentExample",
        "additionalFiles": [
            "dialog-content-example-dialog.html"
        ],
        "additionalComponents": [
            "DialogContentExampleDialog"
        ],
        "module": {
            "name": "DialogExamplesModule",
            "importSpecifier": "@angular/components-examples/material/dialog"
        }
    },
    "dialog-data": {
        "title": "Injecting data when opening a dialog",
        "componentName": "DialogDataExample",
        "additionalFiles": [
            "dialog-data-example-dialog.html"
        ],
        "additionalComponents": [
            "DialogDataExampleDialog"
        ],
        "module": {
            "name": "DialogExamplesModule",
            "importSpecifier": "@angular/components-examples/material/dialog"
        }
    },
    "dialog-elements": {
        "title": "Dialog elements",
        "componentName": "DialogElementsExample",
        "additionalFiles": [
            "dialog-elements-example-dialog.html"
        ],
        "additionalComponents": [
            "DialogElementsExampleDialog"
        ],
        "module": {
            "name": "DialogExamplesModule",
            "importSpecifier": "@angular/components-examples/material/dialog"
        }
    },
    "dialog-overview": {
        "title": "Dialog Overview",
        "componentName": "DialogOverviewExample",
        "additionalFiles": [
            "dialog-overview-example-dialog.html"
        ],
        "additionalComponents": [
            "DialogOverviewExampleDialog"
        ],
        "module": {
            "name": "DialogExamplesModule",
            "importSpecifier": "@angular/components-examples/material/dialog"
        }
    },
    "divider-overview": {
        "title": "Basic divider",
        "componentName": "DividerOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "DividerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/divider"
        }
    },
    "expansion-expand-collapse-all": {
        "title": "Accordion with expand/collapse all toggles",
        "componentName": "ExpansionExpandCollapseAllExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ExpansionExamplesModule",
            "importSpecifier": "@angular/components-examples/material/expansion"
        }
    },
    "expansion-overview": {
        "title": "Basic expansion panel",
        "componentName": "ExpansionOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ExpansionExamplesModule",
            "importSpecifier": "@angular/components-examples/material/expansion"
        }
    },
    "expansion-steps": {
        "title": "Expansion panel as accordion",
        "componentName": "ExpansionStepsExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ExpansionExamplesModule",
            "importSpecifier": "@angular/components-examples/material/expansion"
        }
    },
    "form-field-appearance": {
        "title": "Form field appearance variants",
        "componentName": "FormFieldAppearanceExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "@angular/components-examples/material/form-field"
        }
    },
    "form-field-custom-control": {
        "title": "Form field with custom telephone number input control.",
        "componentName": "FormFieldCustomControlExample",
        "additionalFiles": [
            "example-tel-input-example.html",
            "example-tel-input-example.css"
        ],
        "additionalComponents": [
            "MyTelInput"
        ],
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "@angular/components-examples/material/form-field"
        }
    },
    "form-field-error": {
        "title": "Form field with error messages",
        "componentName": "FormFieldErrorExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "@angular/components-examples/material/form-field"
        }
    },
    "form-field-hint": {
        "title": "Form field with hints",
        "componentName": "FormFieldHintExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "@angular/components-examples/material/form-field"
        }
    },
    "form-field-label": {
        "title": "Form field with label",
        "componentName": "FormFieldLabelExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "@angular/components-examples/material/form-field"
        }
    },
    "form-field-overview": {
        "title": "Simple form field",
        "componentName": "FormFieldOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "@angular/components-examples/material/form-field"
        }
    },
    "form-field-prefix-suffix": {
        "title": "Form field with prefix & suffix",
        "componentName": "FormFieldPrefixSuffixExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "@angular/components-examples/material/form-field"
        }
    },
    "form-field-theming": {
        "title": "Form field theming",
        "componentName": "FormFieldThemingExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "FormFieldExamplesModule",
            "importSpecifier": "@angular/components-examples/material/form-field"
        }
    },
    "grid-list-dynamic": {
        "title": "Dynamic grid-list",
        "componentName": "GridListDynamicExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "GridListExamplesModule",
            "importSpecifier": "@angular/components-examples/material/grid-list"
        }
    },
    "grid-list-overview": {
        "title": "Basic grid-list",
        "componentName": "GridListOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "GridListExamplesModule",
            "importSpecifier": "@angular/components-examples/material/grid-list"
        }
    },
    "icon-overview": {
        "title": "Basic icons",
        "componentName": "IconOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "IconExamplesModule",
            "importSpecifier": "@angular/components-examples/material/icon"
        }
    },
    "icon-svg": {
        "title": "SVG icons",
        "componentName": "IconSvgExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "IconExamplesModule",
            "importSpecifier": "@angular/components-examples/material/icon"
        }
    },
    "input-clearable": {
        "title": "Input with a clear button",
        "componentName": "InputClearableExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "InputExamplesModule",
            "importSpecifier": "@angular/components-examples/material/input"
        }
    },
    "input-error-state-matcher": {
        "title": "Input with a custom ErrorStateMatcher",
        "componentName": "InputErrorStateMatcherExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "InputExamplesModule",
            "importSpecifier": "@angular/components-examples/material/input"
        }
    },
    "input-errors": {
        "title": "Input with error messages",
        "componentName": "InputErrorsExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "InputExamplesModule",
            "importSpecifier": "@angular/components-examples/material/input"
        }
    },
    "input-form": {
        "title": "Inputs in a form",
        "componentName": "InputFormExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "InputExamplesModule",
            "importSpecifier": "@angular/components-examples/material/input"
        }
    },
    "input-hint": {
        "title": "Input with hints",
        "componentName": "InputHintExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "InputExamplesModule",
            "importSpecifier": "@angular/components-examples/material/input"
        }
    },
    "input-overview": {
        "title": "Basic Inputs",
        "componentName": "InputOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "InputExamplesModule",
            "importSpecifier": "@angular/components-examples/material/input"
        }
    },
    "input-prefix-suffix": {
        "title": "Inputs with prefixes and suffixes",
        "componentName": "InputPrefixSuffixExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "InputExamplesModule",
            "importSpecifier": "@angular/components-examples/material/input"
        }
    },
    "list-overview": {
        "title": "Basic list",
        "componentName": "ListOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ListExamplesModule",
            "importSpecifier": "@angular/components-examples/material/list"
        }
    },
    "list-sections": {
        "title": "List with sections",
        "componentName": "ListSectionsExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ListExamplesModule",
            "importSpecifier": "@angular/components-examples/material/list"
        }
    },
    "list-selection": {
        "title": "List with selection",
        "componentName": "ListSelectionExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ListExamplesModule",
            "importSpecifier": "@angular/components-examples/material/list"
        }
    },
    "list-single-selection": {
        "title": "List with single selection",
        "componentName": "ListSingleSelectionExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ListExamplesModule",
            "importSpecifier": "@angular/components-examples/material/list"
        }
    },
    "menu-icons": {
        "title": "Menu with icons",
        "componentName": "MenuIconsExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "MenuExamplesModule",
            "importSpecifier": "@angular/components-examples/material/menu"
        }
    },
    "menu-overview": {
        "title": "Basic menu",
        "componentName": "MenuOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "MenuExamplesModule",
            "importSpecifier": "@angular/components-examples/material/menu"
        }
    },
    "menu-position": {
        "title": "Menu positioning",
        "componentName": "MenuPositionExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "MenuExamplesModule",
            "importSpecifier": "@angular/components-examples/material/menu"
        }
    },
    "nested-menu": {
        "title": "Nested menu",
        "componentName": "NestedMenuExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "MenuExamplesModule",
            "importSpecifier": "@angular/components-examples/material/menu"
        }
    },
    "paginator-configurable": {
        "title": "Configurable paginator",
        "componentName": "PaginatorConfigurableExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "PaginatorExamplesModule",
            "importSpecifier": "@angular/components-examples/material/paginator"
        }
    },
    "paginator-overview": {
        "title": "Paginator",
        "componentName": "PaginatorOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "PaginatorExamplesModule",
            "importSpecifier": "@angular/components-examples/material/paginator"
        }
    },
    "progress-bar-buffer": {
        "title": "Buffer progress-bar",
        "componentName": "ProgressBarBufferExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ProgressBarExamplesModule",
            "importSpecifier": "@angular/components-examples/material/progress-bar"
        }
    },
    "progress-bar-configurable": {
        "title": "Configurable progress-bar",
        "componentName": "ProgressBarConfigurableExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ProgressBarExamplesModule",
            "importSpecifier": "@angular/components-examples/material/progress-bar"
        }
    },
    "progress-bar-determinate": {
        "title": "Determinate progress-bar",
        "componentName": "ProgressBarDeterminateExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ProgressBarExamplesModule",
            "importSpecifier": "@angular/components-examples/material/progress-bar"
        }
    },
    "progress-bar-indeterminate": {
        "title": "Indeterminate progress-bar",
        "componentName": "ProgressBarIndeterminateExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ProgressBarExamplesModule",
            "importSpecifier": "@angular/components-examples/material/progress-bar"
        }
    },
    "progress-bar-query": {
        "title": "Query progress-bar",
        "componentName": "ProgressBarQueryExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ProgressBarExamplesModule",
            "importSpecifier": "@angular/components-examples/material/progress-bar"
        }
    },
    "progress-spinner-configurable": {
        "title": "Configurable progress spinner",
        "componentName": "ProgressSpinnerConfigurableExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ProgressSpinnerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/progress-spinner"
        }
    },
    "progress-spinner-overview": {
        "title": "Basic progress-spinner",
        "componentName": "ProgressSpinnerOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ProgressSpinnerExamplesModule",
            "importSpecifier": "@angular/components-examples/material/progress-spinner"
        }
    },
    "radio-ng-model": {
        "title": "Radios with ngModel",
        "componentName": "RadioNgModelExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "RadioExamplesModule",
            "importSpecifier": "@angular/components-examples/material/radio"
        }
    },
    "radio-overview": {
        "title": "Basic radios",
        "componentName": "RadioOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "RadioExamplesModule",
            "importSpecifier": "@angular/components-examples/material/radio"
        }
    },
    "select-custom-trigger": {
        "title": "Select with custom trigger text",
        "componentName": "SelectCustomTriggerExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "@angular/components-examples/material/select"
        }
    },
    "select-disabled": {
        "title": "Disabled select",
        "componentName": "SelectDisabledExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "@angular/components-examples/material/select"
        }
    },
    "select-error-state-matcher": {
        "title": "Select with a custom ErrorStateMatcher",
        "componentName": "SelectErrorStateMatcherExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "@angular/components-examples/material/select"
        }
    },
    "select-form": {
        "title": "Select in a form",
        "componentName": "SelectFormExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "@angular/components-examples/material/select"
        }
    },
    "select-hint-error": {
        "title": "Select with form field features",
        "componentName": "SelectHintErrorExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "@angular/components-examples/material/select"
        }
    },
    "select-initial-value": {
        "title": "Basic select with initial value and no form",
        "componentName": "SelectInitialValueExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "@angular/components-examples/material/select"
        }
    },
    "select-multiple": {
        "title": "Select with multiple selection",
        "componentName": "SelectMultipleExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "@angular/components-examples/material/select"
        }
    },
    "select-no-ripple": {
        "title": "Select with no option ripple",
        "componentName": "SelectNoRippleExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "@angular/components-examples/material/select"
        }
    },
    "select-optgroup": {
        "title": "Select with option groups",
        "componentName": "SelectOptgroupExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "@angular/components-examples/material/select"
        }
    },
    "select-overview": {
        "title": "Basic select",
        "componentName": "SelectOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "@angular/components-examples/material/select"
        }
    },
    "select-panel-class": {
        "title": "Select with custom panel styling",
        "componentName": "SelectPanelClassExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "@angular/components-examples/material/select"
        }
    },
    "select-reactive-form": {
        "title": "Select in a reactive form",
        "componentName": "SelectReactiveFormExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "@angular/components-examples/material/select"
        }
    },
    "select-reset": {
        "title": "Select with reset option",
        "componentName": "SelectResetExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "@angular/components-examples/material/select"
        }
    },
    "select-value-binding": {
        "title": "Select with 2-way value binding",
        "componentName": "SelectValueBindingExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SelectExamplesModule",
            "importSpecifier": "@angular/components-examples/material/select"
        }
    },
    "sidenav-autosize": {
        "title": "Autosize sidenav",
        "componentName": "SidenavAutosizeExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "@angular/components-examples/material/sidenav"
        }
    },
    "sidenav-backdrop": {
        "title": "Drawer with explicit backdrop setting",
        "componentName": "SidenavBackdropExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "@angular/components-examples/material/sidenav"
        }
    },
    "sidenav-disable-close": {
        "title": "Sidenav with custom escape and backdrop click behavior",
        "componentName": "SidenavDisableCloseExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "@angular/components-examples/material/sidenav"
        }
    },
    "sidenav-drawer-overview": {
        "title": "Basic drawer",
        "componentName": "SidenavDrawerOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "@angular/components-examples/material/sidenav"
        }
    },
    "sidenav-fixed": {
        "title": "Fixed sidenav",
        "componentName": "SidenavFixedExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "@angular/components-examples/material/sidenav"
        }
    },
    "sidenav-mode": {
        "title": "Sidenav with configurable mode",
        "componentName": "SidenavModeExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "@angular/components-examples/material/sidenav"
        }
    },
    "sidenav-open-close": {
        "title": "Sidenav open & close behavior",
        "componentName": "SidenavOpenCloseExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "@angular/components-examples/material/sidenav"
        }
    },
    "sidenav-overview": {
        "title": "Basic sidenav",
        "componentName": "SidenavOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "@angular/components-examples/material/sidenav"
        }
    },
    "sidenav-position": {
        "title": "Implicit main content with two sidenavs",
        "componentName": "SidenavPositionExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "@angular/components-examples/material/sidenav"
        }
    },
    "sidenav-responsive": {
        "title": "Responsive sidenav",
        "componentName": "SidenavResponsiveExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SidenavExamplesModule",
            "importSpecifier": "@angular/components-examples/material/sidenav"
        }
    },
    "slide-toggle-configurable": {
        "title": "Configurable slide-toggle",
        "componentName": "SlideToggleConfigurableExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SlideToggleExamplesModule",
            "importSpecifier": "@angular/components-examples/material/slide-toggle"
        }
    },
    "slide-toggle-forms": {
        "title": "Slide-toggle with forms",
        "componentName": "SlideToggleFormsExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SlideToggleExamplesModule",
            "importSpecifier": "@angular/components-examples/material/slide-toggle"
        }
    },
    "slide-toggle-overview": {
        "title": "Basic slide-toggles",
        "componentName": "SlideToggleOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SlideToggleExamplesModule",
            "importSpecifier": "@angular/components-examples/material/slide-toggle"
        }
    },
    "slider-configurable": {
        "title": "Configurable slider",
        "componentName": "SliderConfigurableExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SliderExamplesModule",
            "importSpecifier": "@angular/components-examples/material/slider"
        }
    },
    "slider-formatting": {
        "title": "Slider with custom thumb label formatting.",
        "componentName": "SliderFormattingExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SliderExamplesModule",
            "importSpecifier": "@angular/components-examples/material/slider"
        }
    },
    "slider-overview": {
        "title": "Basic slider",
        "componentName": "SliderOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SliderExamplesModule",
            "importSpecifier": "@angular/components-examples/material/slider"
        }
    },
    "snack-bar-component": {
        "title": "Snack-bar with a custom component",
        "componentName": "SnackBarComponentExample",
        "additionalFiles": [
            "snack-bar-component-example-snack.html"
        ],
        "additionalComponents": [
            "PizzaPartyComponent"
        ],
        "module": {
            "name": "SnackBarExamplesModule",
            "importSpecifier": "@angular/components-examples/material/snack-bar"
        }
    },
    "snack-bar-overview": {
        "title": "Basic snack-bar",
        "componentName": "SnackBarOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SnackBarExamplesModule",
            "importSpecifier": "@angular/components-examples/material/snack-bar"
        }
    },
    "snack-bar-position": {
        "title": "Snack-bar with configurable position",
        "componentName": "SnackBarPositionExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SnackBarExamplesModule",
            "importSpecifier": "@angular/components-examples/material/snack-bar"
        }
    },
    "sort-overview": {
        "title": "Sorting overview",
        "componentName": "SortOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "SortExamplesModule",
            "importSpecifier": "@angular/components-examples/material/sort"
        }
    },
    "stepper-editable": {
        "title": "Stepper with editable steps",
        "componentName": "StepperEditableExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "@angular/components-examples/material/stepper"
        }
    },
    "stepper-errors": {
        "title": "Stepper that displays errors in the steps",
        "componentName": "StepperErrorsExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "@angular/components-examples/material/stepper"
        }
    },
    "stepper-label-position-bottom": {
        "title": "Stepper label bottom position",
        "componentName": "StepperLabelPositionBottomExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "@angular/components-examples/material/stepper"
        }
    },
    "stepper-optional": {
        "title": "Stepper with optional steps",
        "componentName": "StepperOptionalExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "@angular/components-examples/material/stepper"
        }
    },
    "stepper-overview": {
        "title": "Stepper overview",
        "componentName": "StepperOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "@angular/components-examples/material/stepper"
        }
    },
    "stepper-states": {
        "title": "Stepper with customized states",
        "componentName": "StepperStatesExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "@angular/components-examples/material/stepper"
        }
    },
    "stepper-vertical": {
        "title": "Stepper vertical",
        "componentName": "StepperVerticalExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "StepperExamplesModule",
            "importSpecifier": "@angular/components-examples/material/stepper"
        }
    },
    "table-basic-flex": {
        "title": "Basic use of `<mat-table>` (uses display flex)",
        "componentName": "TableBasicFlexExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-basic": {
        "title": "Basic use of `<table mat-table>`",
        "componentName": "TableBasicExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-dynamic-columns": {
        "title": "Table dynamically changing the columns displayed",
        "componentName": "TableDynamicColumnsExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-expandable-rows": {
        "title": "Table with expandable rows",
        "componentName": "TableExpandableRowsExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-filtering": {
        "title": "Table with filtering",
        "componentName": "TableFilteringExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-footer-row": {
        "title": "Footer row table",
        "componentName": "TableFooterRowExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-http": {
        "title": "Table retrieving data through HTTP",
        "componentName": "TableHttpExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-multiple-header-footer": {
        "title": "Table with multiple header and footer rows",
        "componentName": "TableMultipleHeaderFooterExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-overview": {
        "title": "Data table with sorting, pagination, and filtering.",
        "componentName": "TableOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-pagination": {
        "title": "Table with pagination",
        "componentName": "TablePaginationExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-row-context": {
        "title": "Table showing each row context properties.",
        "componentName": "TableRowContextExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-selection": {
        "title": "Table with selection",
        "componentName": "TableSelectionExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-sorting": {
        "title": "Table with sorting",
        "componentName": "TableSortingExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-sticky-columns": {
        "title": "Table with sticky columns",
        "componentName": "TableStickyColumnsExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-sticky-complex-flex": {
        "title": "Flex-layout tables with toggle-able sticky headers, footers, and columns",
        "componentName": "TableStickyComplexFlexExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-sticky-complex": {
        "title": "Tables with toggle-able sticky headers, footers, and columns",
        "componentName": "TableStickyComplexExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-sticky-footer": {
        "title": "Table with a sticky footer",
        "componentName": "TableStickyFooterExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-sticky-header": {
        "title": "Table with sticky header",
        "componentName": "TableStickyHeaderExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-text-column-advanced": {
        "title": "Use of 'mat-text-column' with various configurations of the interface.",
        "componentName": "TableTextColumnAdvancedExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-text-column": {
        "title": "Use of `mat-text-column` which can be used for simple columns that only need to display\na text value for the header and cells.",
        "componentName": "TableTextColumnExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "table-wrapped": {
        "title": "Table example that shows how to wrap a table component for definition and behavior reuse.",
        "componentName": "TableWrappedExample",
        "additionalFiles": [
            "wrapper-table.html"
        ],
        "additionalComponents": [
            "WrapperTable"
        ],
        "module": {
            "name": "TableExamplesModule",
            "importSpecifier": "@angular/components-examples/material/table"
        }
    },
    "tab-group-align": {
        "title": "Tab group with aligned labels",
        "componentName": "TabGroupAlignExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tabs"
        }
    },
    "tab-group-animations": {
        "title": "Tab group animations",
        "componentName": "TabGroupAnimationsExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tabs"
        }
    },
    "tab-group-async": {
        "title": "Tab group with asynchronously loading tab contents",
        "componentName": "TabGroupAsyncExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tabs"
        }
    },
    "tab-group-basic": {
        "title": "Basic use of the tab group",
        "componentName": "TabGroupBasicExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tabs"
        }
    },
    "tab-group-custom-label": {
        "title": "Using tabs with a custom label template",
        "componentName": "TabGroupCustomLabelExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tabs"
        }
    },
    "tab-group-dynamic-height": {
        "title": "Tab group with dynamic height based on tab contents",
        "componentName": "TabGroupDynamicHeightExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tabs"
        }
    },
    "tab-group-dynamic": {
        "title": "Tab group with dynamically changing tabs",
        "componentName": "TabGroupDynamicExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tabs"
        }
    },
    "tab-group-header-below": {
        "title": "Tab group with the headers on the bottom",
        "componentName": "TabGroupHeaderBelowExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tabs"
        }
    },
    "tab-group-lazy-loaded": {
        "title": "Tab group where the tab content is loaded lazily (when activated)",
        "componentName": "TabGroupLazyLoadedExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tabs"
        }
    },
    "tab-group-stretched": {
        "title": "Tab group with stretched labels",
        "componentName": "TabGroupStretchedExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tabs"
        }
    },
    "tab-group-theme": {
        "title": "Customizing the theme options on the tab group",
        "componentName": "TabGroupThemeExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tabs"
        }
    },
    "tab-nav-bar-basic": {
        "title": "Basic use of the tab nav bar",
        "componentName": "TabNavBarBasicExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TabGroupExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tabs"
        }
    },
    "toolbar-multirow": {
        "title": "Multi-row toolbar",
        "componentName": "ToolbarMultirowExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ToolbarExamplesModule",
            "importSpecifier": "@angular/components-examples/material/toolbar"
        }
    },
    "toolbar-overview": {
        "title": "Basic toolbar",
        "componentName": "ToolbarOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "ToolbarExamplesModule",
            "importSpecifier": "@angular/components-examples/material/toolbar"
        }
    },
    "tooltip-auto-hide": {
        "title": "Tooltip that demonstrates auto-hiding when it clips out of its scrolling container.",
        "componentName": "TooltipAutoHideExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tooltip"
        }
    },
    "tooltip-custom-class": {
        "title": "Tooltip that can have a custom class applied.",
        "componentName": "TooltipCustomClassExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tooltip"
        }
    },
    "tooltip-delay": {
        "title": "Tooltip with a show and hide delay",
        "componentName": "TooltipDelayExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tooltip"
        }
    },
    "tooltip-disabled": {
        "title": "Tooltip that can be disabled",
        "componentName": "TooltipDisabledExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tooltip"
        }
    },
    "tooltip-manual": {
        "title": "Tooltip that can be manually shown/hidden.",
        "componentName": "TooltipManualExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tooltip"
        }
    },
    "tooltip-message": {
        "title": "Tooltip with a changing message",
        "componentName": "TooltipMessageExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tooltip"
        }
    },
    "tooltip-modified-defaults": {
        "title": "Tooltip with a show and hide delay",
        "componentName": "TooltipModifiedDefaultsExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tooltip"
        }
    },
    "tooltip-overview": {
        "title": "Basic tooltip",
        "componentName": "TooltipOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tooltip"
        }
    },
    "tooltip-position": {
        "title": "Tooltip with a custom position",
        "componentName": "TooltipPositionExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TooltipExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tooltip"
        }
    },
    "tree-checklist": {
        "title": "Tree with checkboxes",
        "componentName": "TreeChecklistExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TreeExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tree"
        }
    },
    "tree-dynamic": {
        "title": "Tree with dynamic data",
        "componentName": "TreeDynamicExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TreeExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tree"
        }
    },
    "tree-flat-overview": {
        "title": "Tree with flat nodes",
        "componentName": "TreeFlatOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TreeExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tree"
        }
    },
    "tree-loadmore": {
        "title": "Tree with partially loaded data",
        "componentName": "TreeLoadmoreExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TreeExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tree"
        }
    },
    "tree-nested-overview": {
        "title": "Tree with nested nodes",
        "componentName": "TreeNestedOverviewExample",
        "additionalFiles": [],
        "additionalComponents": [],
        "module": {
            "name": "TreeExamplesModule",
            "importSpecifier": "@angular/components-examples/material/tree"
        }
    }
};
//# sourceMappingURL=data:application/json;base64,